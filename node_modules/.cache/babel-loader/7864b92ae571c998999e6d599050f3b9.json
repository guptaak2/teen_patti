{"ast":null,"code":"var _jsxFileName = \"/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Card from './Card';\nimport ActionButtons from './ActionButtons';\nimport { deckArray } from '../utils/DeckArray';\nvar URL = \"https://us-central1-teen-patti-5a5fc.cloudfunctions.net\";\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n\n    this.shuffle = array => {\n      let currentIndex = array.length,\n          temporaryValue,\n          randomIndex;\n\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      ;\n      this.setState({\n        cardsArray: array\n      });\n      return array;\n    };\n\n    this.dealOneCard = () => {\n      let cardsArray = this.state.cardsArray;\n      const randomItem = cardsArray[Math.floor(Math.random() * cardsArray.length)];\n      const newCardsArray = cardsArray.filter(element => element.index !== randomItem.index);\n      this.setState({\n        cardsArray: newCardsArray\n      });\n      let cardsPickedArray = this.state.cardPicked;\n      cardsPickedArray.length < 52 && cardsPickedArray.push(randomItem);\n      this.setState({\n        cardPicked: cardsPickedArray\n      });\n    };\n\n    this.flip = () => {\n      this.setState({\n        front: !this.state.front\n      });\n    };\n\n    this.state = {\n      cardsArray: deckArray,\n      cards: [],\n      message: ''\n    };\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    const {\n      cards\n    } = this.state;\n    const newItem = this.newItem.value;\n    const isOnTheList = cards.includes(newItem);\n\n    if (isOnTheList) {\n      this.setState({\n        message: 'This item is already on the list'\n      });\n    } else {\n      return newItem !== '' && axios.post(URL + '/addCards', {\n        item: newItem\n      }).then(response => {\n        this.setState({\n          cards: response.data\n        });\n      });\n    }\n  }\n\n  getCards(event) {\n    event.preventDefault();\n    return axios.get(URL + '/getCards').then(response => {\n      this.setState({\n        cards: response.data\n      });\n    });\n  }\n\n  clearAll() {\n    this.setState({\n      cards: [],\n      message: 'No cards in the list, add some'\n    });\n  }\n\n  renderCards() {\n    const {\n      cards,\n      message\n    } = this.state;\n    return cards.map(item => {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 24\n        }\n      }, item.item);\n    });\n  }\n\n  render() {\n    const {\n      cards,\n      message\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      pt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.getCards.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, \"Get Cards\")), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Your cards are:\"), this.renderCards());\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js"],"names":["React","Component","axios","Button","Box","Card","ActionButtons","deckArray","URL","Cards","constructor","props","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","setState","cardsArray","dealOneCard","state","randomItem","newCardsArray","filter","element","index","cardsPickedArray","cardPicked","push","flip","front","cards","message","addItem","event","preventDefault","newItem","value","isOnTheList","includes","post","item","then","response","data","getCards","get","clearAll","renderCards","map","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Card from './Card';\nimport ActionButtons from './ActionButtons'\nimport {deckArray} from '../utils/DeckArray'\n\nvar URL = \"https://us-central1-teen-patti-5a5fc.cloudfunctions.net\"\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            cardsArray: deckArray,\n            cards: [],\n            message: '',\n        }\n    }\n\n    shuffle = (array) => {\n        let currentIndex = array.length, temporaryValue, randomIndex;\n        while (0 !== currentIndex) {\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        };\n        this.setState({ cardsArray: array })\n        return array;\n      };\n\n      dealOneCard = () => {\n        let cardsArray = this.state.cardsArray;\n        const randomItem = cardsArray[Math.floor(Math.random()*cardsArray.length)];\n        const newCardsArray = cardsArray.filter(element => element.index !== randomItem.index)\n        this.setState({ cardsArray: newCardsArray })\n        let cardsPickedArray = this.state.cardPicked;\n        cardsPickedArray.length < 52 &&\n        cardsPickedArray.push(randomItem);\n        this.setState({ cardPicked: cardsPickedArray })\n      };\n    \n      flip = () => {\n        this.setState({ front: !this.state.front})\n      };\n\n    addItem(event) {\n        event.preventDefault()\n        const { cards } = this.state;\n        const newItem = this.newItem.value;\n\n        const isOnTheList = cards.includes(newItem)\n\n        if (isOnTheList) {\n            this.setState({\n                message: 'This item is already on the list'\n            })\n\n        } else {\n            return newItem !== '' && axios.post(URL + '/addCards', { item: newItem }).then((response) => {\n                this.setState({\n                    cards: response.data\n                })\n            })\n        }\n\n    }\n\n    getCards(event) {\n        event.preventDefault()\n\n        return axios.get(URL + '/getCards').then((response) => {\n            this.setState({\n                cards: response.data\n            })\n        })\n    }\n\n    clearAll() {\n        this.setState({\n            cards: [],\n            message: 'No cards in the list, add some'\n        })\n    }\n\n    renderCards() {\n        const { cards, message } = this.state;\n        return (\n            cards.map(item => {\n                return <h3>{item.item}</h3>\n            })\n        )\n    }\n\n    render() {\n        const { cards, message } = this.state;\n        return (\n            <div className=\"container\">\n                <Box m={2} pt={3}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.getCards.bind(this)} >Get Cards</Button>\n                </Box>\n                <h1>Your cards are:</h1>\n                {this.renderCards()}\n            </div>\n        );\n    }\n}\n\nexport default Cards"]},"metadata":{},"sourceType":"module"}