{"ast":null,"code":"var _jsxFileName = \"/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase';\nimport '../App.css';\nconst divStyle = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nconst table = {\n  display: 'grid'\n};\nconst horizontal = {\n  display: 'flex',\n  justifyContent: 'center'\n};\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n    this.logout = this.logout.bind(this);\n    this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n    this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n    this.generate = this.generate.bind(this);\n    this.getCards = this.getCards.bind(this);\n    this.getRealCards = this.getRealCards.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n    this.packed = this.packed.bind(this);\n    this.showCards = this.showCards.bind(this);\n    this.updateTable = this.updateTable.bind(this);\n    this.scrollToBottom = this.scrollToBottom.bind(this);\n    this.getCellColor = this.getCellColor.bind(this);\n    this.getCardsMessage = this.getCardsMessage.bind(this);\n    this.state = {\n      cardIndicies: this.getCardIndicies(),\n      firstCard: [],\n      secondCard: [],\n      thirdCard: [],\n      fourthCard: [],\n      playerStats: [],\n      message: '',\n      numPlayers: 0,\n      numPackedPlayers: 0,\n      numCards: 3,\n      userState: this.props.userState,\n      displayName: '',\n      gameSet: true,\n      enableSee: this.getEnableSee(),\n      enablePack: this.getEnablePack(),\n      enableShow: this.getEnableShow(),\n      imageUrls: []\n    };\n  } // componentDidUpdate() {\n  //     this.scrollToBottom()\n  // }\n\n\n  scrollToBottom() {\n    const {\n      cardsStats\n    } = this.refs;\n    cardsStats.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\",\n      inline: \"nearest\"\n    });\n  }\n\n  componentDidMount() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          displayName: user.displayName,\n          userState: user\n        });\n      }\n    });\n    fire.database().ref('users').on('value', snap => {\n      var snapVal = snap.val();\n      this.setState({\n        gameSet: snapVal.isGameSet,\n        numCards: parseInt(snapVal.numCardsPerPlayer),\n        numPlayers: parseInt(snapVal.numPlayers),\n        numPackedPlayers: parseInt(snapVal.numPackedPlayers)\n      }, () => {\n        this.updateTable();\n      });\n    });\n    fire.database().ref('users/list').on('child_changed', snap => {\n      this.updateTable();\n    });\n    this.updateTable();\n  }\n\n  updateTable() {\n    this.setState({\n      playerStats: []\n    });\n\n    if (this.state.gameSet && parseInt(this.state.numPlayers) - parseInt(this.state.numPackedPlayers) == 2) {\n      if (this.getEnablePack()) {\n        this.storeEnableShow(true);\n      }\n    } else if (!this.state.gameSet) {\n      localStorage.clear();\n    }\n\n    fire.database().ref('users').child('list').once('value').then(snap => {\n      snap.forEach(user => {\n        if (user.val().isLoggedIn) {\n          var name = user.val().name;\n          var status = user.val().status;\n          var message = user.val().showCardsMessage;\n\n          if (status == 'SHOW') {\n            this.setState({\n              playerStats: this.state.playerStats.concat({\n                name,\n                status,\n                message\n              })\n            });\n          } else {\n            this.setState({\n              playerStats: this.state.playerStats.concat({\n                name,\n                status\n              })\n            });\n          }\n        }\n      });\n    }).then(u => {\n      this.scrollToBottom();\n    });\n  }\n\n  logout() {\n    localStorage.clear();\n    fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n      cards: null,\n      isLoggedIn: false,\n      status: 'BLIND',\n      showCardsMessage: ''\n    }).then(u => {\n      fire.auth().signOut().then(result => {\n        this.setState({\n          userState: null\n        });\n      });\n    });\n  }\n\n  resetGame(e) {\n    e.preventDefault();\n    localStorage.clear(); // update isGameSet to database after reset game\n\n    var updates = {};\n    var ref = fire.database().ref('users/');\n    updates['isGameSet'] = false;\n    updates['numPackedPlayers'] = 0;\n    this.setState({\n      gameSet: false,\n      firstCard: [],\n      secondCard: [],\n      thirdCard: [],\n      fourthCard: [],\n      message: '',\n      playerStats: [],\n      cardIndicies: [],\n      numPackedPlayers: 0\n    });\n    this.storeEnableSee(true);\n    this.storeEnablePack(false);\n    this.storeEnableShow(false);\n    ref.update(updates).then(u => {\n      fire.database().ref('users').child('list').once('value').then(snap => {\n        snap.forEach(user => {\n          if (user.val().isLoggedIn) {\n            fire.database().ref('users/list/' + user.key).update({\n              cards: null,\n              status: 'BLIND',\n              showCardsMessage: ''\n            });\n          }\n        });\n      });\n    });\n  }\n\n  generate(e) {\n    e.preventDefault(); // update isGameSet, numCards and numPlayers to database\n\n    var updates = {};\n    var ref = fire.database().ref('users/');\n    updates['isGameSet'] = true;\n    updates['numCardsPerPlayer'] = this.state.numCards;\n    updates['numPlayers'] = this.state.numPlayers;\n    ref.update(updates).then(u => {\n      this.setState({\n        gameSet: true\n      });\n    });\n    let randomNumbers = new Set();\n    let cardsTrips = [];\n\n    for (let i = 0; i < 52; i++) {\n      var rand = Math.floor(Math.random() * 51);\n      randomNumbers.add(rand);\n    }\n\n    var cardsSet = randomNumbers.values();\n    const cardsNum = this.state.numCards;\n\n    for (let j = 0; j < this.state.numPlayers; j++) {\n      if (cardsNum == 1) {\n        cardsTrips[j] = [cardsSet.next().value];\n      } else if (cardsNum == 2) {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value];\n      } else if (cardsNum == 3) {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n      } else if (cardsNum == 4) {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n      } else {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n      }\n    } // update cards to database\n\n\n    var i = 0;\n    fire.database().ref('users').child('list').once('value').then(snap => {\n      snap.forEach(user => {\n        if (user.val().isLoggedIn && i < this.state.numPlayers) {\n          fire.database().ref('users/list/' + user.key).update({\n            cards: cardsTrips[i]\n          });\n          i++;\n        }\n      });\n    });\n  }\n\n  getCards(e) {\n    e.preventDefault();\n\n    if (this.state.gameSet == true) {\n      fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then(snap => {\n        this.storeCardIndicies(snap.val());\n        this.getRealCards();\n      }).then(u => {\n        this.storeEnableSee(false);\n        this.storeEnablePack(true);\n        this.storeEnableShow(false);\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n          status: 'SEEN'\n        });\n      });\n    } else {\n      window.confirm(\"You need to setup a game before seeing your cards\");\n    }\n  }\n\n  getRealCards() {\n    const cardsNum = this.state.numCards;\n\n    if (cardsNum == 1) {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.storeFirstCard(snap.val());\n      });\n    } else if (cardsNum == 2) {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.storeFirstCard(snap.val());\n      }).then(u => {\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n          this.storeSecondCard(snap.val());\n        });\n      });\n    } else if (cardsNum == 3) {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.storeFirstCard(snap.val());\n      }).then(u => {\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n          this.storeSecondCard(snap.val());\n        }).then(u => {\n          fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then(snap => {\n            this.storeThirdCard(snap.val());\n          });\n        });\n      });\n    } else if (cardsNum == 4) {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.storeFirstCard(snap.val());\n      }).then(u => {\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n          this.storeSecondCard(snap.val());\n        }).then(u => {\n          fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then(snap => {\n            this.storeThirdCard(snap.val());\n          }).then(u => {\n            fire.database().ref('cards/' + this.state.cardIndicies[3]).once('value').then(snap => {\n              this.storeFourthCard(snap.val());\n            });\n          });\n        });\n      });\n    } else {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.storeFirstCard(snap.val());\n      }).then(u => {\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n          this.storeSecondCard(snap.val());\n        }).then(u => {\n          fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then(snap => {\n            this.storeThirdCard(snap.val());\n          });\n        });\n      });\n    }\n  }\n\n  packed(e) {\n    e.preventDefault();\n    this.storePacked();\n    var updates = {};\n    var ref = fire.database().ref('users/');\n    updates['numPackedPlayers'] = parseInt(this.state.numPackedPlayers) + 1;\n    ref.update(updates).then(u => {\n      this.setState({\n        numPackedPlayers: parseInt(this.state.numPackedPlayers) + 1\n      });\n    }).then(u => {\n      fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n        status: 'PACK'\n      });\n    });\n  }\n\n  showCards(e) {\n    e.preventDefault();\n    var msg = this.getCardsMessage();\n    this.storeEnableSee(false);\n    this.storeEnablePack(false);\n    this.storeEnableShow(false);\n    fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n      status: 'SHOW',\n      showCardsMessage: msg\n    });\n  }\n\n  renderStats() {\n    const stats = this.state.playerStats;\n    const trimmedStats = stats.slice(Math.max(stats.length - parseInt(this.state.numPlayers), 0));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      align: \"center\",\n      border: \"1\",\n      width: \"500px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 33\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 33\n      }\n    }, \"Status\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 33\n      }\n    }, \"Cards\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }\n    }, trimmedStats.map((row, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 41\n        }\n      }, row.name)), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          'background-color': this.getCellColor(row)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 96\n        }\n      }, /*#__PURE__*/React.createElement(\"font\", {\n        color: \"#FFF\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 100\n        }\n      }, row.status))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 41\n        }\n      }, row.message)));\n    }))));\n  }\n\n  renderCards() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }\n    }, this.getCardsMessage()));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setup_game\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    }, !this.state.gameSet && /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"numPlayers\",\n      label: \"Number of players\",\n      value: this.state.numPlayers,\n      onChange: this.handleNumPlayersFieldChange,\n      helperText: \"Please enter the number of players\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"numCards\",\n      label: \"Number of cards\",\n      value: this.state.numCards,\n      onChange: this.handleNumCardsFieldChange,\n      helperText: \"Please enter the number of cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      pt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.generate.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 29\n      }\n    }, \"SETUP GAME\")), \" \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      variant: \"outlined\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }\n    }, \"Hello, \", this.state.displayName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logout_reset\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.logout.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 25\n      }\n    }, \"Logout\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.resetGame.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 25\n      }\n    }, \"Reset Game\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logout_reset\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.getCards.bind(this),\n      disabled: !this.getEnableSee(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 25\n      }\n    }, \"See Cards\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        backgroundColor: 'crimson'\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.packed.bind(this),\n      disabled: !this.getEnablePack(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 25\n      }\n    }, \"Pack\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        backgroundColor: 'green'\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.showCards.bind(this),\n      disabled: !this.getEnableShow(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 25\n      }\n    }, \"Show Cards\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 21\n      }\n    }, \"Your cards are:\"), this.renderCards()), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    }, this.getCardPicture(\"10C\"), /*#__PURE__*/React.createElement(\"img\", {\n      width: \"100\",\n      height: \"100\",\n      src: this.state.url || 'http://via.placeholder.com/400x300',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"cardsStats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }\n    }, this.renderStats()));\n  }\n\n  handleNumPlayersFieldChange(e) {\n    e.preventDefault();\n    const num = e.target.value;\n    this.setState({\n      numPlayers: num\n    });\n  }\n\n  handleNumCardsFieldChange(e) {\n    e.preventDefault();\n    const num = e.target.value;\n    this.setState({\n      numCards: num\n    });\n  } // Util methods\n\n\n  getCellColor(row) {\n    if (row.status == 'BLIND') {\n      return 'black';\n    } else if (row.status == 'PACK') {\n      return 'crimson';\n    } else if (row.status == 'SEEN') {\n      return 'royalblue';\n    } else {\n      return 'green';\n    }\n  }\n\n  getCardPicture(cardFullName) {\n    fire.storage().ref('/').child(`${cardFullName}.png`).getDownloadURL().then(url => {\n      console.log(\"URL: \" + url);\n      const list = this.state.imageUrls.concat(url);\n      this.setState({\n        imageUrls: list\n      });\n    });\n  }\n\n  getCardsMessage() {\n    const cardsNum = this.state.numCards;\n    var msg = '';\n\n    if (this.state.gameSet && this.getCardIndicies().length > 0) {\n      if (cardsNum == 1) {\n        msg = msg + `${this.getFirstCard().card} ${this.getFirstCard().suit}`;\n      } else if (cardsNum == 2) {\n        msg = msg + `${this.getFirstCard().card} ${this.getFirstCard().suit}, ${this.getSecondCard().card} ${this.getSecondCard().suit}`;\n      } else if (cardsNum == 3) {\n        msg = msg + `${this.getFirstCard().card} ${this.getFirstCard().suit}, ${this.getSecondCard().card} ${this.getSecondCard().suit}, ${this.getThirdCard().card} ${this.getThirdCard().suit}`;\n      } else if (cardsNum == 4) {\n        msg = msg + `${this.getFirstCard().card} ${this.getFirstCard().suit}, ${this.getSecondCard().card} ${this.getSecondCard().suit}, ${this.getThirdCard().card} ${this.getThirdCard().suit}, ${this.getFourthCard().card} ${this.getFourthCard().suit}`;\n      }\n    }\n\n    return msg;\n  }\n\n  getCardsPictures() {\n    const cardsNum = this.state.numCards;\n    var msg = '';\n\n    if (this.state.gameSet && this.getCardIndicies().length > 0) {\n      if (cardsNum == 1) {\n        this.getCardPicture(this.getFirstCard().fullName);\n      } else if (cardsNum == 2) {\n        this.getCardPicture(this.getFirstCard().fullName);\n        this.getCardPicture(this.getSecondCard().fullName);\n      } else if (cardsNum == 3) {\n        this.getCardPicture(this.getFirstCard().fullName);\n        this.getCardPicture(this.getSecondCard().fullName);\n        this.getCardPicture(this.getThirdCard().fullName);\n      } else if (cardsNum == 4) {\n        this.getCardPicture(this.getFirstCard().fullName);\n        this.getCardPicture(this.getSecondCard().fullName);\n        this.getCardPicture(this.getThirdCard().fullName);\n      }\n\n      this.getCardPicture(this.getThirdCard().fullName);\n    }\n\n    return msg;\n  } // Store and get from local storage\n\n\n  storeCardIndicies(indicies) {\n    localStorage.setItem('cardIndicies', JSON.stringify(indicies));\n    this.setState({\n      cardIndicies: indicies\n    });\n  }\n\n  storeFirstCard(card) {\n    localStorage.setItem('firstCard', JSON.stringify(card));\n    this.setState({\n      firstCard: card\n    });\n  }\n\n  storeSecondCard(card) {\n    localStorage.setItem('secondCard', JSON.stringify(card));\n    this.setState({\n      secondCard: card\n    });\n  }\n\n  storeThirdCard(card) {\n    localStorage.setItem('thirdCard', JSON.stringify(card));\n    this.setState({\n      thirdCard: card\n    });\n  }\n\n  storeFourthCard(card) {\n    localStorage.setItem('fourthCard', JSON.stringify(card));\n    this.setState({\n      fourthCard: card\n    });\n  }\n\n  storeEnableSee(val) {\n    localStorage.setItem('enableSee', JSON.stringify(val));\n    this.setState({\n      enableSee: val\n    });\n  }\n\n  storeEnablePack(val) {\n    localStorage.setItem('enablePack', JSON.stringify(val));\n    this.setState({\n      enablePack: val\n    });\n  }\n\n  storeEnableShow(val) {\n    localStorage.setItem('enableShow', JSON.stringify(val));\n    this.setState({\n      enableShow: val\n    });\n  }\n\n  storePacked() {\n    localStorage.setItem('enableSee', JSON.stringify(false));\n    localStorage.setItem('enablePack', JSON.stringify(false));\n    localStorage.setItem('enableShow', JSON.stringify(false));\n    this.setState({\n      enableSee: false,\n      enablePack: false,\n      enableShow: false\n    });\n  }\n\n  getCardIndicies() {\n    return JSON.parse(localStorage.getItem('cardIndicies')) || [];\n  }\n\n  getFirstCard() {\n    return JSON.parse(localStorage.getItem('firstCard')) || '';\n  }\n\n  getSecondCard() {\n    return JSON.parse(localStorage.getItem('secondCard')) || '';\n  }\n\n  getThirdCard() {\n    return JSON.parse(localStorage.getItem('thirdCard')) || '';\n  }\n\n  getFourthCard() {\n    return JSON.parse(localStorage.getItem('fourthCard')) || '';\n  }\n\n  getEnableSee() {\n    if (JSON.parse(localStorage.getItem('enableSee') == null)) {\n      return true;\n    } else {\n      return JSON.parse(localStorage.getItem('enableSee'));\n    }\n  }\n\n  getEnablePack() {\n    if (JSON.parse(localStorage.getItem('enablePack') == null)) {\n      return false;\n    } else {\n      return JSON.parse(localStorage.getItem('enablePack'));\n    }\n  }\n\n  getEnableShow() {\n    if (JSON.parse(localStorage.getItem('enableShow') == null)) {\n      return false;\n    } else {\n      return JSON.parse(localStorage.getItem('enableShow'));\n    }\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js"],"names":["React","Component","TextField","Button","Box","fire","divStyle","display","justifyContent","table","horizontal","Cards","constructor","props","logout","bind","handleNumPlayersFieldChange","handleNumCardsFieldChange","generate","getCards","getRealCards","resetGame","packed","showCards","updateTable","scrollToBottom","getCellColor","getCardsMessage","state","cardIndicies","getCardIndicies","firstCard","secondCard","thirdCard","fourthCard","playerStats","message","numPlayers","numPackedPlayers","numCards","userState","displayName","gameSet","enableSee","getEnableSee","enablePack","getEnablePack","enableShow","getEnableShow","imageUrls","cardsStats","refs","scrollIntoView","behavior","block","inline","componentDidMount","auth","onAuthStateChanged","user","setState","database","ref","on","snap","snapVal","val","isGameSet","parseInt","numCardsPerPlayer","storeEnableShow","localStorage","clear","child","once","then","forEach","isLoggedIn","name","status","showCardsMessage","concat","u","currentUser","uid","update","cards","signOut","result","e","preventDefault","updates","storeEnableSee","storeEnablePack","key","randomNumbers","Set","cardsTrips","i","rand","Math","floor","random","add","cardsSet","values","cardsNum","j","next","value","storeCardIndicies","window","confirm","storeFirstCard","storeSecondCard","storeThirdCard","storeFourthCard","storePacked","msg","renderStats","stats","trimmedStats","slice","max","length","map","row","index","renderCards","render","backgroundColor","getCardPicture","url","num","target","cardFullName","storage","getDownloadURL","console","log","list","getFirstCard","card","suit","getSecondCard","getThirdCard","getFourthCard","getCardsPictures","fullName","indicies","setItem","JSON","stringify","parse","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\nimport '../App.css';\n\nconst divStyle = {\n    display: 'flex',\n    justifyContent: 'center'\n};\n\nconst table = {\n    display: 'grid'\n}\n\nconst horizontal = {\n    display: 'flex',\n    justifyContent: 'center'\n}\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.logout = this.logout.bind(this);\n        this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n        this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n        this.generate = this.generate.bind(this);\n        this.getCards = this.getCards.bind(this);\n        this.getRealCards = this.getRealCards.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n        this.packed = this.packed.bind(this);\n        this.showCards = this.showCards.bind(this);\n        this.updateTable = this.updateTable.bind(this);\n        this.scrollToBottom = this.scrollToBottom.bind(this);\n        this.getCellColor = this.getCellColor.bind(this);\n        this.getCardsMessage = this.getCardsMessage.bind(this);\n\n        this.state = {\n            cardIndicies: this.getCardIndicies(),\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            playerStats: [],\n            message: '',\n            numPlayers: 0,\n            numPackedPlayers: 0,\n            numCards: 3,\n            userState: this.props.userState,\n            displayName: '',\n            gameSet: true,\n            enableSee: this.getEnableSee(),\n            enablePack: this.getEnablePack(),\n            enableShow: this.getEnableShow(),\n            imageUrls: []\n        }\n    }\n\n    // componentDidUpdate() {\n    //     this.scrollToBottom()\n    // }\n\n    scrollToBottom() {\n        const { cardsStats } = this.refs;\n        cardsStats.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n\n    componentDidMount() {\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    displayName: user.displayName,\n                    userState: user\n                })\n            }\n        })\n\n        fire.database().ref('users').on('value', snap => {\n            var snapVal = snap.val()\n            this.setState({\n                gameSet: snapVal.isGameSet,\n                numCards: parseInt(snapVal.numCardsPerPlayer),\n                numPlayers: parseInt(snapVal.numPlayers),\n                numPackedPlayers: parseInt(snapVal.numPackedPlayers)\n            }, () => {\n                this.updateTable()\n            })\n        })\n\n        fire.database().ref('users/list').on('child_changed', snap => {\n            this.updateTable()\n        })\n\n        this.updateTable()\n    }\n\n    updateTable() {\n        this.setState({ playerStats: [] })\n        if (this.state.gameSet && (parseInt(this.state.numPlayers) - parseInt(this.state.numPackedPlayers) == 2)) {\n            if (this.getEnablePack()) {\n                this.storeEnableShow(true)\n            }\n        } else if (!this.state.gameSet) {\n            localStorage.clear()\n        }\n        fire.database().ref('users').child('list').once('value').then((snap) => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn) {\n                    var name = user.val().name\n                    var status = user.val().status\n                    var message = user.val().showCardsMessage\n                    if (status == 'SHOW') {\n                        this.setState({\n                            playerStats: this.state.playerStats.concat({ name, status, message })\n                        })\n                    } else {\n                        this.setState({\n                            playerStats: this.state.playerStats.concat({ name, status })\n                        })\n                    }\n                }\n            })\n        }).then((u) => {\n            this.scrollToBottom()\n        })\n    }\n\n    logout() {\n        localStorage.clear()\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n            cards: null,\n            isLoggedIn: false,\n            status: 'BLIND',\n            showCardsMessage: ''\n        }).then((u) => {\n            fire.auth().signOut().then((result) => {\n                this.setState({\n                    userState: null\n                })\n            })\n        })\n    }\n\n    resetGame(e) {\n        e.preventDefault()\n        localStorage.clear()\n        // update isGameSet to database after reset game\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['isGameSet'] = false;\n        updates['numPackedPlayers'] = 0;\n\n        this.setState({\n            gameSet: false,\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            message: '',\n            playerStats: [],\n            cardIndicies: [],\n            numPackedPlayers: 0\n        })\n\n        this.storeEnableSee(true)\n        this.storeEnablePack(false)\n        this.storeEnableShow(false)\n\n        ref.update(updates).then((u) => {\n            fire.database().ref('users').child('list').once('value').then((snap) => {\n                snap.forEach((user) => {\n                    if (user.val().isLoggedIn) {\n                        fire.database().ref('users/list/' + user.key).update({\n                            cards: null,\n                            status: 'BLIND',\n                            showCardsMessage: ''\n                        })\n                    }\n                })\n            })\n        })\n    }\n\n    generate(e) {\n        e.preventDefault()\n        // update isGameSet, numCards and numPlayers to database\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['isGameSet'] = true;\n        updates['numCardsPerPlayer'] = this.state.numCards\n        updates['numPlayers'] = this.state.numPlayers\n        ref.update(updates).then((u) => {\n            this.setState({\n                gameSet: true\n            })\n        })\n\n        let randomNumbers = new Set();\n        let cardsTrips = [];\n        for (let i = 0; i < 52; i++) {\n            var rand = Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n\n        var cardsSet = randomNumbers.values()\n        const cardsNum = this.state.numCards\n\n        for (let j = 0; j < this.state.numPlayers; j++) {\n            if (cardsNum == 1) {\n                cardsTrips[j] = [cardsSet.next().value];\n            } else if (cardsNum == 2) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 3) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 4) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            }\n        }\n\n        // update cards to database\n        var i = 0;\n        fire.database().ref('users').child('list').once('value').then((snap) => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn && i < this.state.numPlayers) {\n                    fire.database().ref('users/list/' + user.key).update({ cards: cardsTrips[i] })\n                    i++;\n                }\n            })\n        })\n    }\n\n    getCards(e) {\n        e.preventDefault()\n        if (this.state.gameSet == true) {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then((snap => {\n                this.storeCardIndicies(snap.val())\n                this.getRealCards()\n            })).then((u) => {\n                this.storeEnableSee(false)\n                this.storeEnablePack(true)\n                this.storeEnableShow(false)\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'SEEN' })\n            })\n        } else {\n            window.confirm(\"You need to setup a game before seeing your cards\")\n        }\n    }\n\n    getRealCards() {\n        const cardsNum = this.state.numCards\n        if (cardsNum == 1) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.storeFirstCard(snap.val())\n            }));\n        } else if (cardsNum == 2) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.storeFirstCard(snap.val())\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.storeSecondCard(snap.val())\n                }));\n            });\n        } else if (cardsNum == 3) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.storeFirstCard(snap.val())\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.storeSecondCard(snap.val())\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.storeThirdCard(snap.val())\n                    }))\n                });\n            });\n        } else if (cardsNum == 4) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.storeFirstCard(snap.val())\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.storeSecondCard(snap.val())\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.storeThirdCard(snap.val())\n                    })).then((u) => {\n                        fire.database().ref('cards/' + this.state.cardIndicies[3]).once('value').then((snap => {\n                            this.storeFourthCard(snap.val())\n                        }));\n                    });\n                });\n            });\n        } else {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.storeFirstCard(snap.val())\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.storeSecondCard(snap.val())\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.storeThirdCard(snap.val())\n                    }))\n                });\n            });\n        }\n    }\n\n    packed(e) {\n        e.preventDefault()\n        this.storePacked()\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['numPackedPlayers'] = parseInt(this.state.numPackedPlayers) + 1;\n        ref.update(updates).then((u) => {\n            this.setState({\n                numPackedPlayers: parseInt(this.state.numPackedPlayers) + 1\n            })\n        }).then((u) => {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'PACK' })\n        })\n    }\n\n    showCards(e) {\n        e.preventDefault()\n        var msg = this.getCardsMessage()\n\n        this.storeEnableSee(false)\n        this.storeEnablePack(false)\n        this.storeEnableShow(false)\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n            status: 'SHOW',\n            showCardsMessage: msg\n        })\n    }\n\n    renderStats() {\n        const stats = this.state.playerStats\n        const trimmedStats = stats.slice(Math.max(stats.length - parseInt(this.state.numPlayers), 0))\n        return (\n            <div style={table}>\n                <table align=\"center\" border=\"1\" width=\"500px\">\n                    <thead>\n                        <tr>\n                            <th><h2>Name</h2></th>\n                            <th><h2>Status</h2></th>\n                            <th><h2>Cards</h2></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {trimmedStats.map((row, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td><h3>{row.name}</h3></td>\n                                    <td style={{ 'background-color': this.getCellColor(row) }}><h3><font color=\"#FFF\">{row.status}</font></h3></td>\n                                    <td><h3>{row.message}</h3></td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>)\n    }\n\n    renderCards() {\n        return (\n            <div style={horizontal}>\n                <h2>{this.getCardsMessage()}</h2>\n            </div >\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"container\" >\n                <div className=\"setup_game\" style={divStyle}>\n                    {!this.state.gameSet && <div style={divStyle}>\n                        <Box m={2}>\n                            <TextField id=\"numPlayers\" label=\"Number of players\" value={this.state.numPlayers} onChange={this.handleNumPlayersFieldChange} helperText=\"Please enter the number of players\" />\n                        </Box>\n                        <Box m={2}>\n                            <TextField id=\"numCards\" label=\"Number of cards\" value={this.state.numCards} onChange={this.handleNumCardsFieldChange} helperText=\"Please enter the number of cards\" />\n                        </Box>\n                        <Box m={2} pt={3}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.generate.bind(this)}>SETUP GAME</Button>\n                        </Box> </div>}\n                </div><br /><br />\n                <Box>\n                    <Button size=\"large\" variant=\"outlined\" color=\"primary\" >Hello, {this.state.displayName}</Button>\n                </Box>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.resetGame.bind(this)} >Reset Game</Button>\n                    </Box>\n                </div>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.getCards.bind(this)} disabled={!this.getEnableSee()} >See Cards</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button style={{ backgroundColor: 'crimson' }} variant=\"contained\" color=\"primary\" onClick={this.packed.bind(this)} disabled={!this.getEnablePack()} >Pack</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button style={{ backgroundColor: 'green' }} variant=\"contained\" color=\"primary\" onClick={this.showCards.bind(this)} disabled={!this.getEnableShow()} >Show Cards</Button>\n                    </Box>\n                </div>\n                <div style={horizontal}>\n                    <h2>Your cards are:</h2>\n                    {this.renderCards()}\n                </div>\n                <div>\n                    {this.getCardPicture(\"10C\")}\n                    <img width=\"100\" height=\"100\" src={this.state.url || 'http://via.placeholder.com/400x300'}></img>\n                </div>\n                <div ref=\"cardsStats\">\n                    {this.renderStats()}\n                </div>\n            </div >\n        );\n    }\n\n    handleNumPlayersFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        this.setState({\n            numPlayers: num\n        })\n    }\n\n    handleNumCardsFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        this.setState({\n            numCards: num\n        })\n    }\n\n    // Util methods\n    getCellColor(row) {\n        if (row.status == 'BLIND') {\n            return 'black'\n        } else if (row.status == 'PACK') {\n            return 'crimson'\n        } else if (row.status == 'SEEN') {\n            return 'royalblue'\n        } else {\n            return 'green'\n        }\n    }\n\n    getCardPicture(cardFullName) {\n        fire.storage().ref('/').child(`${cardFullName}.png`).getDownloadURL().then(url => {\n            console.log(\"URL: \" + url)\n            const list = this.state.imageUrls.concat(url)\n            this.setState({ imageUrls: list })\n        })\n    }\n\n    getCardsMessage() {\n        const cardsNum = this.state.numCards\n        var msg = '';\n        if (this.state.gameSet && this.getCardIndicies().length > 0) {\n            if (cardsNum == 1) {\n                msg = msg + `${this.getFirstCard().card} ${this.getFirstCard().suit}`\n            } else if (cardsNum == 2) {\n                msg = msg + `${this.getFirstCard().card} ${this.getFirstCard().suit}, ${this.getSecondCard().card} ${this.getSecondCard().suit}`\n            } else if (cardsNum == 3) {\n                msg = msg + `${this.getFirstCard().card} ${this.getFirstCard().suit}, ${this.getSecondCard().card} ${this.getSecondCard().suit}, ${this.getThirdCard().card} ${this.getThirdCard().suit}`\n            } else if (cardsNum == 4) {\n                msg = msg + `${this.getFirstCard().card} ${this.getFirstCard().suit}, ${this.getSecondCard().card} ${this.getSecondCard().suit}, ${this.getThirdCard().card} ${this.getThirdCard().suit}, ${this.getFourthCard().card} ${this.getFourthCard().suit}`\n            }\n        }\n\n        return msg\n    }\n\n    getCardsPictures() {\n        const cardsNum = this.state.numCards\n        var msg = '';\n        if (this.state.gameSet && this.getCardIndicies().length > 0) {\n            if (cardsNum == 1) {\n                this.getCardPicture(this.getFirstCard().fullName)\n            } else if (cardsNum == 2) {\n                this.getCardPicture(this.getFirstCard().fullName)\n                this.getCardPicture(this.getSecondCard().fullName)\n            } else if (cardsNum == 3) {\n                this.getCardPicture(this.getFirstCard().fullName)\n                this.getCardPicture(this.getSecondCard().fullName)\n                this.getCardPicture(this.getThirdCard().fullName)\n            } else if (cardsNum == 4) {\n                this.getCardPicture(this.getFirstCard().fullName)\n                this.getCardPicture(this.getSecondCard().fullName)\n                this.getCardPicture(this.getThirdCard().fullName)\n            }this.getCardPicture(this.getThirdCard().fullName)\n        }\n\n        return msg\n    }\n\n    // Store and get from local storage\n    storeCardIndicies(indicies) {\n        localStorage.setItem('cardIndicies', JSON.stringify(indicies))\n        this.setState({ cardIndicies: indicies })\n    }\n\n    storeFirstCard(card) {\n        localStorage.setItem('firstCard', JSON.stringify(card))\n        this.setState({ firstCard: card })\n    }\n\n    storeSecondCard(card) {\n        localStorage.setItem('secondCard', JSON.stringify(card))\n        this.setState({ secondCard: card })\n    }\n\n    storeThirdCard(card) {\n        localStorage.setItem('thirdCard', JSON.stringify(card))\n        this.setState({ thirdCard: card })\n    }\n\n    storeFourthCard(card) {\n        localStorage.setItem('fourthCard', JSON.stringify(card))\n        this.setState({ fourthCard: card })\n    }\n\n    storeEnableSee(val) {\n        localStorage.setItem('enableSee', JSON.stringify(val))\n        this.setState({ enableSee: val })\n    }\n\n    storeEnablePack(val) {\n        localStorage.setItem('enablePack', JSON.stringify(val))\n        this.setState({ enablePack: val })\n    }\n\n    storeEnableShow(val) {\n        localStorage.setItem('enableShow', JSON.stringify(val))\n        this.setState({ enableShow: val })\n    }\n\n    storePacked() {\n        localStorage.setItem('enableSee', JSON.stringify(false))\n        localStorage.setItem('enablePack', JSON.stringify(false))\n        localStorage.setItem('enableShow', JSON.stringify(false))\n        this.setState({ \n            enableSee: false,\n            enablePack: false,\n            enableShow: false \n        })\n    }\n\n    getCardIndicies() {\n        return JSON.parse(localStorage.getItem('cardIndicies')) || []\n    }\n\n    getFirstCard() {\n        return JSON.parse(localStorage.getItem('firstCard')) || ''\n    }\n\n    getSecondCard() {\n        return JSON.parse(localStorage.getItem('secondCard')) || ''\n    }\n\n    getThirdCard() {\n        return JSON.parse(localStorage.getItem('thirdCard')) || ''\n    }\n\n    getFourthCard() {\n        return JSON.parse(localStorage.getItem('fourthCard')) || ''\n    }\n\n    getEnableSee() {\n        if (JSON.parse(localStorage.getItem('enableSee') == null)) {\n            return true\n        } else {\n            return JSON.parse(localStorage.getItem('enableSee'))\n        }\n    }\n\n    getEnablePack() {\n        if (JSON.parse(localStorage.getItem('enablePack') == null)) {\n            return false\n        } else {\n            return JSON.parse(localStorage.getItem('enablePack'))\n        }\n    }\n\n    getEnableShow() {\n        if (JSON.parse(localStorage.getItem('enableShow') == null)) {\n            return false\n        } else {\n            return JSON.parse(localStorage.getItem('enableShow'))\n        }\n    }\n}\n\nexport default Cards"]},"metadata":{},"sourceType":"module"}