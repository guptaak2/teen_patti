{"ast":null,"code":"var _jsxFileName = \"/Users/akhilgupta/teen_patti/teen_patti/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as Firebase from 'firebase'; // Get elements\n\nconst txtUsername = document.getElementById('txtUsername');\nconst txtPassword = document.getElementById('txtPassword');\nconst btnLogin = document.getElementById('btnLogin');\nconst btnSignup = document.getElementById('btnSignUp'); // Login Event\n\nbtnLogin.addEventListener('click', e => {\n  // Get username and password\n  const username = txtUsername.value;\n  const password = txtPassword.value;\n  const auth = Firebase.auth(); // Sign in\n\n  const promise = auth.signInWithEmailAndPassword(username, password);\n  promise.catch(e => console.log(e.message));\n}); // Signup Event\n\nbtnSignup.addEventListener('click', e => {\n  // Get username and password\n  const username = txtUsername.value;\n  const password = txtPassword.value;\n  const auth = Firebase.auth(); // Login\n\n  const promise = auth.createUserWithEmailAndPassword(username, password);\n  promise.catch(e => console.log(e.message));\n}); // Realtime auth listener\n\nFirebase.auth().onAuthStateChanged(firebaseUser => {\n  if (firebaseUser) {\n    console.log(firebaseUser);\n  } else {\n    console.log('not logged in');\n  }\n});\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 17\n  }\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/akhilgupta/teen_patti/teen_patti/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Firebase","txtUsername","document","getElementById","txtPassword","btnLogin","btnSignup","addEventListener","e","username","value","password","auth","promise","signInWithEmailAndPassword","catch","console","log","message","createUserWithEmailAndPassword","onAuthStateChanged","firebaseUser","render","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B,C,CAEA;;AACA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAApB;AACA,MAAMC,WAAW,GAAGF,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAApB;AACA,MAAME,QAAQ,GAAGH,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAjB;AACA,MAAMG,SAAS,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB,C,CAEA;;AACAE,QAAQ,CAACE,gBAAT,CAA0B,OAA1B,EAAmCC,CAAC,IAAI;AACtC;AACA,QAAMC,QAAQ,GAAGR,WAAW,CAACS,KAA7B;AACA,QAAMC,QAAQ,GAAGP,WAAW,CAACM,KAA7B;AACA,QAAME,IAAI,GAAGZ,QAAQ,CAACY,IAAT,EAAb,CAJsC,CAMtC;;AACA,QAAMC,OAAO,GAAGD,IAAI,CAACE,0BAAL,CAAgCL,QAAhC,EAA0CE,QAA1C,CAAhB;AACAE,EAAAA,OAAO,CAACE,KAAR,CAAcP,CAAC,IAAIQ,OAAO,CAACC,GAAR,CAAYT,CAAC,CAACU,OAAd,CAAnB;AACD,CATD,E,CAWA;;AACAZ,SAAS,CAACC,gBAAV,CAA2B,OAA3B,EAAoCC,CAAC,IAAI;AACvC;AACA,QAAMC,QAAQ,GAAGR,WAAW,CAACS,KAA7B;AACA,QAAMC,QAAQ,GAAGP,WAAW,CAACM,KAA7B;AACA,QAAME,IAAI,GAAGZ,QAAQ,CAACY,IAAT,EAAb,CAJuC,CAMvC;;AACA,QAAMC,OAAO,GAAGD,IAAI,CAACO,8BAAL,CAAoCV,QAApC,EAA8CE,QAA9C,CAAhB;AACAE,EAAAA,OAAO,CAACE,KAAR,CAAcP,CAAC,IAAIQ,OAAO,CAACC,GAAR,CAAYT,CAAC,CAACU,OAAd,CAAnB;AACD,CATD,E,CAWA;;AACAlB,QAAQ,CAACY,IAAT,GAAgBQ,kBAAhB,CAAmCC,YAAY,IAAI;AACjD,MAAIA,YAAJ,EAAkB;AAChBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,YAAZ;AACD,GAFD,MAEO;AACLL,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF,CAND;AAQApB,QAAQ,CAACyB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBpB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAJ,aAAa,CAACwB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as Firebase from 'firebase'\n\n// Get elements\nconst txtUsername = document.getElementById('txtUsername')\nconst txtPassword = document.getElementById('txtPassword')\nconst btnLogin = document.getElementById('btnLogin')\nconst btnSignup = document.getElementById('btnSignUp')\n\n// Login Event\nbtnLogin.addEventListener('click', e => {\n  // Get username and password\n  const username = txtUsername.value;\n  const password = txtPassword.value;\n  const auth = Firebase.auth();\n\n  // Sign in\n  const promise = auth.signInWithEmailAndPassword(username, password);\n  promise.catch(e => console.log(e.message))\n});\n\n// Signup Event\nbtnSignup.addEventListener('click', e => {\n  // Get username and password\n  const username = txtUsername.value;\n  const password = txtPassword.value;\n  const auth = Firebase.auth();\n\n  // Login\n  const promise = auth.createUserWithEmailAndPassword(username, password);\n  promise.catch(e => console.log(e.message))\n});\n\n// Realtime auth listener\nFirebase.auth().onAuthStateChanged(firebaseUser => {\n  if (firebaseUser) {\n    console.log(firebaseUser);\n  } else {\n    console.log('not logged in');\n  }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}