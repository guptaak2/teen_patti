{"ast":null,"code":"var _jsxFileName = \"/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase';\nimport '../App.css';\nimport backCardImg from './images/backCardImg.png';\nconst divStyle = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nconst table = {\n  display: 'grid'\n};\nconst horizontal = {\n  display: 'flex',\n  justifyContent: 'center'\n};\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setupBeforeUnloadListener = () => {\n      window.addEventListener(\"beforeunload\", ev => {\n        ev.preventDefault();\n        return this.logout();\n      });\n    };\n\n    this.logout = this.logout.bind(this);\n    this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n    this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n    this.generate = this.generate.bind(this);\n    this.getCards = this.getCards.bind(this);\n    this.getRealCards = this.getRealCards.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n    this.packed = this.packed.bind(this);\n    this.showCards = this.showCards.bind(this);\n    this.updateTable = this.updateTable.bind(this);\n    this.scrollToBottom = this.scrollToBottom.bind(this);\n    this.getCellColor = this.getCellColor.bind(this);\n    this.state = {\n      cardIndicies: this.getCardIndicies(),\n      firstCard: [],\n      secondCard: [],\n      thirdCard: [],\n      fourthCard: [],\n      playerStats: [],\n      numPlayers: 0,\n      numPackedPlayers: 0,\n      numCards: 3,\n      userState: this.props.userState,\n      displayName: '',\n      gameSet: true,\n      enableSee: this.getEnableSee(),\n      enablePack: this.getEnablePack(),\n      enableShow: this.getEnableShow(),\n      firstImgUrl: this.getFirstCardURL(),\n      secondImgUrl: this.getSecondCardURL(),\n      thirdImgUrl: this.getThirdCardURL(),\n      fourthImgUrl: this.getFourthCardURL()\n    };\n  }\n\n  scrollToBottom() {\n    const {\n      cardsStats\n    } = this.refs;\n    cardsStats.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\",\n      inline: \"nearest\"\n    });\n  }\n\n  componentDidMount() {\n    this.setupBeforeUnloadListener();\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          displayName: user.displayName,\n          userState: user\n        });\n      }\n    });\n    fire.database().ref('users').on('value', snap => {\n      var snapVal = snap.val();\n      this.setState({\n        gameSet: snapVal.isGameSet,\n        numCards: parseInt(snapVal.numCardsPerPlayer),\n        numPlayers: parseInt(snapVal.numPlayers),\n        numPackedPlayers: parseInt(snapVal.numPackedPlayers)\n      }, () => {\n        this.updateTable();\n      });\n    });\n    fire.database().ref('users/list').on('child_changed', snap => {\n      this.updateTable();\n    });\n    this.updateTable();\n  }\n\n  updateTable() {\n    this.setState({\n      playerStats: []\n    });\n\n    if (this.state.gameSet && parseInt(this.state.numPlayers) - parseInt(this.state.numPackedPlayers) == 2) {\n      if (this.getEnablePack()) {\n        this.storeEnableShow(true);\n      }\n    } else if (!this.state.gameSet) {\n      localStorage.clear();\n    }\n\n    fire.database().ref('users').child('list').once('value').then(snap => {\n      snap.forEach(user => {\n        if (user.val().isLoggedIn) {\n          var name = user.val().name;\n          var status = user.val().status;\n\n          if (user.val().cards != null) {\n            var urls = user.val().cards.urls;\n          }\n\n          if (status == 'SHOW' && urls != null) {\n            this.setState({\n              playerStats: this.state.playerStats.concat({\n                name,\n                status,\n                urls\n              })\n            });\n          } else {\n            this.setState({\n              playerStats: this.state.playerStats.concat({\n                name,\n                status\n              })\n            });\n          }\n        }\n      });\n    });\n  }\n\n  logout() {\n    localStorage.clear();\n    fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n      cards: null,\n      isLoggedIn: false,\n      status: 'BLIND'\n    }).then(u => {\n      fire.auth().signOut().then(result => {\n        this.setState({\n          userState: null\n        });\n      });\n    });\n  }\n\n  resetGame(e) {\n    e.preventDefault();\n    localStorage.clear(); // update isGameSet to database after reset game\n\n    var updates = {};\n    var ref = fire.database().ref('users/');\n    updates['isGameSet'] = false;\n    updates['numPackedPlayers'] = 0;\n    this.setState({\n      gameSet: false,\n      firstCard: [],\n      secondCard: [],\n      thirdCard: [],\n      fourthCard: [],\n      playerStats: [],\n      cardIndicies: [],\n      numPackedPlayers: 0,\n      firstImgUrl: '',\n      secondImgUrl: '',\n      thirdImgUrl: '',\n      fourthImgUrl: ''\n    });\n    this.storeEnableSee(true);\n    this.storeEnablePack(false);\n    this.storeEnableShow(false);\n    ref.update(updates).then(u => {\n      fire.database().ref('users').child('list').once('value').then(snap => {\n        snap.forEach(user => {\n          if (user.val().isLoggedIn) {\n            fire.database().ref('users/list/' + user.key).update({\n              cards: null,\n              status: 'BLIND'\n            });\n          }\n        });\n      });\n    });\n  }\n\n  generate(e) {\n    e.preventDefault(); // update isGameSet, numCards and numPlayers to database\n\n    var updates = {};\n    var ref = fire.database().ref('users/');\n    updates['isGameSet'] = true;\n    updates['numCardsPerPlayer'] = this.state.numCards;\n    updates['numPlayers'] = this.state.numPlayers;\n    ref.update(updates).then(u => {\n      this.setState({\n        gameSet: true\n      });\n    });\n    let randomNumbers = new Set();\n    let cardsTrips = [];\n\n    for (let i = 0; i < 52; i++) {\n      var rand = Math.floor(Math.random() * 51);\n      randomNumbers.add(rand);\n    }\n\n    var cardsSet = randomNumbers.values();\n    const cardsNum = this.state.numCards;\n\n    for (let j = 0; j < this.state.numPlayers; j++) {\n      if (cardsNum == 1) {\n        cardsTrips[j] = [cardsSet.next().value];\n      } else if (cardsNum == 2) {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value];\n      } else if (cardsNum == 3) {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n      } else if (cardsNum == 4) {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n      } else {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n      }\n    } // update cards to database\n\n\n    var i = 0;\n    fire.database().ref('users').child('list').once('value').then(snap => {\n      snap.forEach(user => {\n        if (user.val().isLoggedIn && i < this.state.numPlayers) {\n          fire.database().ref('users/list/' + user.key).update({\n            cards: cardsTrips[i]\n          });\n          i++;\n        }\n      });\n    });\n  }\n\n  getCards(e) {\n    e.preventDefault();\n\n    if (this.state.gameSet == true) {\n      fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then(snap => {\n        this.storeCardIndicies(snap.val());\n        this.getRealCards();\n      }).then(u => {\n        this.storeEnableSee(false);\n        this.storeEnablePack(true);\n        this.storeEnableShow(false);\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n          status: 'SEEN'\n        });\n      });\n    } else {\n      window.confirm(\"You need to setup a game before seeing your cards\");\n    }\n  }\n\n  getRealCards() {\n    const cardsNum = this.state.numCards;\n\n    if (cardsNum == 1) {\n      this.getFirstRealCard();\n    } else if (cardsNum == 2) {\n      this.getSecondRealCard();\n    } else if (cardsNum == 3) {\n      this.getThirdRealCard();\n    } else if (cardsNum == 4) {\n      this.getFourthRealCard();\n    } else {\n      this.getThirdRealCard();\n    }\n  }\n\n  packed(e) {\n    e.preventDefault();\n    this.storePacked();\n    var updates = {};\n    var ref = fire.database().ref('users/');\n    updates['numPackedPlayers'] = parseInt(this.state.numPackedPlayers) + 1;\n    ref.update(updates).then(u => {\n      this.setState({\n        numPackedPlayers: parseInt(this.state.numPackedPlayers) + 1\n      });\n    }).then(u => {\n      fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n        status: 'PACK'\n      });\n    });\n  }\n\n  showCards(e) {\n    e.preventDefault();\n    this.storeEnableSee(false);\n    this.storeEnablePack(false);\n    this.storeEnableShow(false);\n    fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n      status: 'SHOW'\n    });\n  }\n\n  renderStats() {\n    const stats = this.state.playerStats;\n    const trimmedStats = stats.slice(Math.max(stats.length - parseInt(this.state.numPlayers), 0));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      align: \"center\",\n      border: \"1\",\n      width: \"500px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 33\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 33\n      }\n    }, \"Status\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 33\n      }\n    }, \"Cards\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    }, trimmedStats.map((row, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 41\n        }\n      }, row.name)), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          'background-color': this.getCellColor(row)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 96\n        }\n      }, /*#__PURE__*/React.createElement(\"font\", {\n        color: \"#FFF\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 100\n        }\n      }, row.status))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 41\n        }\n      }, this.getRealCardsMessage(row.urls))));\n    }))));\n  }\n\n  renderCardsPictures() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }\n    }, this.renderRealCards());\n  }\n\n  renderRealCards() {\n    const cardsNum = this.state.numCards;\n\n    if (this.state.gameSet && this.getCardIndicies().length > 0) {\n      if (cardsNum == 1) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: horizontal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"first-card\",\n          src: this.getFirstCardURL(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }\n        }));\n      } else if (cardsNum == 2) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: horizontal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"first-card\",\n          src: this.getFirstCardURL(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"second-card\",\n          src: this.getSecondCardURL(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }\n        }));\n      } else if (cardsNum == 3) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: horizontal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"first-card\",\n          src: this.getFirstCardURL(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"second-card\",\n          src: this.getSecondCardURL(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"third-card\",\n          src: this.getThirdCardURL(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }\n        }));\n      } else if (cardsNum == 4) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: horizontal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"first-card\",\n          src: this.state.firstImgUrl || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"second-card\",\n          src: this.state.secondImgUrl || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"third-card\",\n          src: this.state.thirdImgUrl || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"fourth-card\",\n          src: this.state.fourthImgUrl || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }\n        }));\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setup_game\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    }, !this.state.gameSet && /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"numPlayers\",\n      label: \"Number of players\",\n      value: this.state.numPlayers,\n      onChange: this.handleNumPlayersFieldChange,\n      helperText: \"Please enter the number of players\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"numCards\",\n      label: \"Number of cards\",\n      value: this.state.numCards,\n      onChange: this.handleNumCardsFieldChange,\n      helperText: \"Please enter the number of cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      pt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.generate.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 29\n      }\n    }, \"SETUP GAME\")), \" \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      variant: \"outlined\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }\n    }, \"Hello, \", this.state.displayName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logout_reset\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.logout.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 25\n      }\n    }, \"Logout\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.resetGame.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 25\n      }\n    }, \"Reset Game\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logout_reset\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.getCards.bind(this),\n      disabled: !this.getEnableSee(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 25\n      }\n    }, \"See Cards\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        backgroundColor: 'crimson'\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.packed.bind(this),\n      disabled: !this.getEnablePack(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 25\n      }\n    }, \"Pack\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        backgroundColor: 'green'\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.showCards.bind(this),\n      disabled: !this.getEnableShow(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 25\n      }\n    }, \"Show Cards\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 21\n      }\n    }, \"Your cards are:\"), this.renderCardsPictures()), /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"cardsStats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    }, this.renderStats()));\n  }\n\n  handleNumPlayersFieldChange(e) {\n    e.preventDefault();\n    const num = e.target.value;\n    this.setState({\n      numPlayers: num\n    });\n  }\n\n  handleNumCardsFieldChange(e) {\n    e.preventDefault();\n    const num = e.target.value;\n    this.setState({\n      numCards: num\n    });\n  } // Util methods\n\n\n  getCellColor(row) {\n    if (row.status == 'BLIND') {\n      return 'black';\n    } else if (row.status == 'PACK') {\n      return 'crimson';\n    } else if (row.status == 'SEEN') {\n      return 'royalblue';\n    } else {\n      return 'green';\n    }\n  }\n\n  getRealCardsMessage(urls) {\n    const cardsNum = this.state.numCards;\n\n    if (this.state.gameSet && urls != null && urls.length > 0) {\n      if (cardsNum == 1) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: horizontal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"first-card\",\n          src: urls[0] || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 25\n          }\n        }));\n      } else if (cardsNum == 2) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: horizontal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"first-card\",\n          src: urls[0] || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"second-card\",\n          src: urls[1] || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }\n        }));\n      } else if (cardsNum == 3) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: horizontal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"first-card\",\n          src: urls[0] || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"second-card\",\n          src: urls[1] || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"third-card\",\n          src: urls[2] || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 25\n          }\n        }));\n      } else if (cardsNum == 4) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: horizontal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"first-card\",\n          src: urls[0] || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"second-card\",\n          src: urls[1] || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"third-card\",\n          src: urls[2] || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          width: \"100\",\n          height: \"125\",\n          alt: \"fourth-card\",\n          src: urls[3] || '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 25\n          }\n        }));\n      }\n    }\n  }\n\n  getFirstRealCard() {\n    fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n      this.storeFirstCard(snap.val());\n    }).then(u => {\n      fire.storage().ref('/').child(`${this.getFirstCard().fullName}.png`).getDownloadURL().then(url => {\n        this.storeFirstCardURL(url);\n      }).then(u => {\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({\n          0: this.getFirstCardURL()\n        });\n      });\n    });\n  }\n\n  getSecondRealCard() {\n    this.getFirstRealCard();\n    fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n      this.storeSecondCard(snap.val());\n    }).then(u => {\n      fire.storage().ref('/').child(`${this.getSecondCard().fullName}.png`).getDownloadURL().then(url => {\n        this.storeSecondCardURL(url);\n      }).then(u => {\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({\n          1: this.getSecondCardURL()\n        });\n      });\n    });\n  }\n\n  getThirdRealCard() {\n    this.getFirstRealCard();\n    this.getSecondRealCard();\n    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then(snap => {\n      this.storeThirdCard(snap.val());\n    }).then(u => {\n      fire.storage().ref('/').child(`${this.getThirdCard().fullName}.png`).getDownloadURL().then(url => {\n        this.storeThirdCardURL(url);\n      }).then(u => {\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({\n          2: this.getThirdCardURL()\n        });\n      });\n    });\n  }\n\n  getFourthRealCard() {\n    this.getFirstRealCard();\n    this.getSecondRealCard();\n    this.getThirdRealCard();\n    fire.database().ref('cards/' + this.state.cardIndicies[3]).once('value').then(snap => {\n      this.storeFourthCard(snap.val());\n    }).then(u => {\n      fire.storage().ref('/').child(`${this.getFourthCard().fullName}.png`).getDownloadURL().then(url => {\n        this.storeFourthCardURL(url);\n      }).then(u => {\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({\n          3: this.getFourthCardURL()\n        });\n      });\n    });\n  } // Store and get from local storage\n\n\n  storeCardIndicies(indicies) {\n    localStorage.setItem('cardIndicies', JSON.stringify(indicies));\n    this.setState({\n      cardIndicies: indicies\n    });\n  }\n\n  storeFirstCard(card) {\n    localStorage.setItem('firstCard', JSON.stringify(card));\n    this.setState({\n      firstCard: card\n    });\n  }\n\n  storeSecondCard(card) {\n    localStorage.setItem('secondCard', JSON.stringify(card));\n    this.setState({\n      secondCard: card\n    });\n  }\n\n  storeThirdCard(card) {\n    localStorage.setItem('thirdCard', JSON.stringify(card));\n    this.setState({\n      thirdCard: card\n    });\n  }\n\n  storeFourthCard(card) {\n    localStorage.setItem('fourthCard', JSON.stringify(card));\n    this.setState({\n      fourthCard: card\n    });\n  }\n\n  storeFirstCardURL(url) {\n    localStorage.setItem('firstCardURL', JSON.stringify(url));\n    this.setState({\n      firstImgUrl: url\n    });\n  }\n\n  storeSecondCardURL(url) {\n    localStorage.setItem('secondCardURL', JSON.stringify(url));\n    this.setState({\n      secondImgUrl: url\n    });\n  }\n\n  storeThirdCardURL(url) {\n    localStorage.setItem('thirdCardURL', JSON.stringify(url));\n    this.setState({\n      thirdImgUrl: url\n    });\n  }\n\n  storeFourthCardURL(url) {\n    localStorage.setItem('fourthCardURL', JSON.stringify(url));\n    this.setState({\n      fourthImgUrl: url\n    });\n  }\n\n  storeEnableSee(val) {\n    localStorage.setItem('enableSee', JSON.stringify(val));\n    this.setState({\n      enableSee: val\n    });\n  }\n\n  storeEnablePack(val) {\n    localStorage.setItem('enablePack', JSON.stringify(val));\n    this.setState({\n      enablePack: val\n    });\n  }\n\n  storeEnableShow(val) {\n    localStorage.setItem('enableShow', JSON.stringify(val));\n    this.setState({\n      enableShow: val\n    });\n  }\n\n  storePacked() {\n    localStorage.setItem('enableSee', JSON.stringify(false));\n    localStorage.setItem('enablePack', JSON.stringify(false));\n    localStorage.setItem('enableShow', JSON.stringify(false));\n    this.setState({\n      enableSee: false,\n      enablePack: false,\n      enableShow: false\n    });\n  }\n\n  getCardIndicies() {\n    return JSON.parse(localStorage.getItem('cardIndicies')) || [];\n  }\n\n  getFirstCard() {\n    return JSON.parse(localStorage.getItem('firstCard')) || '';\n  }\n\n  getSecondCard() {\n    return JSON.parse(localStorage.getItem('secondCard')) || '';\n  }\n\n  getThirdCard() {\n    return JSON.parse(localStorage.getItem('thirdCard')) || '';\n  }\n\n  getFourthCard() {\n    return JSON.parse(localStorage.getItem('fourthCard')) || '';\n  }\n\n  getFirstCardURL() {\n    return JSON.parse(localStorage.getItem('firstCardURL')) || backCardImg;\n  }\n\n  getSecondCardURL() {\n    return JSON.parse(localStorage.getItem('secondCardURL')) || backCardImg;\n  }\n\n  getThirdCardURL() {\n    return JSON.parse(localStorage.getItem('thirdCardURL')) || backCardImg;\n  }\n\n  getFourthCardURL() {\n    return JSON.parse(localStorage.getItem('fourthCardURL')) || backCardImg;\n  }\n\n  getEnableSee() {\n    if (JSON.parse(localStorage.getItem('enableSee') == null)) {\n      return true;\n    } else {\n      return JSON.parse(localStorage.getItem('enableSee'));\n    }\n  }\n\n  getEnablePack() {\n    if (JSON.parse(localStorage.getItem('enablePack') == null)) {\n      return false;\n    } else {\n      return JSON.parse(localStorage.getItem('enablePack'));\n    }\n  }\n\n  getEnableShow() {\n    if (JSON.parse(localStorage.getItem('enableShow') == null)) {\n      return false;\n    } else {\n      return JSON.parse(localStorage.getItem('enableShow'));\n    }\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js"],"names":["React","Component","TextField","Button","Box","fire","backCardImg","divStyle","display","justifyContent","table","horizontal","Cards","constructor","props","setupBeforeUnloadListener","window","addEventListener","ev","preventDefault","logout","bind","handleNumPlayersFieldChange","handleNumCardsFieldChange","generate","getCards","getRealCards","resetGame","packed","showCards","updateTable","scrollToBottom","getCellColor","state","cardIndicies","getCardIndicies","firstCard","secondCard","thirdCard","fourthCard","playerStats","numPlayers","numPackedPlayers","numCards","userState","displayName","gameSet","enableSee","getEnableSee","enablePack","getEnablePack","enableShow","getEnableShow","firstImgUrl","getFirstCardURL","secondImgUrl","getSecondCardURL","thirdImgUrl","getThirdCardURL","fourthImgUrl","getFourthCardURL","cardsStats","refs","scrollIntoView","behavior","block","inline","componentDidMount","auth","onAuthStateChanged","user","setState","database","ref","on","snap","snapVal","val","isGameSet","parseInt","numCardsPerPlayer","storeEnableShow","localStorage","clear","child","once","then","forEach","isLoggedIn","name","status","cards","urls","concat","currentUser","uid","update","u","signOut","result","e","updates","storeEnableSee","storeEnablePack","key","randomNumbers","Set","cardsTrips","i","rand","Math","floor","random","add","cardsSet","values","cardsNum","j","next","value","storeCardIndicies","confirm","getFirstRealCard","getSecondRealCard","getThirdRealCard","getFourthRealCard","storePacked","renderStats","stats","trimmedStats","slice","max","length","map","row","index","getRealCardsMessage","renderCardsPictures","renderRealCards","render","backgroundColor","num","target","storeFirstCard","storage","getFirstCard","fullName","getDownloadURL","url","storeFirstCardURL","storeSecondCard","getSecondCard","storeSecondCardURL","storeThirdCard","getThirdCard","storeThirdCardURL","storeFourthCard","getFourthCard","storeFourthCardURL","indicies","setItem","JSON","stringify","card","parse","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\nimport '../App.css';\nimport backCardImg from './images/backCardImg.png'\n\nconst divStyle = {\n    display: 'flex',\n    justifyContent: 'center'\n};\n\nconst table = {\n    display: 'grid'\n}\n\nconst horizontal = {\n    display: 'flex',\n    justifyContent: 'center'\n}\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.logout = this.logout.bind(this);\n        this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n        this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n        this.generate = this.generate.bind(this);\n        this.getCards = this.getCards.bind(this);\n        this.getRealCards = this.getRealCards.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n        this.packed = this.packed.bind(this);\n        this.showCards = this.showCards.bind(this);\n        this.updateTable = this.updateTable.bind(this);\n        this.scrollToBottom = this.scrollToBottom.bind(this);\n        this.getCellColor = this.getCellColor.bind(this);\n\n        this.state = {\n            cardIndicies: this.getCardIndicies(),\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            playerStats: [],\n            numPlayers: 0,\n            numPackedPlayers: 0,\n            numCards: 3,\n            userState: this.props.userState,\n            displayName: '',\n            gameSet: true,\n            enableSee: this.getEnableSee(),\n            enablePack: this.getEnablePack(),\n            enableShow: this.getEnableShow(),\n            firstImgUrl: this.getFirstCardURL(),\n            secondImgUrl: this.getSecondCardURL(),\n            thirdImgUrl: this.getThirdCardURL(),\n            fourthImgUrl: this.getFourthCardURL()\n        }\n    }\n\n    scrollToBottom() {\n        const { cardsStats } = this.refs;\n        cardsStats.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n\n    setupBeforeUnloadListener = () => {\n        window.addEventListener(\"beforeunload\", (ev) => {\n            ev.preventDefault();\n            return this.logout();\n        });\n    };\n\n    componentDidMount() {\n        this.setupBeforeUnloadListener();\n\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    displayName: user.displayName,\n                    userState: user\n                })\n            }\n        })\n\n        fire.database().ref('users').on('value', snap => {\n            var snapVal = snap.val()\n            this.setState({\n                gameSet: snapVal.isGameSet,\n                numCards: parseInt(snapVal.numCardsPerPlayer),\n                numPlayers: parseInt(snapVal.numPlayers),\n                numPackedPlayers: parseInt(snapVal.numPackedPlayers)\n            }, () => {\n                this.updateTable()\n            })\n        })\n\n        fire.database().ref('users/list').on('child_changed', snap => {\n            this.updateTable()\n        })\n\n        this.updateTable()\n    }\n\n    updateTable() {\n        this.setState({ playerStats: [] })\n        if (this.state.gameSet && (parseInt(this.state.numPlayers) - parseInt(this.state.numPackedPlayers) == 2)) {\n            if (this.getEnablePack()) {\n                this.storeEnableShow(true)\n            }\n        } else if (!this.state.gameSet) {\n            localStorage.clear()\n        }\n\n        fire.database().ref('users').child('list').once('value').then((snap) => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn) {\n                    var name = user.val().name\n                    var status = user.val().status\n                    if (user.val().cards != null) {\n                        var urls = user.val().cards.urls\n                    }\n                    if (status == 'SHOW' && urls != null) {\n                        this.setState({\n                            playerStats: this.state.playerStats.concat({ name, status, urls })\n                        })\n                    } else {\n                        this.setState({\n                            playerStats: this.state.playerStats.concat({ name, status })\n                        })\n                    }\n                }\n            })\n        })\n    }\n\n    logout() {\n        localStorage.clear()\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n            cards: null,\n            isLoggedIn: false,\n            status: 'BLIND'\n        }).then((u) => {\n            fire.auth().signOut().then((result) => {\n                this.setState({\n                    userState: null\n                })\n            })\n        })\n    }\n\n    resetGame(e) {\n        e.preventDefault()\n        localStorage.clear()\n        // update isGameSet to database after reset game\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['isGameSet'] = false;\n        updates['numPackedPlayers'] = 0;\n\n        this.setState({\n            gameSet: false,\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            playerStats: [],\n            cardIndicies: [],\n            numPackedPlayers: 0,\n            firstImgUrl: '',\n            secondImgUrl: '',\n            thirdImgUrl: '',\n            fourthImgUrl: ''\n        })\n\n        this.storeEnableSee(true)\n        this.storeEnablePack(false)\n        this.storeEnableShow(false)\n\n        ref.update(updates).then((u) => {\n            fire.database().ref('users').child('list').once('value').then((snap) => {\n                snap.forEach((user) => {\n                    if (user.val().isLoggedIn) {\n                        fire.database().ref('users/list/' + user.key).update({\n                            cards: null,\n                            status: 'BLIND'\n                        })\n                    }\n                })\n            })\n        })\n    }\n\n    generate(e) {\n        e.preventDefault()\n        // update isGameSet, numCards and numPlayers to database\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['isGameSet'] = true;\n        updates['numCardsPerPlayer'] = this.state.numCards\n        updates['numPlayers'] = this.state.numPlayers\n        ref.update(updates).then((u) => {\n            this.setState({\n                gameSet: true\n            })\n        })\n\n        let randomNumbers = new Set();\n        let cardsTrips = [];\n        for (let i = 0; i < 52; i++) {\n            var rand = Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n\n        var cardsSet = randomNumbers.values()\n        const cardsNum = this.state.numCards\n\n        for (let j = 0; j < this.state.numPlayers; j++) {\n            if (cardsNum == 1) {\n                cardsTrips[j] = [cardsSet.next().value];\n            } else if (cardsNum == 2) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 3) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 4) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            }\n        }\n\n        // update cards to database\n        var i = 0;\n        fire.database().ref('users').child('list').once('value').then((snap) => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn && i < this.state.numPlayers) {\n                    fire.database().ref('users/list/' + user.key).update({ cards: cardsTrips[i] })\n                    i++;\n                }\n            })\n        })\n    }\n\n    getCards(e) {\n        e.preventDefault()\n        if (this.state.gameSet == true) {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then((snap => {\n                this.storeCardIndicies(snap.val())\n                this.getRealCards()\n            })).then((u) => {\n                this.storeEnableSee(false)\n                this.storeEnablePack(true)\n                this.storeEnableShow(false)\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'SEEN' })\n            })\n        } else {\n            window.confirm(\"You need to setup a game before seeing your cards\")\n        }\n    }\n\n    getRealCards() {\n        const cardsNum = this.state.numCards\n        if (cardsNum == 1) {\n            this.getFirstRealCard()\n        } else if (cardsNum == 2) {\n            this.getSecondRealCard()\n        } else if (cardsNum == 3) {\n            this.getThirdRealCard()\n        } else if (cardsNum == 4) {\n            this.getFourthRealCard()\n        } else {\n            this.getThirdRealCard()\n        }\n    }\n\n    packed(e) {\n        e.preventDefault()\n        this.storePacked()\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['numPackedPlayers'] = parseInt(this.state.numPackedPlayers) + 1;\n        ref.update(updates).then((u) => {\n            this.setState({\n                numPackedPlayers: parseInt(this.state.numPackedPlayers) + 1\n            })\n        }).then((u) => {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'PACK' })\n        })\n    }\n\n    showCards(e) {\n        e.preventDefault()\n\n        this.storeEnableSee(false)\n        this.storeEnablePack(false)\n        this.storeEnableShow(false)\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'SHOW' })\n    }\n\n    renderStats() {\n        const stats = this.state.playerStats\n        const trimmedStats = stats.slice(Math.max(stats.length - parseInt(this.state.numPlayers), 0))\n        return (\n            <div style={table}>\n                <table align=\"center\" border=\"1\" width=\"500px\">\n                    <thead>\n                        <tr>\n                            <th><h2>Name</h2></th>\n                            <th><h2>Status</h2></th>\n                            <th><h2>Cards</h2></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {trimmedStats.map((row, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td><h3>{row.name}</h3></td>\n                                    <td style={{ 'background-color': this.getCellColor(row) }}><h3><font color=\"#FFF\">{row.status}</font></h3></td>\n                                    <td><h3>{this.getRealCardsMessage(row.urls)}</h3></td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>)\n    }\n\n    renderCardsPictures() {\n        return (\n            <div style={horizontal}>\n                {this.renderRealCards()}\n            </div>\n        )\n    }\n\n    renderRealCards() {\n        const cardsNum = this.state.numCards\n        if (this.state.gameSet && this.getCardIndicies().length > 0) {\n            if (cardsNum == 1) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={this.getFirstCardURL()}></img>\n                    </div>\n                )\n            } else if (cardsNum == 2) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={this.getFirstCardURL()}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={this.getSecondCardURL()}></img>\n                    </div>\n                )\n            } else if (cardsNum == 3) {\n                return (\n                    <div style={horizontal}>                \n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={this.getFirstCardURL()}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={this.getSecondCardURL()}></img>\n                        <img width=\"100\" height=\"125\" alt=\"third-card\" src={this.getThirdCardURL()}></img>\n                    </div>\n                )\n            } else if (cardsNum == 4) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={this.state.firstImgUrl || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={this.state.secondImgUrl || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"third-card\" src={this.state.thirdImgUrl || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"fourth-card\" src={this.state.fourthImgUrl || ''}></img>\n                    </div>\n                )\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\" >\n                <div className=\"setup_game\" style={divStyle}>\n                    {!this.state.gameSet && <div style={divStyle}>\n                        <Box m={2}>\n                            <TextField id=\"numPlayers\" label=\"Number of players\" value={this.state.numPlayers} onChange={this.handleNumPlayersFieldChange} helperText=\"Please enter the number of players\" />\n                        </Box>\n                        <Box m={2}>\n                            <TextField id=\"numCards\" label=\"Number of cards\" value={this.state.numCards} onChange={this.handleNumCardsFieldChange} helperText=\"Please enter the number of cards\" />\n                        </Box>\n                        <Box m={2} pt={3}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.generate.bind(this)}>SETUP GAME</Button>\n                        </Box> </div>}\n                </div><br /><br />\n                <Box>\n                    <Button size=\"large\" variant=\"outlined\" color=\"primary\" >Hello, {this.state.displayName}</Button>\n                </Box>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.resetGame.bind(this)} >Reset Game</Button>\n                    </Box>\n                </div>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.getCards.bind(this)} disabled={!this.getEnableSee()} >See Cards</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button style={{ backgroundColor: 'crimson' }} variant=\"contained\" color=\"primary\" onClick={this.packed.bind(this)} disabled={!this.getEnablePack()} >Pack</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button style={{ backgroundColor: 'green' }} variant=\"contained\" color=\"primary\" onClick={this.showCards.bind(this)} disabled={!this.getEnableShow()} >Show Cards</Button>\n                    </Box>\n                </div>\n                <div style={horizontal}>\n                    <h2>Your cards are:</h2>\n                    {this.renderCardsPictures()}\n                </div>\n                <div ref=\"cardsStats\">\n                    {this.renderStats()}\n                </div>\n            </div >\n        );\n    }\n\n    handleNumPlayersFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        this.setState({\n            numPlayers: num\n        })\n    }\n\n    handleNumCardsFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        this.setState({\n            numCards: num\n        })\n    }\n\n    // Util methods\n    getCellColor(row) {\n        if (row.status == 'BLIND') {\n            return 'black'\n        } else if (row.status == 'PACK') {\n            return 'crimson'\n        } else if (row.status == 'SEEN') {\n            return 'royalblue'\n        } else {\n            return 'green'\n        }\n    }\n\n    getRealCardsMessage(urls) {\n        const cardsNum = this.state.numCards\n        if (this.state.gameSet && urls != null && urls.length > 0) {\n            if (cardsNum == 1) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={urls[0] || ''}></img>\n                    </div>\n                )\n            } else if (cardsNum == 2) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={urls[0] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={urls[1] || ''}></img>\n                    </div>\n                )\n            } else if (cardsNum == 3) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={urls[0] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={urls[1] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"third-card\" src={urls[2] || ''}></img>\n                    </div>\n                )\n            } else if (cardsNum == 4) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={urls[0] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={urls[1] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"third-card\" src={urls[2] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"fourth-card\" src={urls[3] || ''}></img>\n                    </div>\n                )\n            }\n        }\n    }\n\n    getFirstRealCard() {\n        fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n            this.storeFirstCard(snap.val())\n        })).then((u) => {\n            fire.storage().ref('/').child(`${this.getFirstCard().fullName}.png`).getDownloadURL().then(url => {\n                this.storeFirstCardURL(url)\n            }).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({ 0: this.getFirstCardURL() })\n            })\n        })\n    }\n\n    getSecondRealCard() {\n        this.getFirstRealCard()\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n            this.storeSecondCard(snap.val())\n        })).then((u) => {\n            fire.storage().ref('/').child(`${this.getSecondCard().fullName}.png`).getDownloadURL().then(url => {\n                this.storeSecondCardURL(url)\n            }).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({ 1: this.getSecondCardURL() })\n            })\n        });\n    }\n\n    getThirdRealCard() {\n        this.getFirstRealCard()\n        this.getSecondRealCard()\n        fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n            this.storeThirdCard(snap.val())\n        })).then((u) => {\n            fire.storage().ref('/').child(`${this.getThirdCard().fullName}.png`).getDownloadURL().then(url => {\n                this.storeThirdCardURL(url)\n            }).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({ 2: this.getThirdCardURL() })\n            })\n        });\n    }\n\n    getFourthRealCard() {\n        this.getFirstRealCard()\n        this.getSecondRealCard()\n        this.getThirdRealCard()\n        fire.database().ref('cards/' + this.state.cardIndicies[3]).once('value').then((snap => {\n            this.storeFourthCard(snap.val())\n        })).then((u) => {\n            fire.storage().ref('/').child(`${this.getFourthCard().fullName}.png`).getDownloadURL().then(url => {\n                this.storeFourthCardURL(url)\n            }).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({ 3: this.getFourthCardURL() })\n            })\n        });\n    }\n\n    // Store and get from local storage\n    storeCardIndicies(indicies) {\n        localStorage.setItem('cardIndicies', JSON.stringify(indicies))\n        this.setState({ cardIndicies: indicies })\n    }\n\n    storeFirstCard(card) {\n        localStorage.setItem('firstCard', JSON.stringify(card))\n        this.setState({ firstCard: card })\n    }\n\n    storeSecondCard(card) {\n        localStorage.setItem('secondCard', JSON.stringify(card))\n        this.setState({ secondCard: card })\n    }\n\n    storeThirdCard(card) {\n        localStorage.setItem('thirdCard', JSON.stringify(card))\n        this.setState({ thirdCard: card })\n    }\n\n    storeFourthCard(card) {\n        localStorage.setItem('fourthCard', JSON.stringify(card))\n        this.setState({ fourthCard: card })\n    }\n\n    storeFirstCardURL(url) {\n        localStorage.setItem('firstCardURL', JSON.stringify(url))\n        this.setState({ firstImgUrl: url })\n    }\n\n    storeSecondCardURL(url) {\n        localStorage.setItem('secondCardURL', JSON.stringify(url))\n        this.setState({ secondImgUrl: url })\n    }\n\n    storeThirdCardURL(url) {\n        localStorage.setItem('thirdCardURL', JSON.stringify(url))\n        this.setState({ thirdImgUrl: url })\n    }\n\n    storeFourthCardURL(url) {\n        localStorage.setItem('fourthCardURL', JSON.stringify(url))\n        this.setState({ fourthImgUrl: url })\n    }\n\n    storeEnableSee(val) {\n        localStorage.setItem('enableSee', JSON.stringify(val))\n        this.setState({ enableSee: val })\n    }\n\n    storeEnablePack(val) {\n        localStorage.setItem('enablePack', JSON.stringify(val))\n        this.setState({ enablePack: val })\n    }\n\n    storeEnableShow(val) {\n        localStorage.setItem('enableShow', JSON.stringify(val))\n        this.setState({ enableShow: val })\n    }\n\n    storePacked() {\n        localStorage.setItem('enableSee', JSON.stringify(false))\n        localStorage.setItem('enablePack', JSON.stringify(false))\n        localStorage.setItem('enableShow', JSON.stringify(false))\n        this.setState({\n            enableSee: false,\n            enablePack: false,\n            enableShow: false\n        })\n    }\n\n    getCardIndicies() {\n        return JSON.parse(localStorage.getItem('cardIndicies')) || []\n    }\n\n    getFirstCard() {\n        return JSON.parse(localStorage.getItem('firstCard')) || ''\n    }\n\n    getSecondCard() {\n        return JSON.parse(localStorage.getItem('secondCard')) || ''\n    }\n\n    getThirdCard() {\n        return JSON.parse(localStorage.getItem('thirdCard')) || ''\n    }\n\n    getFourthCard() {\n        return JSON.parse(localStorage.getItem('fourthCard')) || ''\n    }\n\n    getFirstCardURL() {\n        return JSON.parse(localStorage.getItem('firstCardURL')) || backCardImg\n    }\n\n    getSecondCardURL() {\n        return JSON.parse(localStorage.getItem('secondCardURL')) || backCardImg\n    }\n\n    getThirdCardURL() {\n        return JSON.parse(localStorage.getItem('thirdCardURL')) || backCardImg\n    }\n\n    getFourthCardURL() {\n        return JSON.parse(localStorage.getItem('fourthCardURL')) || backCardImg\n    }\n\n    getEnableSee() {\n        if (JSON.parse(localStorage.getItem('enableSee') == null)) {\n            return true\n        } else {\n            return JSON.parse(localStorage.getItem('enableSee'))\n        }\n    }\n\n    getEnablePack() {\n        if (JSON.parse(localStorage.getItem('enablePack') == null)) {\n            return false\n        } else {\n            return JSON.parse(localStorage.getItem('enablePack'))\n        }\n    }\n\n    getEnableShow() {\n        if (JSON.parse(localStorage.getItem('enableShow') == null)) {\n            return false\n        } else {\n            return JSON.parse(localStorage.getItem('enableShow'))\n        }\n    }\n}\n\nexport default Cards"]},"metadata":{},"sourceType":"module"}