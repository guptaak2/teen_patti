{"ast":null,"code":"var _jsxFileName = \"/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase';\nvar URL = \"https://us-central1-teen-patti-5a5fc.cloudfunctions.net\";\nconst divStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n};\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n    this.getUserData = this.getUserData.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n    this.generate = this.generate.bind(this);\n    this.state = {\n      cards: [],\n      numPlayers: '',\n      userState: this.props.userState,\n      gameSet: false\n    };\n  }\n\n  componentDidMount() {\n    fire.database().ref('users/isGameSet').on('value', snap => {\n      console.log('Before render component did mount:' + snap.val());\n      this.setState({\n        gameSet: snap.val()\n      });\n    });\n  }\n\n  getUserData() {\n    var userId = fire.auth().currentUser.uid;\n    console.log(userId);\n    return fire.database().ref('users/' + userId).once('value').then(function (snapshot) {\n      var username = snapshot.val() && snapshot.val().username || 'Anonymous';\n      console.log(username);\n    });\n  }\n\n  logout() {\n    fire.auth().signOut().then(result => {\n      this.setState({\n        userState: null\n      });\n    });\n  }\n\n  componentDidMount() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          userState: user\n        });\n      }\n    });\n    const dbRef = fire.database().ref('users/isGameSet');\n    dbRef.on('value', snap => {\n      console.log(snap.val());\n      this.setState({\n        gameSet: snap.val()\n      });\n    }); // GET CARDS BRO\n    // const dbRef = fire.database().ref().child('cards')\n    // dbRef.on('value', snap => {\n    //   snap.val().forEach((card) => {\n    //     cards.push({\n    //       suit: card.suit,\n    //       card: card.card\n    //     });\n    //   })\n    //   cards.forEach((card) => {\n    //     console.log(\"Suit: \" + card.suit + \" Card: \" + card.card)\n    //   })\n    // })\n  }\n\n  generate(e) {\n    e.preventDefault();\n    let randomNumbers = new Set();\n    let cardsTrips = [];\n\n    for (let i = 0; i < 52; i++) {\n      var rand = Math.floor(Math.random() * 51);\n      randomNumbers.add(rand);\n    }\n\n    var cardsSet = randomNumbers.values();\n\n    for (let j = 0; j < this.state.numPlayers; j++) {\n      cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n    }\n\n    console.log(cardsTrips);\n    this.setState({\n      gameSet: true\n    }); // update isGameSet to database\n\n    var updates = {};\n    updates['users/' + 'isGameSet'] = true;\n    fire.database().ref().update(updates);\n    fire.database().ref('users/isGameSet').on('value', snap => {\n      console.log('From Server:' + snap.val());\n    });\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    const {\n      cards\n    } = this.state;\n    const newItem = this.newItem.value;\n    const isOnTheList = cards.includes(newItem);\n\n    if (isOnTheList) {\n      this.setState({\n        message: 'This item is already on the list'\n      });\n    } else {\n      return newItem !== '' && axios.post(URL + '/addCards', {\n        item: newItem\n      }).then(response => {\n        this.setState({\n          cards: response.data\n        });\n      });\n    }\n  }\n\n  getCards(event) {\n    event.preventDefault();\n    return axios.get(URL + '/getCards').then(response => {\n      this.setState({\n        cards: response.data\n      });\n    });\n  }\n\n  clearAll() {\n    this.setState({\n      cards: [],\n      message: 'No cards in the list, add some'\n    });\n  }\n\n  renderCards() {\n    const {\n      cards,\n      message\n    } = this.state;\n    return cards.map(item => {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 24\n        }\n      }, item.item);\n    });\n  }\n\n  handleNumPlayersFieldChange(e) {\n    e.preventDefault();\n    this.setState({\n      numPlayers: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top_row\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, !this.state.gameSet && /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"numPlayers\",\n      label: \"Number of players\",\n      value: this.state.numPlayers,\n      onChange: this.handleNumPlayersFieldChange,\n      helperText: \"Please enter the number of players\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      pt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.generate.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }, \"SETUP GAME\")), \" \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.logout.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, \"Logout\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.logout.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, \"Logout\")), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.getUserData.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, \"Get Cards\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, \"Your cards are:\"), this.renderCards());\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js"],"names":["React","Component","axios","TextField","Button","Box","fire","URL","divStyle","display","justifyContent","alignItems","Cards","constructor","props","getUserData","bind","logout","handleNumPlayersFieldChange","generate","state","cards","numPlayers","userState","gameSet","componentDidMount","database","ref","on","snap","console","log","val","setState","userId","auth","currentUser","uid","once","then","snapshot","username","signOut","result","onAuthStateChanged","user","dbRef","e","preventDefault","randomNumbers","Set","cardsTrips","i","rand","Math","floor","random","add","cardsSet","values","j","next","value","updates","update","addItem","event","newItem","isOnTheList","includes","message","post","item","response","data","getCards","get","clearAll","renderCards","map","target","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,UAAjB;AAEA,IAAIC,GAAG,GAAG,yDAAV;AACA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,OAAO,EAAE,MADI;AAEbC,EAAAA,cAAc,EAAE,QAFH;AAGbC,EAAAA,UAAU,EAAE;AAHC,CAAjB;;AAMA,MAAMC,KAAN,SAAoBX,SAApB,CAA8B;AAC1BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKE,2BAAL,GAAmC,KAAKA,2BAAL,CAAiCF,IAAjC,CAAsC,IAAtC,CAAnC;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKI,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,SAAS,EAAE,KAAKT,KAAL,CAAWS,SAHb;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAI;AACjBnB,IAAAA,IAAI,CAACoB,QAAL,GAAgBC,GAAhB,CAAoB,iBAApB,EAAuCC,EAAvC,CAA0C,OAA1C,EAAmDC,IAAI,IAAI;AACvDC,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAuCF,IAAI,CAACG,GAAL,EAAnD;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAEK,IAAI,CAACG,GAAL;AAAX,OAAd;AACH,KAHD;AAIH;;AAEDjB,EAAAA,WAAW,GAAG;AACV,QAAImB,MAAM,GAAG5B,IAAI,CAAC6B,IAAL,GAAYC,WAAZ,CAAwBC,GAArC;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACA,WAAO5B,IAAI,CAACoB,QAAL,GAAgBC,GAAhB,CAAoB,WAAWO,MAA/B,EAAuCI,IAAvC,CAA4C,OAA5C,EAAqDC,IAArD,CAA0D,UAAUC,QAAV,EAAoB;AACjF,UAAIC,QAAQ,GAAID,QAAQ,CAACR,GAAT,MAAkBQ,QAAQ,CAACR,GAAT,GAAeS,QAAlC,IAA+C,WAA9D;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACH,KAHM,CAAP;AAIH;;AAEDxB,EAAAA,MAAM,GAAG;AACLX,IAAAA,IAAI,CAAC6B,IAAL,GAAYO,OAAZ,GAAsBH,IAAtB,CAA4BI,MAAD,IAAY;AACnC,WAAKV,QAAL,CAAc;AACVV,QAAAA,SAAS,EAAE;AADD,OAAd;AAGH,KAJD;AAKH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBnB,IAAAA,IAAI,CAAC6B,IAAL,GAAYS,kBAAZ,CAAgCC,IAAD,IAAU;AACrC,UAAIA,IAAJ,EAAU;AACN,aAAKZ,QAAL,CAAc;AACVV,UAAAA,SAAS,EAAEsB;AADD,SAAd;AAGH;AACJ,KAND;AAQA,UAAMC,KAAK,GAAGxC,IAAI,CAACoB,QAAL,GAAgBC,GAAhB,CAAoB,iBAApB,CAAd;AACAmB,IAAAA,KAAK,CAAClB,EAAN,CAAS,OAAT,EAAkBC,IAAI,IAAI;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAL,EAAZ;AACA,WAAKC,QAAL,CAAc;AACVT,QAAAA,OAAO,EAAEK,IAAI,CAACG,GAAL;AADC,OAAd;AAGH,KALD,EAVgB,CAiBhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDb,EAAAA,QAAQ,CAAC4B,CAAD,EAAI;AACRA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,aAAa,GAAG,IAAIC,GAAJ,EAApB;AACA,QAAIC,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAiB,EAA7B,CAAX;AACAP,MAAAA,aAAa,CAACQ,GAAd,CAAkBJ,IAAlB;AACH;;AAED,QAAIK,QAAQ,GAAGT,aAAa,CAACU,MAAd,EAAf;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxC,KAAL,CAAWE,UAA/B,EAA2CsC,CAAC,EAA5C,EAAgD;AAC5CT,MAAAA,UAAU,CAACS,CAAD,CAAV,GAAgB,CAACF,QAAQ,CAACG,IAAT,GAAgBC,KAAjB,EAAwBJ,QAAQ,CAACG,IAAT,GAAgBC,KAAxC,EAA+CJ,QAAQ,CAACG,IAAT,GAAgBC,KAA/D,CAAhB;AACH;;AAEDhC,IAAAA,OAAO,CAACC,GAAR,CAAYoB,UAAZ;AACA,SAAKlB,QAAL,CAAc;AAAET,MAAAA,OAAO,EAAE;AAAX,KAAd,EAjBQ,CAmBR;;AACA,QAAIuC,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,CAAC,WAAW,WAAZ,CAAP,GAAkC,IAAlC;AACAzD,IAAAA,IAAI,CAACoB,QAAL,GAAgBC,GAAhB,GAAsBqC,MAAtB,CAA6BD,OAA7B;AAEAzD,IAAAA,IAAI,CAACoB,QAAL,GAAgBC,GAAhB,CAAoB,iBAApB,EAAuCC,EAAvC,CAA0C,OAA1C,EAAmDC,IAAI,IAAI;AACvDC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBF,IAAI,CAACG,GAAL,EAA7B;AACH,KAFD;AAGH;;AAEDiC,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACXA,IAAAA,KAAK,CAAClB,cAAN;AACA,UAAM;AAAE3B,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,UAAM+C,OAAO,GAAG,KAAKA,OAAL,CAAaL,KAA7B;AAEA,UAAMM,WAAW,GAAG/C,KAAK,CAACgD,QAAN,CAAeF,OAAf,CAApB;;AAEA,QAAIC,WAAJ,EAAiB;AACb,WAAKnC,QAAL,CAAc;AACVqC,QAAAA,OAAO,EAAE;AADC,OAAd;AAIH,KALD,MAKO;AACH,aAAOH,OAAO,KAAK,EAAZ,IAAkBjE,KAAK,CAACqE,IAAN,CAAWhE,GAAG,GAAG,WAAjB,EAA8B;AAAEiE,QAAAA,IAAI,EAAEL;AAAR,OAA9B,EAAiD5B,IAAjD,CAAuDkC,QAAD,IAAc;AACzF,aAAKxC,QAAL,CAAc;AACVZ,UAAAA,KAAK,EAAEoD,QAAQ,CAACC;AADN,SAAd;AAGH,OAJwB,CAAzB;AAKH;AACJ;;AAEDC,EAAAA,QAAQ,CAACT,KAAD,EAAQ;AACZA,IAAAA,KAAK,CAAClB,cAAN;AACA,WAAO9C,KAAK,CAAC0E,GAAN,CAAUrE,GAAG,GAAG,WAAhB,EAA6BgC,IAA7B,CAAmCkC,QAAD,IAAc;AACnD,WAAKxC,QAAL,CAAc;AACVZ,QAAAA,KAAK,EAAEoD,QAAQ,CAACC;AADN,OAAd;AAGH,KAJM,CAAP;AAKH;;AAGDG,EAAAA,QAAQ,GAAG;AACP,SAAK5C,QAAL,CAAc;AACVZ,MAAAA,KAAK,EAAE,EADG;AAEViD,MAAAA,OAAO,EAAE;AAFC,KAAd;AAIH;;AAEDQ,EAAAA,WAAW,GAAG;AACV,UAAM;AAAEzD,MAAAA,KAAF;AAASiD,MAAAA;AAAT,QAAqB,KAAKlD,KAAhC;AACA,WACIC,KAAK,CAAC0D,GAAN,CAAUP,IAAI,IAAI;AACd,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACA,IAAV,CAAP;AACH,KAFD,CADJ;AAKH;;AAEDtD,EAAAA,2BAA2B,CAAC6B,CAAD,EAAI;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKf,QAAL,CAAc;AACVX,MAAAA,UAAU,EAAEyB,CAAC,CAACiC,MAAF,CAASlB;AADX,KAAd;AAGH;;AAEDmB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAEzE,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,CAAC,KAAKY,KAAL,CAAWI,OAAZ,iBAAuB;AAAK,MAAA,KAAK,EAAEhB,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACrB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,YAAd;AAA2B,MAAA,KAAK,EAAC,mBAAjC;AAAqD,MAAA,KAAK,EAAE,KAAKY,KAAL,CAAWE,UAAvE;AAAmF,MAAA,QAAQ,EAAE,KAAKJ,2BAAlG;AAA+H,MAAA,UAAU,EAAC,oCAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADqB,eAIrB,oBAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAA8C,MAAA,OAAO,EAAE,KAAKC,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAJqB,MAD7B,CADJ,eASU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATV,eASgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAThB,eAUI,oBAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,KAAKC,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAVJ,eAaI,oBAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,KAAKC,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAbJ,eAgBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,KAAKD,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAhBJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAnBJ,EAoBK,KAAK8D,WAAL,EApBL,CADJ;AAwBH;;AApLyB;;AAuL9B,eAAelE,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\n\nvar URL = \"https://us-central1-teen-patti-5a5fc.cloudfunctions.net\"\nconst divStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n};\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.getUserData = this.getUserData.bind(this);\n        this.logout = this.logout.bind(this);\n        this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n        this.generate = this.generate.bind(this);\n        this.state = {\n            cards: [],\n            numPlayers: '',\n            userState: this.props.userState,\n            gameSet: false\n        }\n    }\n\n    componentDidMount () {\n        fire.database().ref('users/isGameSet').on('value', snap => {\n            console.log('Before render component did mount:' + snap.val())\n            this.setState({ gameSet: snap.val()})\n        })\n    }\n\n    getUserData() {\n        var userId = fire.auth().currentUser.uid;\n        console.log(userId)\n        return fire.database().ref('users/' + userId).once('value').then(function (snapshot) {\n            var username = (snapshot.val() && snapshot.val().username) || 'Anonymous';\n            console.log(username)\n        });\n    }\n\n    logout() {\n        fire.auth().signOut().then((result) => {\n            this.setState({\n                userState: null\n            })\n        })\n    }\n\n    componentDidMount() {\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    userState: user\n                })\n            }\n        })\n\n        const dbRef = fire.database().ref('users/isGameSet')\n        dbRef.on('value', snap => {\n            console.log(snap.val())\n            this.setState({\n                gameSet: snap.val()\n            })\n        })\n\n        // GET CARDS BRO\n        // const dbRef = fire.database().ref().child('cards')\n        // dbRef.on('value', snap => {\n        //   snap.val().forEach((card) => {\n        //     cards.push({\n        //       suit: card.suit,\n        //       card: card.card\n        //     });\n        //   })\n        //   cards.forEach((card) => {\n        //     console.log(\"Suit: \" + card.suit + \" Card: \" + card.card)\n        //   })\n        // })\n    }\n\n    generate(e) {\n        e.preventDefault()\n\n        let randomNumbers = new Set();\n        let cardsTrips = [];\n        for (let i = 0; i < 52; i++) {\n            var rand = Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n\n        var cardsSet = randomNumbers.values()\n\n        for (let j = 0; j < this.state.numPlayers; j++) {\n            cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value]\n        }\n\n        console.log(cardsTrips);\n        this.setState({ gameSet: true})\n\n        // update isGameSet to database\n        var updates = {};\n        updates['users/' + 'isGameSet'] = true;\n        fire.database().ref().update(updates);\n\n        fire.database().ref('users/isGameSet').on('value', snap => {\n            console.log('From Server:' + snap.val())\n        })\n    }\n\n    addItem(event) {\n        event.preventDefault()\n        const { cards } = this.state;\n        const newItem = this.newItem.value;\n\n        const isOnTheList = cards.includes(newItem)\n\n        if (isOnTheList) {\n            this.setState({\n                message: 'This item is already on the list'\n            })\n\n        } else {\n            return newItem !== '' && axios.post(URL + '/addCards', { item: newItem }).then((response) => {\n                this.setState({\n                    cards: response.data\n                })\n            })\n        }\n    }\n\n    getCards(event) {\n        event.preventDefault()\n        return axios.get(URL + '/getCards').then((response) => {\n            this.setState({\n                cards: response.data\n            })\n        })\n    }\n\n\n    clearAll() {\n        this.setState({\n            cards: [],\n            message: 'No cards in the list, add some'\n        })\n    }\n\n    renderCards() {\n        const { cards, message } = this.state;\n        return (\n            cards.map(item => {\n                return <h3>{item.item}</h3>\n            })\n        )\n    }\n\n    handleNumPlayersFieldChange(e) {\n        e.preventDefault()\n        this.setState({\n            numPlayers: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"top_row\" style={divStyle}>\n                    { !this.state.gameSet && <div style={divStyle}>\n                        <Box>\n                            <TextField id=\"numPlayers\" label=\"Number of players\" value={this.state.numPlayers} onChange={this.handleNumPlayersFieldChange} helperText=\"Please enter the number of players\" />\n                        </Box>\n                        <Box m={2} pt={3}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.generate.bind(this)}>SETUP GAME</Button>\n                        </Box> </div>}\n                </div><br /><br />\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                </Box>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                </Box>\n                <Box>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.getUserData.bind(this)} >Get Cards</Button>\n                </Box>\n                <h2>Your cards are:</h2>\n                {this.renderCards()}\n            </div>\n        );\n    }\n}\n\nexport default Cards"]},"metadata":{},"sourceType":"module"}