{"ast":null,"code":"var _jsxFileName = \"/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase';\nvar URL = \"https://us-central1-teen-patti-5a5fc.cloudfunctions.net\";\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n    this.getUserData = this.getUserData.bind(this);\n    this.logout = this.logout.bind(this);\n    this.state = {\n      cards: [],\n      message: '',\n      userState: this.props.userState\n    };\n  }\n\n  getUserData() {\n    var userId = fire.auth().currentUser.uid;\n    console.log(userId);\n    return fire.database().ref('users/' + userId).once('value').then(function (snapshot) {\n      var username = snapshot.val() && snapshot.val().username || 'Anonymous';\n      console.log(username);\n    });\n  }\n\n  logout() {\n    fire.auth().signOut().then(result => {\n      this.setState({\n        userState: null\n      });\n    });\n  }\n\n  componentDidMount() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          userState: user\n        });\n      }\n    }); // GET CARDS BRO\n    // const dbRef = fire.database().ref().child('cards')\n    // dbRef.on('value', snap => {\n    //   snap.val().forEach((card) => {\n    //     cards.push({\n    //       suit: card.suit,\n    //       card: card.card\n    //     });\n    //   })\n    //   cards.forEach((card) => {\n    //     console.log(\"Suit: \" + card.suit + \" Card: \" + card.card)\n    //   })\n    // })\n    // CREATE #_of_players hands\n\n    let randomNumbers = new Set();\n\n    for (let i = 0; i < 52; i++) {\n      var rand = Math.floor(Math.random() * 51);\n      randomNumbers.add(rand);\n    }\n\n    var player1cards = [];\n    var player2cards = [];\n    var player3cards = [];\n    player1cards.addItem(randomNumbers.get(0));\n    player1cards.addItem(randomNumbers.get(1));\n    player1cards.addItem(randomNumbers.get(2));\n    player2cards.addItem(randomNumbers.get(3));\n    player2cards.addItem(randomNumbers.get(4));\n    player2cards.addItem(randomNumbers.get(5));\n    player3cards.addItem(randomNumbers.get(6));\n    player3cards.addItem(randomNumbers.get(7));\n    player3cards.addItem(randomNumbers.get(8));\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    const {\n      cards\n    } = this.state;\n    const newItem = this.newItem.value;\n    const isOnTheList = cards.includes(newItem);\n\n    if (isOnTheList) {\n      this.setState({\n        message: 'This item is already on the list'\n      });\n    } else {\n      return newItem !== '' && axios.post(URL + '/addCards', {\n        item: newItem\n      }).then(response => {\n        this.setState({\n          cards: response.data\n        });\n      });\n    }\n  }\n\n  getCards(event) {\n    event.preventDefault();\n    return axios.get(URL + '/getCards').then(response => {\n      this.setState({\n        cards: response.data\n      });\n    });\n  }\n\n  clearAll() {\n    this.setState({\n      cards: [],\n      message: 'No cards in the list, add some'\n    });\n  }\n\n  renderCards() {\n    const {\n      cards,\n      message\n    } = this.state;\n    return cards.map(item => {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 24\n        }\n      }, item.item);\n    });\n  }\n\n  render() {\n    const {\n      cards,\n      message\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      pt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.logout.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, \"Logout\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      pt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.getUserData.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"Get Cards\")), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"Your cards are:\"), this.renderCards());\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js"],"names":["React","Component","axios","Button","Box","fire","URL","Cards","constructor","props","getUserData","bind","logout","state","cards","message","userState","userId","auth","currentUser","uid","console","log","database","ref","once","then","snapshot","username","val","signOut","result","setState","componentDidMount","onAuthStateChanged","user","randomNumbers","Set","i","rand","Math","floor","random","add","player1cards","player2cards","player3cards","addItem","get","event","preventDefault","newItem","value","isOnTheList","includes","post","item","response","data","getCards","clearAll","renderCards","map","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\n\nvar URL = \"https://us-central1-teen-patti-5a5fc.cloudfunctions.net\"\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.getUserData = this.getUserData.bind(this);\n        this.logout = this.logout.bind(this);\n        this.state = {\n            cards: [],\n            message: '',\n            userState: this.props.userState\n        }\n    }\n\n    getUserData() {\n        var userId = fire.auth().currentUser.uid;\n        console.log(userId)\n        return fire.database().ref('users/' + userId).once('value').then(function (snapshot) {\n            var username = (snapshot.val() && snapshot.val().username) || 'Anonymous';\n            console.log(username)\n        });\n    }\n\n    logout() {\n        fire.auth().signOut().then((result) => {\n            this.setState({\n                userState: null\n            })\n        })\n    }\n\n    componentDidMount() {\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    userState: user\n                })\n            }\n        })\n\n        // GET CARDS BRO\n        // const dbRef = fire.database().ref().child('cards')\n        // dbRef.on('value', snap => {\n        //   snap.val().forEach((card) => {\n        //     cards.push({\n        //       suit: card.suit,\n        //       card: card.card\n        //     });\n        //   })\n        //   cards.forEach((card) => {\n        //     console.log(\"Suit: \" + card.suit + \" Card: \" + card.card)\n        //   })\n        // })\n        // CREATE #_of_players hands\n        let randomNumbers = new Set();\n        for (let i = 0; i < 52; i++) {\n            var rand =  Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n    \n        var player1cards = [];\n        var player2cards = [];\n        var player3cards = [];\n        player1cards.addItem(randomNumbers.get(0))\n        player1cards.addItem(randomNumbers.get(1))\n        player1cards.addItem(randomNumbers.get(2))\n        player2cards.addItem(randomNumbers.get(3))\n        player2cards.addItem(randomNumbers.get(4))\n        player2cards.addItem(randomNumbers.get(5))\n        player3cards.addItem(randomNumbers.get(6))\n        player3cards.addItem(randomNumbers.get(7))\n        player3cards.addItem(randomNumbers.get(8))\n    }\n\n    addItem(event) {\n        event.preventDefault()\n        const { cards } = this.state;\n        const newItem = this.newItem.value;\n\n        const isOnTheList = cards.includes(newItem)\n\n        if (isOnTheList) {\n            this.setState({\n                message: 'This item is already on the list'\n            })\n\n        } else {\n            return newItem !== '' && axios.post(URL + '/addCards', { item: newItem }).then((response) => {\n                this.setState({\n                    cards: response.data\n                })\n            })\n        }\n    }\n\n    getCards(event) {\n        event.preventDefault()\n        return axios.get(URL + '/getCards').then((response) => {\n            this.setState({\n                cards: response.data\n            })\n        })\n    }\n\n\n    clearAll() {\n        this.setState({\n            cards: [],\n            message: 'No cards in the list, add some'\n        })\n    }\n\n    renderCards() {\n        const { cards, message } = this.state;\n        return (\n            cards.map(item => {\n                return <h3>{item.item}</h3>\n            })\n        )\n    }\n\n    render() {\n        const { cards, message } = this.state;\n        return (\n            <div className=\"container\">\n                <Box m={2} pt={3}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                </Box>\n                <Box m={2} pt={3}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.getUserData.bind(this)} >Get Cards</Button>\n                </Box>\n                <h1>Your cards are:</h1>\n                {this.renderCards()}\n            </div>\n        );\n    }\n}\n\nexport default Cards"]},"metadata":{},"sourceType":"module"}