{"ast":null,"code":"var _jsxFileName = \"/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase';\nimport '../App.css';\nconst divStyle = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nconst table = {\n  display: 'grid'\n};\nconst horizontal = {\n  display: 'flex',\n  justifyContent: 'center'\n};\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n    this.logout = this.logout.bind(this);\n    this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n    this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n    this.generate = this.generate.bind(this);\n    this.getCards = this.getCards.bind(this);\n    this.getRealCards = this.getRealCards.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n    this.getMessages = this.getMessages.bind(this);\n    this.packed = this.packed.bind(this);\n    this.showCards = this.showCards.bind(this);\n    this.updateTable = this.updateTable.bind(this);\n    this.scrollToBottom = this.scrollToBottom.bind(this);\n    this.getNumberOfLoggedInUsers = this.getNumberOfLoggedInUsers.bind(this);\n    this.state = {\n      cardIndicies: [],\n      firstCard: [],\n      secondCard: [],\n      thirdCard: [],\n      fourthCard: [],\n      cards: [],\n      messages: [],\n      playerStats: [],\n      numPlayers: '',\n      numLoggedIn: '',\n      numCards: 3,\n      userState: this.props.userState,\n      gameSet: true\n    };\n  }\n\n  componentDidMount() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          userState: user\n        });\n      }\n    });\n    fire.database().ref('users/isGameSet').on('value', snap => {\n      this.setState({\n        gameSet: snap.val()\n      });\n    }).then(u => {\n      fire.database().ref('users/numCardsPerPlayer').on('value', snap => {\n        this.setState({\n          numCards: snap.val()\n        });\n      }).then(u => {\n        this.getNumberOfLoggedInUsers();\n      }).then(u => {\n        this.updateTable();\n      }).then(u => {\n        this.scrollToBottom();\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom() {\n    const {\n      cardsStats\n    } = this.refs;\n    cardsStats.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\",\n      inline: \"nearest\"\n    });\n  }\n\n  updateTable() {\n    let id = 0;\n    this.setState({\n      playerStats: []\n    });\n    fire.database().ref('users').child('list').on('value', snap => {\n      snap.forEach(user => {\n        if (user.val().isLoggedIn) {\n          var name = user.val().name;\n          var status = user.val().status;\n          this.setState({\n            playerStats: this.state.playerStats.concat({\n              id,\n              name,\n              status\n            })\n          });\n          id++;\n        }\n      });\n    });\n  }\n\n  getMessages() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, this.state.messages.map((message, key) => {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, message);\n    }));\n  }\n\n  logout() {\n    fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n      isLoggedIn: false,\n      status: 'BLIND'\n    });\n    fire.auth().signOut().then(result => {\n      this.setState({\n        userState: null\n      });\n    });\n  }\n\n  resetGame(e) {\n    e.preventDefault(); // update isGameSet to database after reset game\n\n    var updates = {};\n    updates['users/' + 'isGameSet'] = false;\n    fire.database().ref().update(updates).then(u => {\n      fire.database().ref('users').child('list').once('value', snap => {\n        snap.forEach(user => {\n          if (user.val().isLoggedIn) {\n            fire.database().ref('users/list/' + user.key).update({\n              cards: null,\n              status: 'BLIND'\n            });\n          }\n        });\n      }).then(u => {\n        this.setState({\n          playerStats: [],\n          gameSet: false,\n          firstCard: [],\n          secondCard: [],\n          thirdCard: [],\n          fourthCard: []\n        });\n      });\n    });\n  }\n\n  generate(e) {\n    e.preventDefault();\n    let randomNumbers = new Set();\n    let cardsTrips = [];\n\n    for (let i = 0; i < 52; i++) {\n      var rand = Math.floor(Math.random() * 51);\n      randomNumbers.add(rand);\n    }\n\n    var cardsSet = randomNumbers.values();\n    const cardsNum = this.state.numCards;\n\n    for (let j = 0; j < this.state.numPlayers; j++) {\n      if (cardsNum == 1) {\n        cardsTrips[j] = [cardsSet.next().value];\n      } else if (cardsNum == 2) {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value];\n      } else if (cardsNum == 3) {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n      } else if (cardsNum == 4) {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n      } else {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n      }\n    }\n\n    this.setState({\n      gameSet: true\n    }); // update isGameSet to database\n\n    var updates = {};\n    updates['users/' + 'isGameSet'] = true;\n    fire.database().ref().update(updates);\n    console.log(\"Num Players: \" + this.state.numPlayers);\n    console.log(\"Num Logged In: \" + this.state.numLoggedIn);\n\n    if (this.state.numPlayers < this.state.numLoggedIn) {\n      console.log(\"More people are logged in\");\n    } else {\n      // update cards to database\n      var i = 0;\n      fire.database().ref('users').child('list').once('value', snap => {\n        snap.forEach(user => {\n          if (user.val().isLoggedIn) {\n            fire.database().ref('users/list/' + user.key).update({\n              cards: cardsTrips[i]\n            });\n            i++;\n          }\n        });\n      });\n    }\n  }\n\n  getNumberOfLoggedInUsers() {\n    var num = 0;\n    fire.database().ref('users').child('list').once('value', snap => {\n      snap.forEach(user => {\n        if (user.val().isLoggedIn) {\n          num++;\n        }\n      });\n    });\n    this.setState({\n      numLoggedIn: num\n    });\n  }\n\n  getCards(e) {\n    e.preventDefault();\n\n    if (this.state.gameSet == true) {\n      fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then(snap => {\n        this.setState({\n          cardIndicies: snap.val()\n        });\n        this.getRealCards();\n      }).then(u => {\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n          status: 'SEEN'\n        });\n      });\n    } else {\n      console.log(\"Trying to get cards when you're not in a game\");\n    }\n  }\n\n  getRealCards() {\n    const cardsNum = this.state.numCards;\n\n    if (cardsNum == 1) {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.setState({\n          firstCard: snap.val()\n        });\n      });\n    } else if (cardsNum == 2) {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.setState({\n          firstCard: snap.val()\n        });\n      }).then(u => {\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n          this.setState({\n            secondCard: snap.val()\n          });\n        });\n      });\n    } else if (cardsNum == 3) {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.setState({\n          firstCard: snap.val()\n        });\n      }).then(u => {\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n          this.setState({\n            secondCard: snap.val()\n          });\n        }).then(u => {\n          fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then(snap => {\n            this.setState({\n              thirdCard: snap.val()\n            });\n          });\n        });\n      });\n    } else if (cardsNum == 4) {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.setState({\n          firstCard: snap.val()\n        });\n      }).then(u => {\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n          this.setState({\n            secondCard: snap.val()\n          });\n        }).then(u => {\n          fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then(snap => {\n            this.setState({\n              thirdCard: snap.val()\n            });\n          }).then(u => {\n            fire.database().ref('cards/' + this.state.cardIndicies[3]).once('value').then(snap => {\n              this.setState({\n                fourthCard: snap.val()\n              });\n            });\n          });\n        });\n      });\n    } else {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.setState({\n          firstCard: snap.val()\n        });\n      }).then(u => {\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n          this.setState({\n            secondCard: snap.val()\n          });\n        }).then(u => {\n          fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then(snap => {\n            this.setState({\n              thirdCard: snap.val()\n            });\n          });\n        });\n      });\n    }\n  }\n\n  renderCards() {\n    const cardsNum = this.state.numCards;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }\n    }, cardsNum == 1 && /*#__PURE__*/React.createElement(\"div\", {\n      style: horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 45\n      }\n    }, this.state.firstCard.card, \" \", this.state.firstCard.suit)), cardsNum == 2 && /*#__PURE__*/React.createElement(\"div\", {\n      style: horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    }, this.state.firstCard.card, \" \", this.state.firstCard.suit), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 89\n      }\n    }, this.state.secondCard.card, \" \", this.state.secondCard.suit)), cardsNum == 3 && /*#__PURE__*/React.createElement(\"div\", {\n      style: horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }, this.state.firstCard.card, \" \", this.state.firstCard.suit), \" \", /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 90\n      }\n    }, this.state.secondCard.card, \" \", this.state.secondCard.suit), \" \", /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 157\n      }\n    }, this.state.thirdCard.card, \" \", this.state.thirdCard.suit)), cardsNum == 4 && /*#__PURE__*/React.createElement(\"div\", {\n      style: horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    }, this.state.firstCard.card, \" \", this.state.firstCard.suit), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 89\n      }\n    }, this.state.secondCard.card, \" \", this.state.secondCard.suit), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 155\n      }\n    }, this.state.thirdCard.card, \" \", this.state.thirdCard.suit), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 219\n      }\n    }, this.state.fourthCard.card, \" \", this.state.fourthCard.suit)));\n  }\n\n  handleNumPlayersFieldChange(e) {\n    e.preventDefault();\n    this.setState({\n      numPlayers: e.target.value\n    });\n  }\n\n  handleNumCardsFieldChange(e) {\n    e.preventDefault();\n    const num = e.target.value; // update numCards to database\n\n    var updates = {};\n    updates['users/' + 'numCardsPerPlayer'] = num;\n    fire.database().ref().update(updates).then(u => {\n      this.setState({\n        numCards: num\n      });\n    });\n  }\n\n  packed(e) {\n    e.preventDefault();\n    fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n      status: 'PACK'\n    }).then(u => {\n      this.updateTable();\n    });\n  }\n\n  showCards(e) {\n    e.preventDefault();\n    const cardsNum = this.state.numCards;\n    var message = `${this.state.userState.displayName} is SHOW and their cards are: `;\n\n    if (cardsNum == 1) {\n      message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit}`;\n    } else if (cardsNum == 2) {\n      message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit}`;\n    } else if (cardsNum == 3) {\n      message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit} ${this.state.thirdCard.card} ${this.state.thirdCard.suit}`;\n    } else if (cardsNum == 4) {\n      message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit} ${this.state.thirdCard.card} ${this.state.thirdCard.suit} ${this.state.fourthCard.card} ${this.state.fourthCard.suit}`;\n    }\n\n    fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n      status: 'SHOW'\n    }).then(u => {\n      this.updateTable();\n    });\n  }\n\n  renderStats() {\n    const stats = this.state.playerStats;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      align: \"center\",\n      border: \"1\",\n      width: \"250px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 33\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 33\n      }\n    }, \"Status\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 21\n      }\n    }, stats.map(row => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: row.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 41\n        }\n      }, row.name)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 41\n        }\n      }, row.status)));\n    }))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setup_game\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }\n    }, !this.state.gameSet && /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"numPlayers\",\n      label: \"Number of players\",\n      value: this.state.numPlayers,\n      onChange: this.handleNumPlayersFieldChange,\n      helperText: \"Please enter the number of players\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"numCards\",\n      label: \"Number of cards\",\n      value: this.state.numCards,\n      onChange: this.handleNumCardsFieldChange,\n      helperText: \"Please enter the number of cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      pt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.generate.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 29\n      }\n    }, \"SETUP GAME\")), \" \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      variant: \"outlined\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 21\n      }\n    }, \"Hello, \", this.state.userState.displayName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logout_reset\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.logout.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 25\n      }\n    }, \"Logout\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.resetGame.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 25\n      }\n    }, \"Reset Game\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logout_reset\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.getCards.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 25\n      }\n    }, \"See Cards\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.packed.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 25\n      }\n    }, \"Pack\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.showCards.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 25\n      }\n    }, \"Show Cards\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: horizontal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 21\n      }\n    }, \"Your cards are:\"), this.renderCards()), /*#__PURE__*/React.createElement(\"div\", {\n      ref: \"cardsStats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }\n    }, this.renderStats()));\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js"],"names":["React","Component","TextField","Button","Box","fire","divStyle","display","justifyContent","table","horizontal","Cards","constructor","props","logout","bind","handleNumPlayersFieldChange","handleNumCardsFieldChange","generate","getCards","getRealCards","resetGame","getMessages","packed","showCards","updateTable","scrollToBottom","getNumberOfLoggedInUsers","state","cardIndicies","firstCard","secondCard","thirdCard","fourthCard","cards","messages","playerStats","numPlayers","numLoggedIn","numCards","userState","gameSet","componentDidMount","auth","onAuthStateChanged","user","setState","database","ref","on","snap","val","then","u","componentDidUpdate","cardsStats","refs","scrollIntoView","behavior","block","inline","id","child","forEach","isLoggedIn","name","status","concat","map","message","key","currentUser","uid","update","signOut","result","e","preventDefault","updates","once","randomNumbers","Set","cardsTrips","i","rand","Math","floor","random","add","cardsSet","values","cardsNum","j","next","value","console","log","num","renderCards","card","suit","target","displayName","renderStats","stats","row","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\nimport '../App.css';\n\nconst divStyle = {\n    display: 'flex',\n    justifyContent: 'center'\n};\n\nconst table = {\n    display: 'grid'\n}\n\nconst horizontal = {\n    display: 'flex',\n    justifyContent: 'center'\n}\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.logout = this.logout.bind(this);\n        this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n        this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n        this.generate = this.generate.bind(this);\n        this.getCards = this.getCards.bind(this);\n        this.getRealCards = this.getRealCards.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n        this.getMessages = this.getMessages.bind(this);\n        this.packed = this.packed.bind(this);\n        this.showCards = this.showCards.bind(this);\n        this.updateTable = this.updateTable.bind(this);\n        this.scrollToBottom = this.scrollToBottom.bind(this);\n        this.getNumberOfLoggedInUsers = this.getNumberOfLoggedInUsers.bind(this);\n\n        this.state = {\n            cardIndicies: [],\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            cards: [],\n            messages: [],\n            playerStats: [],\n            numPlayers: '',\n            numLoggedIn: '',\n            numCards: 3,\n            userState: this.props.userState,\n            gameSet: true\n        }\n    }\n\n    componentDidMount() {\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    userState: user\n                })\n            }\n        })\n\n        fire.database().ref('users/isGameSet').on('value', snap => {\n            this.setState({ gameSet: snap.val() })\n        }).then((u) => {\n            fire.database().ref('users/numCardsPerPlayer').on('value', snap => {\n                this.setState({ numCards: snap.val() })\n            }).then((u) => {\n                this.getNumberOfLoggedInUsers()\n            }).then((u) => {\n                this.updateTable()\n            }).then((u) => {\n                this.scrollToBottom()\n            })\n        })\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom()\n    }\n\n    scrollToBottom() {\n        const { cardsStats } = this.refs;\n        cardsStats.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n\n    updateTable() {\n        let id = 0;\n        this.setState({ playerStats: [] })\n        fire.database().ref('users').child('list').on('value', snap => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn) {\n                    var name = user.val().name\n                    var status = user.val().status\n                    this.setState({\n                        playerStats: this.state.playerStats.concat({ id, name, status })\n                    })\n                    id++;\n                }\n            })\n        })\n    }\n\n    getMessages() {\n        return (\n            <div>\n                {this.state.messages.map((message, key) => {\n                    return (\n                        <h3 key={key}>{message}</h3>\n                    )\n                })}\n            </div>\n        )\n    }\n\n    logout() {\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n            isLoggedIn: false,\n            status: 'BLIND'\n        })\n\n        fire.auth().signOut().then((result) => {\n            this.setState({\n                userState: null\n            })\n        })\n    }\n\n    resetGame(e) {\n        e.preventDefault()\n\n        // update isGameSet to database after reset game\n        var updates = {};\n        updates['users/' + 'isGameSet'] = false;\n        fire.database().ref().update(updates).then((u) => {\n            fire.database().ref('users').child('list').once('value', snap => {\n                snap.forEach((user) => {\n                    if (user.val().isLoggedIn) {\n                        fire.database().ref('users/list/' + user.key).update({\n                            cards: null,\n                            status: 'BLIND'\n                        })\n                    }\n                })\n            }).then((u) => {\n                this.setState({\n                    playerStats: [],\n                    gameSet: false,\n                    firstCard: [],\n                    secondCard: [],\n                    thirdCard: [],\n                    fourthCard: []\n                })\n            })\n        })\n    }\n\n    generate(e) {\n        e.preventDefault()\n\n        let randomNumbers = new Set();\n        let cardsTrips = [];\n        for (let i = 0; i < 52; i++) {\n            var rand = Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n\n        var cardsSet = randomNumbers.values()\n        const cardsNum = this.state.numCards\n\n        for (let j = 0; j < this.state.numPlayers; j++) {\n            if (cardsNum == 1) {\n                cardsTrips[j] = [cardsSet.next().value];\n            } else if (cardsNum == 2) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 3) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 4) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            }\n        }\n\n        this.setState({ gameSet: true })\n\n        // update isGameSet to database\n        var updates = {};\n        updates['users/' + 'isGameSet'] = true;\n        fire.database().ref().update(updates);\n\n        console.log(\"Num Players: \" + this.state.numPlayers)\n        console.log(\"Num Logged In: \" + this.state.numLoggedIn)\n        if (this.state.numPlayers < this.state.numLoggedIn) {\n            console.log(\"More people are logged in\")\n        } else {\n            // update cards to database\n            var i = 0;\n            fire.database().ref('users').child('list').once('value', snap => {\n                snap.forEach((user) => {\n                    if (user.val().isLoggedIn) {\n                        fire.database().ref('users/list/' + user.key).update({ cards: cardsTrips[i] })\n                        i++;\n                    }\n                })\n            });\n        }\n    }\n\n    getNumberOfLoggedInUsers() {\n        var num = 0;\n        fire.database().ref('users').child('list').once('value', snap => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn) {\n                    num++;\n                }\n            })\n        });\n\n        this.setState({ numLoggedIn: num })\n    }\n\n    getCards(e) {\n        e.preventDefault()\n        if (this.state.gameSet == true) {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then((snap => {\n                this.setState({ cardIndicies: snap.val() })\n                this.getRealCards()\n            })).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'SEEN' })\n            });\n        } else {\n            console.log(\"Trying to get cards when you're not in a game\")\n        }\n    }\n\n    getRealCards() {\n        const cardsNum = this.state.numCards\n        if (cardsNum == 1) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            }));\n        } else if (cardsNum == 2) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                }));\n            });\n        } else if (cardsNum == 3) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.setState({ thirdCard: snap.val() })\n                    }))\n                });\n            });\n        } else if (cardsNum == 4) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.setState({ thirdCard: snap.val() })\n                    })).then((u) => {\n                        fire.database().ref('cards/' + this.state.cardIndicies[3]).once('value').then((snap => {\n                            this.setState({ fourthCard: snap.val() })\n                        }));\n                    });\n                });\n            });\n        } else {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.setState({ thirdCard: snap.val() })\n                    }))\n                });\n            });\n        }\n    }\n\n    renderCards() {\n        const cardsNum = this.state.numCards\n        return (\n            <div style={horizontal}>\n                {cardsNum == 1 &&\n                    <div style={horizontal}><h2>{this.state.firstCard.card} {this.state.firstCard.suit}</h2></div>\n                }\n\n                {cardsNum == 2 &&\n                    <div style={horizontal}>\n                        <h2>{this.state.firstCard.card} {this.state.firstCard.suit}</h2><h2>{this.state.secondCard.card} {this.state.secondCard.suit}</h2>\n                    </div>\n                }\n\n                {\n                    cardsNum == 3 &&\n                    <div style={horizontal}>\n                        <h2>{this.state.firstCard.card} {this.state.firstCard.suit}</h2> <h2>{this.state.secondCard.card} {this.state.secondCard.suit}</h2> <h2>{this.state.thirdCard.card} {this.state.thirdCard.suit}</h2>\n                    </div>\n                }\n\n                {\n                    cardsNum == 4 &&\n                    <div style={horizontal}>\n                        <h2>{this.state.firstCard.card} {this.state.firstCard.suit}</h2><h2>{this.state.secondCard.card} {this.state.secondCard.suit}</h2><h2>{this.state.thirdCard.card} {this.state.thirdCard.suit}</h2><h2>{this.state.fourthCard.card} {this.state.fourthCard.suit}</h2>\n                    </div>\n                }\n            </div >\n        )\n    }\n\n    handleNumPlayersFieldChange(e) {\n        e.preventDefault()\n        this.setState({\n            numPlayers: e.target.value\n        })\n    }\n\n    handleNumCardsFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        // update numCards to database\n        var updates = {};\n        updates['users/' + 'numCardsPerPlayer'] = num;\n        fire.database().ref().update(updates).then((u) => {\n            this.setState({\n                numCards: num\n            })\n        })\n    }\n\n    packed(e) {\n        e.preventDefault()\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'PACK' }).then((u) => {\n            this.updateTable()\n        })\n    }\n\n    showCards(e) {\n        e.preventDefault()\n        const cardsNum = this.state.numCards\n        var message = `${this.state.userState.displayName} is SHOW and their cards are: `\n        if (cardsNum == 1) {\n            message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit}`\n        } else if (cardsNum == 2) {\n            message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit}`\n        } else if (cardsNum == 3) {\n            message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit} ${this.state.thirdCard.card} ${this.state.thirdCard.suit}`\n        } else if (cardsNum == 4) {\n            message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit} ${this.state.thirdCard.card} ${this.state.thirdCard.suit} ${this.state.fourthCard.card} ${this.state.fourthCard.suit}`\n        }\n\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'SHOW' }).then((u) => {\n            this.updateTable()\n        })\n    }\n\n    renderStats() {\n        const stats = this.state.playerStats\n        return (\n            <div style={table}>\n                <table align=\"center\" border=\"1\" width=\"250px\">\n                    <thead>\n                        <tr>\n                            <th><h2>Name</h2></th>\n                            <th><h2>Status</h2></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {stats.map((row) => {\n                            return (\n                                <tr key={row.id}>\n                                    <td><h3>{row.name}</h3></td>\n                                    <td><h3>{row.status}</h3></td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>)\n    }\n\n    render() {\n        return (\n            <div className=\"container\" >\n                <div className=\"setup_game\" style={divStyle}>\n                    {!this.state.gameSet && <div style={divStyle}>\n                        <Box m={2}>\n                            <TextField id=\"numPlayers\" label=\"Number of players\" value={this.state.numPlayers} onChange={this.handleNumPlayersFieldChange} helperText=\"Please enter the number of players\" />\n                        </Box>\n                        <Box m={2}>\n                            <TextField id=\"numCards\" label=\"Number of cards\" value={this.state.numCards} onChange={this.handleNumCardsFieldChange} helperText=\"Please enter the number of cards\" />\n                        </Box>\n                        <Box m={2} pt={3}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.generate.bind(this)}>SETUP GAME</Button>\n                        </Box> </div>}\n                </div><br /><br />\n                <Box>\n                    <Button size=\"large\" variant=\"outlined\" color=\"primary\" >Hello, {this.state.userState.displayName}</Button>\n                </Box>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.resetGame.bind(this)} >Reset Game</Button>\n                    </Box>\n                </div>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.getCards.bind(this)} >See Cards</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.packed.bind(this)} >Pack</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.showCards.bind(this)} >Show Cards</Button>\n                    </Box>\n                </div>\n                <div style={horizontal}>\n                    <h2>Your cards are:</h2>\n                    {this.renderCards()}\n                </div>\n                <div ref=\"cardsStats\">\n                    {this.renderStats()}\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Cards"]},"metadata":{},"sourceType":"module"}