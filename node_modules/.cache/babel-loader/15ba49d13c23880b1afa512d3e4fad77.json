{"ast":null,"code":"var _jsxFileName = \"/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase';\nconst divStyle = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nconst table = {\n  display: 'grid'\n};\nlet id = 0;\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n    this.logout = this.logout.bind(this);\n    this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n    this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n    this.generate = this.generate.bind(this);\n    this.getCards = this.getCards.bind(this);\n    this.getRealCards = this.getRealCards.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n    this.getMessages = this.getMessages.bind(this);\n    this.packed = this.packed.bind(this);\n    this.showCards = this.showCards.bind(this);\n    this.createData = this.createData.bind(this);\n    this.state = {\n      cardIndicies: [],\n      firstCard: [],\n      secondCard: [],\n      thirdCard: [],\n      fourthCard: [],\n      cards: [],\n      messages: [],\n      numPlayers: '',\n      numCards: 3,\n      userState: this.props.userState,\n      gameSet: true\n    };\n  }\n\n  componentDidMount() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          userState: user\n        });\n      }\n    });\n    fire.database().ref('users/isGameSet').on('value', snap => {\n      this.setState({\n        gameSet: snap.val()\n      });\n    });\n    fire.database().ref('users/numCardsPerPlayer').on('value', snap => {\n      this.setState({\n        numCards: snap.val()\n      });\n    });\n    fire.database().ref('messages').on('value', snap => {\n      this.setState({\n        messages: []\n      });\n      snap.forEach(msg => {\n        this.setState({\n          messages: this.state.messages.concat(msg.val().message)\n        });\n      });\n    });\n  }\n\n  getMessages() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, this.state.messages.map((message, key) => {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, message);\n    }));\n  }\n\n  logout() {\n    fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n      isLoggedIn: false\n    });\n    fire.auth().signOut().then(result => {\n      this.setState({\n        userState: null\n      });\n    });\n  }\n\n  resetGame(e) {\n    e.preventDefault(); // update isGameSet to database after reset game\n\n    var updates = {};\n    updates['users/' + 'isGameSet'] = false;\n    fire.database().ref().update(updates).then(u => {\n      var updates = {};\n      updates['messages/'] = null;\n      fire.database().ref().update(updates).then(u => {\n        fire.database().ref('users').child('list').once('value', snap => {\n          snap.forEach(user => {\n            if (user.val().isLoggedIn) {\n              fire.database().ref('users/list/' + user.key).update({\n                cards: null\n              });\n            }\n          });\n        }).then(u => {\n          this.setState({\n            gameSet: false,\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: []\n          });\n        });\n      });\n    });\n  }\n\n  generate(e) {\n    e.preventDefault();\n    let randomNumbers = new Set();\n    let cardsTrips = [];\n\n    for (let i = 0; i < 52; i++) {\n      var rand = Math.floor(Math.random() * 51);\n      randomNumbers.add(rand);\n    }\n\n    var cardsSet = randomNumbers.values();\n    const cardsNum = this.state.numCards;\n\n    for (let j = 0; j < this.state.numPlayers; j++) {\n      if (cardsNum == 1) {\n        cardsTrips[j] = [cardsSet.next().value];\n      } else if (cardsNum == 2) {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value];\n      } else if (cardsNum == 3) {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n      } else if (cardsNum == 4) {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n      } else {\n        cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n      }\n    }\n\n    this.setState({\n      gameSet: true\n    }); // update isGameSet to database\n\n    var updates = {};\n    updates['users/' + 'isGameSet'] = true;\n    fire.database().ref().update(updates); // update cards to database\n\n    var i = 0;\n    fire.database().ref('users').child('list').once('value', snap => {\n      snap.forEach(user => {\n        if (user.val().isLoggedIn) {\n          fire.database().ref('users/list/' + user.key).update({\n            cards: cardsTrips[i]\n          });\n          i++;\n        }\n      });\n    });\n  }\n\n  getCards(e) {\n    e.preventDefault();\n\n    if (this.state.gameSet == true) {\n      fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then(snap => {\n        this.setState({\n          cardIndicies: snap.val()\n        });\n        this.getRealCards();\n      });\n    } else {\n      console.log(\"Trying to get cards when you're not in a game\");\n    }\n  }\n\n  getRealCards() {\n    const cardsNum = this.state.numCards;\n\n    if (cardsNum == 1) {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.setState({\n          firstCard: snap.val()\n        });\n      });\n    } else if (cardsNum == 2) {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.setState({\n          firstCard: snap.val()\n        });\n      }).then(u => {\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n          this.setState({\n            secondCard: snap.val()\n          });\n        });\n      });\n    } else if (cardsNum == 3) {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.setState({\n          firstCard: snap.val()\n        });\n      }).then(u => {\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n          this.setState({\n            secondCard: snap.val()\n          });\n        }).then(u => {\n          fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then(snap => {\n            this.setState({\n              thirdCard: snap.val()\n            });\n          });\n        });\n      });\n    } else if (cardsNum == 4) {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.setState({\n          firstCard: snap.val()\n        });\n      }).then(u => {\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n          this.setState({\n            secondCard: snap.val()\n          });\n        }).then(u => {\n          fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then(snap => {\n            this.setState({\n              thirdCard: snap.val()\n            });\n          }).then(u => {\n            fire.database().ref('cards/' + this.state.cardIndicies[3]).once('value').then(snap => {\n              this.setState({\n                fourthCard: snap.val()\n              });\n            });\n          });\n        });\n      });\n    } else {\n      fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n        this.setState({\n          firstCard: snap.val()\n        });\n      }).then(u => {\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n          this.setState({\n            secondCard: snap.val()\n          });\n        }).then(u => {\n          fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then(snap => {\n            this.setState({\n              thirdCard: snap.val()\n            });\n          });\n        });\n      });\n    }\n\n    fire.database().ref('messages/').push({\n      message: this.state.userState.displayName + ' is SEEN'\n    });\n  }\n\n  renderCards() {\n    const cardsNum = this.state.numCards;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, cardsNum == 1 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 26\n      }\n    }, \"The first card is: \", this.state.firstCard.card, \" \", this.state.firstCard.suit)), cardsNum == 2 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }\n    }, \"The first card is: \", this.state.firstCard.card, \" \", this.state.firstCard.suit), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, \"The second card is: \", this.state.secondCard.card, \" \", this.state.secondCard.suit)), cardsNum == 3 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }\n    }, \"The first card is: \", this.state.firstCard.card, \" \", this.state.firstCard.suit), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, \"The second card is: \", this.state.secondCard.card, \" \", this.state.secondCard.suit), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }, \"The third card is: \", this.state.thirdCard.card, \" \", this.state.thirdCard.suit)), cardsNum == 4 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }, \"The first card is: \", this.state.firstCard.card, \" \", this.state.firstCard.suit), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }, \"The second card is: \", this.state.secondCard.card, \" \", this.state.secondCard.suit), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }, \"The third card is: \", this.state.thirdCard.card, \" \", this.state.thirdCard.suit), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }\n    }, \"The fourth card is: \", this.state.fourthCard.card, \" \", this.state.fourthCard.suit)));\n  }\n\n  handleNumPlayersFieldChange(e) {\n    e.preventDefault();\n    this.setState({\n      numPlayers: e.target.value\n    });\n  }\n\n  handleNumCardsFieldChange(e) {\n    e.preventDefault();\n    const num = e.target.value; // update numCards to database\n\n    var updates = {};\n    updates['users/' + 'numCardsPerPlayer'] = num;\n    fire.database().ref().update(updates).then(u => {\n      this.setState({\n        numCards: num\n      });\n    });\n  }\n\n  packed(e) {\n    e.preventDefault();\n    fire.database().ref('messages/').push({\n      message: this.state.userState.displayName + ' is PACK'\n    });\n  }\n\n  showCards(e) {\n    e.preventDefault();\n    const cardsNum = this.state.numCards;\n    var message = `${this.state.userState.displayName} is SHOW and their cards are: `;\n\n    if (cardsNum == 1) {\n      message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit}`;\n    } else if (cardsNum == 2) {\n      message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit}`;\n    } else if (cardsNum == 3) {\n      message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit} ${this.state.thirdCard.card} ${this.state.thirdCard.suit}`;\n    } else if (cardsNum == 4) {\n      message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit} ${this.state.thirdCard.card} ${this.state.thirdCard.suit} ${this.state.fourthCard.card} ${this.state.fourthCard.suit}`;\n    }\n\n    fire.database().ref('messages/').push({\n      message: message\n    });\n  }\n\n  createRows() {}\n\n  createData(name, status) {\n    id += 1;\n    return {\n      id,\n      name,\n      status\n    };\n  }\n\n  render() {\n    let rows = [this.createData('Setting One', 'Public'), this.createData('Setting Two', 'Public'), this.createData('Setting Three', 'Group'), this.createData('Setting Four', 'Private')];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setup_game\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, !this.state.gameSet && /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"numPlayers\",\n      label: \"Number of players\",\n      value: this.state.numPlayers,\n      onChange: this.handleNumPlayersFieldChange,\n      helperText: \"Please enter the number of players\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"numCards\",\n      label: \"Number of cards\",\n      value: this.state.numCards,\n      onChange: this.handleNumCardsFieldChange,\n      helperText: \"Please enter the number of cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      pt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.generate.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 29\n      }\n    }, \"SETUP GAME\")), \" \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      variant: \"outlined\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }\n    }, \"Hello, \", this.props.userState.displayName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logout_reset\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.logout.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 25\n      }\n    }, \"Logout\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.resetGame.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 25\n      }\n    }, \"Reset Game\"))), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.getCards.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, \"See Cards\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.packed.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }, \"Pack\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.showCards.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 21\n      }\n    }, \"Show Cards\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }\n    }, \"Your cards are:\"), this.renderCards(), /*#__PURE__*/React.createElement(\"div\", {\n      style: table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      align: \"center\",\n      border: \"1\",\n      width: \"250px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 37\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 37\n      }\n    }, \"Status\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 25\n      }\n    }, rows.map(row => /*#__PURE__*/React.createElement(\"tr\", {\n      key: row.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 41\n      }\n    }, row.name)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 41\n      }\n    }, row.status))))))));\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js"],"names":["React","Component","TextField","Button","Box","fire","divStyle","display","justifyContent","table","id","Cards","constructor","props","logout","bind","handleNumPlayersFieldChange","handleNumCardsFieldChange","generate","getCards","getRealCards","resetGame","getMessages","packed","showCards","createData","state","cardIndicies","firstCard","secondCard","thirdCard","fourthCard","cards","messages","numPlayers","numCards","userState","gameSet","componentDidMount","auth","onAuthStateChanged","user","setState","database","ref","on","snap","val","forEach","msg","concat","message","map","key","currentUser","uid","update","isLoggedIn","signOut","then","result","e","preventDefault","updates","u","child","once","randomNumbers","Set","cardsTrips","i","rand","Math","floor","random","add","cardsSet","values","cardsNum","j","next","value","console","log","push","displayName","renderCards","card","suit","target","num","createRows","name","status","render","rows","row"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\n\nconst divStyle = {\n    display: 'flex',\n    justifyContent: 'center'\n};\n\nconst table = {\n    display: 'grid'\n}\n\nlet id = 0;\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.logout = this.logout.bind(this);\n        this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n        this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n        this.generate = this.generate.bind(this);\n        this.getCards = this.getCards.bind(this);\n        this.getRealCards = this.getRealCards.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n        this.getMessages = this.getMessages.bind(this);\n        this.packed = this.packed.bind(this);\n        this.showCards = this.showCards.bind(this);\n\n        this.createData = this.createData.bind(this);\n        this.state = {\n            cardIndicies: [],\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            cards: [],\n            messages: [],\n            numPlayers: '',\n            numCards: 3,\n            userState: this.props.userState,\n            gameSet: true\n        }\n    }\n\n    componentDidMount() {\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    userState: user\n                })\n            }\n        })\n\n        fire.database().ref('users/isGameSet').on('value', snap => {\n            this.setState({ gameSet: snap.val() })\n        })\n\n        fire.database().ref('users/numCardsPerPlayer').on('value', snap => {\n            this.setState({ numCards: snap.val() })\n        })\n\n        fire.database().ref('messages').on('value', snap => {\n            this.setState({ messages: [] })\n            snap.forEach((msg) => {\n                this.setState({\n                    messages: this.state.messages.concat(msg.val().message)\n                });\n            })\n        })\n    }\n\n    getMessages() {\n        return (\n            <div>\n                {this.state.messages.map((message, key) => {\n                    return (\n                        <h3 key={key}>{message}</h3>\n                    )\n                })}\n            </div>\n        )\n    }\n\n    logout() {\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n            isLoggedIn: false\n        })\n\n        fire.auth().signOut().then((result) => {\n            this.setState({\n                userState: null\n            })\n        })\n    }\n\n    resetGame(e) {\n        e.preventDefault()\n\n        // update isGameSet to database after reset game\n        var updates = {};\n        updates['users/' + 'isGameSet'] = false;\n        fire.database().ref().update(updates).then((u) => {\n            var updates = {};\n            updates['messages/'] = null;\n            fire.database().ref().update(updates).then((u) => {\n                fire.database().ref('users').child('list').once('value', snap => {\n                    snap.forEach((user) => {\n                        if (user.val().isLoggedIn) {\n                            fire.database().ref('users/list/' + user.key).update({ cards: null })\n                        }\n                    })\n                }).then((u) => {\n                    this.setState({\n                        gameSet: false,\n                        firstCard: [],\n                        secondCard: [],\n                        thirdCard: [],\n                        fourthCard: []\n                    })\n                })\n            })\n        })\n    }\n\n    generate(e) {\n        e.preventDefault()\n\n        let randomNumbers = new Set();\n        let cardsTrips = [];\n        for (let i = 0; i < 52; i++) {\n            var rand = Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n\n        var cardsSet = randomNumbers.values()\n        const cardsNum = this.state.numCards\n\n        for (let j = 0; j < this.state.numPlayers; j++) {\n            if (cardsNum == 1) {\n                cardsTrips[j] = [cardsSet.next().value];\n            } else if (cardsNum == 2) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 3) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 4) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            }\n        }\n\n        this.setState({ gameSet: true })\n\n        // update isGameSet to database\n        var updates = {};\n        updates['users/' + 'isGameSet'] = true;\n        fire.database().ref().update(updates);\n\n        // update cards to database\n        var i = 0;\n        fire.database().ref('users').child('list').once('value', snap => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn) {\n                    fire.database().ref('users/list/' + user.key).update({ cards: cardsTrips[i] })\n                    i++;\n                }\n            })\n        });\n    }\n\n    getCards(e) {\n        e.preventDefault()\n        if (this.state.gameSet == true) {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then((snap => {\n                this.setState({ cardIndicies: snap.val() })\n                this.getRealCards()\n            }));\n        } else {\n            console.log(\"Trying to get cards when you're not in a game\")\n        }\n    }\n\n    getRealCards() {\n        const cardsNum = this.state.numCards\n        if (cardsNum == 1) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            }));\n        } else if (cardsNum == 2) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                }));\n            });\n        } else if (cardsNum == 3) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.setState({ thirdCard: snap.val() })\n                    }))\n                });\n            });\n        } else if (cardsNum == 4) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.setState({ thirdCard: snap.val() })\n                    })).then((u) => {\n                        fire.database().ref('cards/' + this.state.cardIndicies[3]).once('value').then((snap => {\n                            this.setState({ fourthCard: snap.val() })\n                        }));\n                    });\n                });\n            });\n        } else {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.setState({ thirdCard: snap.val() })\n                    }))\n                });\n            });\n        }\n\n        fire.database().ref('messages/').push({ message: this.state.userState.displayName + ' is SEEN' })\n    }\n\n    renderCards() {\n        const cardsNum = this.state.numCards\n        return (\n            <div>\n                {cardsNum == 1 &&\n                    <div><h3>The first card is: {this.state.firstCard.card} {this.state.firstCard.suit}</h3></div>\n                }\n\n                {cardsNum == 2 &&\n                    <div>\n                        <h3>The first card is: {this.state.firstCard.card} {this.state.firstCard.suit}</h3>\n                        <h3>The second card is: {this.state.secondCard.card} {this.state.secondCard.suit}</h3>\n                    </div>\n                }\n\n                {\n                    cardsNum == 3 &&\n                    <div>\n                        <h3>The first card is: {this.state.firstCard.card} {this.state.firstCard.suit}</h3>\n                        <h3>The second card is: {this.state.secondCard.card} {this.state.secondCard.suit}</h3>\n                        <h3>The third card is: {this.state.thirdCard.card} {this.state.thirdCard.suit}</h3>\n                    </div>\n                }\n\n                {\n                    cardsNum == 4 &&\n                    <div>\n                        <h3>The first card is: {this.state.firstCard.card} {this.state.firstCard.suit}</h3>\n                        <h3>The second card is: {this.state.secondCard.card} {this.state.secondCard.suit}</h3>\n                        <h3>The third card is: {this.state.thirdCard.card} {this.state.thirdCard.suit}</h3>\n                        <h3>The fourth card is: {this.state.fourthCard.card} {this.state.fourthCard.suit}</h3>\n                    </div>\n                }\n            </div >\n        )\n    }\n\n    handleNumPlayersFieldChange(e) {\n        e.preventDefault()\n        this.setState({\n            numPlayers: e.target.value\n        })\n    }\n\n    handleNumCardsFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        // update numCards to database\n        var updates = {};\n        updates['users/' + 'numCardsPerPlayer'] = num;\n        fire.database().ref().update(updates).then((u) => {\n            this.setState({\n                numCards: num\n            })\n        })\n    }\n\n    packed(e) {\n        e.preventDefault()\n        fire.database().ref('messages/').push({ message: this.state.userState.displayName + ' is PACK' })\n    }\n\n    showCards(e) {\n        e.preventDefault()\n        const cardsNum = this.state.numCards\n        var message = `${this.state.userState.displayName} is SHOW and their cards are: `\n        if (cardsNum == 1) {\n            message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit}`\n        } else if (cardsNum == 2) {\n            message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit}`\n        } else if (cardsNum == 3) {\n            message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit} ${this.state.thirdCard.card} ${this.state.thirdCard.suit}`\n        } else if (cardsNum == 4) {\n            message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit} ${this.state.thirdCard.card} ${this.state.thirdCard.suit} ${this.state.fourthCard.card} ${this.state.fourthCard.suit}`\n        }\n\n        fire.database().ref('messages/').push({ message: message })\n    }\n\n    createRows() {\n        \n    }\n\n    createData(name, status) {\n        id += 1;\n        return { id, name, status };\n    }\n\n    render() {\n        let rows = [\n            this.createData('Setting One', 'Public'),\n            this.createData('Setting Two', 'Public'),\n            this.createData('Setting Three', 'Group'),\n            this.createData('Setting Four', 'Private'),\n        ];\n        return (\n            <div className=\"container\" >\n                <div className=\"setup_game\" style={divStyle}>\n                    {!this.state.gameSet && <div style={divStyle}>\n                        <Box m={2}>\n                            <TextField id=\"numPlayers\" label=\"Number of players\" value={this.state.numPlayers} onChange={this.handleNumPlayersFieldChange} helperText=\"Please enter the number of players\" />\n                        </Box>\n                        <Box m={2}>\n                            <TextField id=\"numCards\" label=\"Number of cards\" value={this.state.numCards} onChange={this.handleNumCardsFieldChange} helperText=\"Please enter the number of cards\" />\n                        </Box>\n                        <Box m={2} pt={3}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.generate.bind(this)}>SETUP GAME</Button>\n                        </Box> </div>}\n                </div><br /><br />\n                <Box>\n                    <Button size=\"large\" variant=\"outlined\" color=\"primary\" >Hello, {this.props.userState.displayName}</Button>\n                </Box>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.resetGame.bind(this)} >Reset Game</Button>\n                    </Box>\n                </div>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.getCards.bind(this)} >See Cards</Button>\n                </Box>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.packed.bind(this)} >Pack</Button>\n                </Box>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.showCards.bind(this)} >Show Cards</Button>\n                </Box>\n                <h2>Your cards are:</h2>\n                {this.renderCards()}\n                {/* {this.getMessages()} */}\n                <div style={table}>\n                    <table align=\"center\" border=\"1\" width=\"250px\">\n                        <thead>\n                            <tr>\n                                <th><h2>Name</h2></th>\n                                <th><h2>Status</h2></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {rows.map(row => (\n                                <tr key={row.id}>\n                                    <td><h3>{row.name}</h3></td>\n                                    <td><h3>{row.status}</h3></td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Cards"]},"metadata":{},"sourceType":"module"}