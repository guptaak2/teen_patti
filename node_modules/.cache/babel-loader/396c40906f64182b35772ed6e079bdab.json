{"ast":null,"code":"var _jsxFileName = \"/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase';\nvar URL = \"https://us-central1-teen-patti-5a5fc.cloudfunctions.net\";\nconst divStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n};\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n    this.getUserData = this.getUserData.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n    this.generate = this.generate.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n    this.state = {\n      cards: [],\n      numPlayers: '',\n      userState: this.props.userState,\n      gameSet: true\n    };\n  }\n\n  componentDidMount() {\n    fire.database().ref('users/isGameSet').on('value', snap => {\n      this.setState({\n        gameSet: snap.val()\n      });\n    });\n  }\n\n  getUserData() {\n    var userId = fire.auth().currentUser.uid;\n    console.log(userId);\n    return fire.database().ref('users/' + userId).once('value').then(function (snapshot) {\n      var username = snapshot.val() && snapshot.val().username || 'Anonymous';\n      console.log(username);\n    });\n  }\n\n  logout() {\n    fire.auth().signOut().then(result => {\n      this.setState({\n        userState: null\n      });\n    });\n  }\n\n  resetGame() {\n    // update isGameSet to database after reset game\n    var updates = {};\n    updates['users/' + 'isGameSet'] = false;\n    fire.database().ref().update(updates);\n    this.setState({\n      gameSet: false\n    });\n  }\n\n  componentDidMount() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          userState: user\n        });\n      }\n    });\n    const dbRef = fire.database().ref('users/isGameSet');\n    dbRef.on('value', snap => {\n      this.setState({\n        gameSet: snap.val()\n      });\n    });\n    fire.database().ref('users').child('list').once('value', snap => {\n      snap.forEach(child => {\n        fire.database().ref('users/list/' + child.key).console.log(child.val());\n      });\n    }); // GET CARDS BRO\n    // const dbRef = fire.database().ref().child('cards')\n    // dbRef.on('value', snap => {\n    //   snap.val().forEach((card) => {\n    //     cards.push({\n    //       suit: card.suit,\n    //       card: card.card\n    //     });\n    //   })\n    //   cards.forEach((card) => {\n    //     console.log(\"Suit: \" + card.suit + \" Card: \" + card.card)\n    //   })\n    // })\n  }\n\n  generate(e) {\n    e.preventDefault();\n    let randomNumbers = new Set();\n    let cardsTrips = [];\n\n    for (let i = 0; i < 52; i++) {\n      var rand = Math.floor(Math.random() * 51);\n      randomNumbers.add(rand);\n    }\n\n    var cardsSet = randomNumbers.values();\n\n    for (let j = 0; j < this.state.numPlayers; j++) {\n      cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n    }\n\n    console.log(cardsTrips);\n    this.setState({\n      gameSet: true\n    }); // update isGameSet to database\n\n    var updates = {};\n    updates['users/' + 'isGameSet'] = true;\n    fire.database().ref().update(updates);\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    const {\n      cards\n    } = this.state;\n    const newItem = this.newItem.value;\n    const isOnTheList = cards.includes(newItem);\n\n    if (isOnTheList) {\n      this.setState({\n        message: 'This item is already on the list'\n      });\n    } else {\n      return newItem !== '' && axios.post(URL + '/addCards', {\n        item: newItem\n      }).then(response => {\n        this.setState({\n          cards: response.data\n        });\n      });\n    }\n  }\n\n  getCards(event) {\n    event.preventDefault();\n    return axios.get(URL + '/getCards').then(response => {\n      this.setState({\n        cards: response.data\n      });\n    });\n  }\n\n  clearAll() {\n    this.setState({\n      cards: [],\n      message: 'No cards in the list, add some'\n    });\n  }\n\n  renderCards() {\n    const {\n      cards,\n      message\n    } = this.state;\n    return cards.map(item => {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 24\n        }\n      }, item.item);\n    });\n  }\n\n  handleNumPlayersFieldChange(e) {\n    e.preventDefault();\n    this.setState({\n      numPlayers: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top_row\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, !this.state.gameSet && /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"numPlayers\",\n      label: \"Number of players\",\n      value: this.state.numPlayers,\n      onChange: this.handleNumPlayersFieldChange,\n      helperText: \"Please enter the number of players\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      pt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.generate.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, \"SETUP GAME\")), \" \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.logout.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, \"Logout\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.resetGame.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, \"Reset Game\")), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.getUserData.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, \"Get Cards\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, \"Your cards are:\"), this.renderCards());\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js"],"names":["React","Component","axios","TextField","Button","Box","fire","URL","divStyle","display","justifyContent","alignItems","Cards","constructor","props","getUserData","bind","logout","handleNumPlayersFieldChange","generate","resetGame","state","cards","numPlayers","userState","gameSet","componentDidMount","database","ref","on","snap","setState","val","userId","auth","currentUser","uid","console","log","once","then","snapshot","username","signOut","result","updates","update","onAuthStateChanged","user","dbRef","child","forEach","key","e","preventDefault","randomNumbers","Set","cardsTrips","i","rand","Math","floor","random","add","cardsSet","values","j","next","value","addItem","event","newItem","isOnTheList","includes","message","post","item","response","data","getCards","get","clearAll","renderCards","map","target","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\n\nvar URL = \"https://us-central1-teen-patti-5a5fc.cloudfunctions.net\"\nconst divStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n};\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.getUserData = this.getUserData.bind(this);\n        this.logout = this.logout.bind(this);\n        this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n        this.generate = this.generate.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n        this.state = {\n            cards: [],\n            numPlayers: '',\n            userState: this.props.userState,\n            gameSet: true\n        }\n    }\n\n    componentDidMount () {\n        fire.database().ref('users/isGameSet').on('value', snap => {\n            this.setState({ gameSet: snap.val()})\n        })\n    }\n\n    getUserData() {\n        var userId = fire.auth().currentUser.uid;\n        console.log(userId)\n        return fire.database().ref('users/' + userId).once('value').then(function (snapshot) {\n            var username = (snapshot.val() && snapshot.val().username) || 'Anonymous';\n            console.log(username)\n        });\n    }\n\n    logout() {\n        fire.auth().signOut().then((result) => {\n            this.setState({\n                userState: null\n            })\n        })\n    }\n    \n    resetGame() {\n        // update isGameSet to database after reset game\n        var updates = {};\n        updates['users/' + 'isGameSet'] = false;\n        fire.database().ref().update(updates);\n\n        this.setState({ gameSet: false })\n    }\n\n    componentDidMount() {\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    userState: user\n                })\n            }\n        })\n\n        const dbRef = fire.database().ref('users/isGameSet')\n        dbRef.on('value', snap => {\n            this.setState({\n                gameSet: snap.val()\n            })\n        })\n\n        fire.database().ref('users').child('list').once('value', snap => {\n            snap.forEach(child => {\n                fire.database().ref('users/list/' + child.key).\n                console.log(child.val())\n            })\n        })\n\n        // GET CARDS BRO\n        // const dbRef = fire.database().ref().child('cards')\n        // dbRef.on('value', snap => {\n        //   snap.val().forEach((card) => {\n        //     cards.push({\n        //       suit: card.suit,\n        //       card: card.card\n        //     });\n        //   })\n        //   cards.forEach((card) => {\n        //     console.log(\"Suit: \" + card.suit + \" Card: \" + card.card)\n        //   })\n        // })\n    }\n\n    generate(e) {\n        e.preventDefault()\n\n        let randomNumbers = new Set();\n        let cardsTrips = [];\n        for (let i = 0; i < 52; i++) {\n            var rand = Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n\n        var cardsSet = randomNumbers.values()\n\n        for (let j = 0; j < this.state.numPlayers; j++) {\n            cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value]\n        }\n\n        console.log(cardsTrips);\n        this.setState({ gameSet: true})\n\n        // update isGameSet to database\n        var updates = {};\n        updates['users/' + 'isGameSet'] = true;\n        fire.database().ref().update(updates);\n    }\n\n    addItem(event) {\n        event.preventDefault()\n        const { cards } = this.state;\n        const newItem = this.newItem.value;\n\n        const isOnTheList = cards.includes(newItem)\n\n        if (isOnTheList) {\n            this.setState({\n                message: 'This item is already on the list'\n            })\n\n        } else {\n            return newItem !== '' && axios.post(URL + '/addCards', { item: newItem }).then((response) => {\n                this.setState({\n                    cards: response.data\n                })\n            })\n        }\n    }\n\n    getCards(event) {\n        event.preventDefault()\n        return axios.get(URL + '/getCards').then((response) => {\n            this.setState({\n                cards: response.data\n            })\n        })\n    }\n\n\n    clearAll() {\n        this.setState({\n            cards: [],\n            message: 'No cards in the list, add some'\n        })\n    }\n\n    renderCards() {\n        const { cards, message } = this.state;\n        return (\n            cards.map(item => {\n                return <h3>{item.item}</h3>\n            })\n        )\n    }\n\n    handleNumPlayersFieldChange(e) {\n        e.preventDefault()\n        this.setState({\n            numPlayers: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"top_row\" style={divStyle}>\n                    { !this.state.gameSet && <div style={divStyle}>\n                        <Box>\n                            <TextField id=\"numPlayers\" label=\"Number of players\" value={this.state.numPlayers} onChange={this.handleNumPlayersFieldChange} helperText=\"Please enter the number of players\" />\n                        </Box>\n                        <Box m={2} pt={3}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.generate.bind(this)}>SETUP GAME</Button>\n                        </Box> </div>}\n                </div><br /><br />\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                </Box>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.resetGame.bind(this)} >Reset Game</Button>\n                </Box>\n                <Box>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.getUserData.bind(this)} >Get Cards</Button>\n                </Box>\n                <h2>Your cards are:</h2>\n                {this.renderCards()}\n            </div>\n        );\n    }\n}\n\nexport default Cards"]},"metadata":{},"sourceType":"module"}