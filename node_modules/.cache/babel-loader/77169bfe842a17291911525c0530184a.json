{"ast":null,"code":"var _jsxFileName = \"/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase';\nconst divStyle = {\n  display: 'flex',\n  justifyContent: 'center'\n};\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n    this.logout = this.logout.bind(this);\n    this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n    this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n    this.generate = this.generate.bind(this);\n    this.getCards = this.getCards.bind(this);\n    this.getRealCards = this.getRealCards.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n    this.getMessages = this.getMessages.bind(this);\n    this.packed = this.packed.bind(this);\n    this.showCards = this.showCards.bind(this);\n    this.state = {\n      cardIndicies: [],\n      firstCard: [],\n      secondCard: [],\n      thirdCard: [],\n      cards: [],\n      messages: [],\n      numPlayers: '',\n      numCards: 3,\n      userState: this.props.userState,\n      gameSet: true\n    };\n  }\n\n  componentDidMount() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          userState: user\n        });\n      }\n    });\n    fire.database().ref('users/isGameSet').on('value', snap => {\n      this.setState({\n        gameSet: snap.val()\n      });\n    });\n    fire.database().ref('messages').on('value', snap => {\n      this.setState({\n        messages: []\n      });\n      snap.forEach(msg => {\n        this.setState({\n          messages: this.state.messages.concat(msg.val().message)\n        });\n      });\n    });\n  }\n\n  getMessages() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, this.state.messages.map((message, key) => {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, message);\n    }));\n  }\n\n  logout() {\n    fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n      isLoggedIn: false\n    });\n    fire.auth().signOut().then(result => {\n      this.setState({\n        userState: null\n      });\n    });\n  }\n\n  resetGame(e) {\n    e.preventDefault(); // update isGameSet to database after reset game\n\n    var updates = {};\n    updates['users/' + 'isGameSet'] = false;\n    fire.database().ref().update(updates);\n    this.setState(state => {\n      return {\n        gameSet: !state.gameSet\n      };\n    });\n    this.setState({\n      firstCard: [],\n      secondCard: [],\n      thirdCard: []\n    });\n    var updates = {};\n    updates['messages/'] = null;\n    fire.database().ref().update(updates);\n  }\n\n  generate(e) {\n    e.preventDefault();\n    let randomNumbers = new Set();\n    let cardsTrips = [];\n\n    for (let i = 0; i < 52; i++) {\n      var rand = Math.floor(Math.random() * 51);\n      randomNumbers.add(rand);\n    }\n\n    var cardsSet = randomNumbers.values();\n\n    for (let j = 0; j < this.state.numPlayers; j++) {\n      cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n    }\n\n    this.setState({\n      gameSet: true\n    }); // update isGameSet to database\n\n    var updates = {};\n    updates['users/' + 'isGameSet'] = true;\n    fire.database().ref().update(updates); // update cards to database\n\n    var i = 0;\n    fire.database().ref('users').child('list').once('value', snap => {\n      snap.forEach(user => {\n        if (user.val().isLoggedIn) {\n          fire.database().ref('users/list/' + user.key).update({\n            cards: cardsTrips[i]\n          });\n          i++;\n        }\n      });\n    });\n  }\n\n  getCards(e) {\n    e.preventDefault();\n\n    if (this.state.gameSet) {\n      fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then(snap => {\n        this.setState({\n          cardIndicies: snap.val()\n        });\n        this.getRealCards();\n      });\n    } else {\n      console.log(\"Trying to get cards when you're not in a game\");\n    }\n  }\n\n  getRealCards() {\n    fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then(snap => {\n      this.setState({\n        firstCard: snap.val()\n      });\n    });\n    fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then(snap => {\n      this.setState({\n        secondCard: snap.val()\n      });\n    });\n    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then(snap => {\n      this.setState({\n        thirdCard: snap.val()\n      });\n    });\n    fire.database().ref('messages/').push({\n      message: this.state.userState.displayName + ' is SEEN'\n    });\n  }\n\n  renderCards() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, \"The first card is: \", this.state.firstCard.card, \" \", this.state.firstCard.suit), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, \"The second card is: \", this.state.secondCard.card, \" \", this.state.secondCard.suit), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, \"The third card is: \", this.state.thirdCard.card, \" \", this.state.thirdCard.suit));\n  }\n\n  handleNumPlayersFieldChange(e) {\n    e.preventDefault();\n    this.setState({\n      numPlayers: e.target.value\n    });\n  }\n\n  handleNumCardsFieldChange(e) {\n    e.preventDefault();\n    this.setState({\n      numCards: e.target.value\n    });\n  }\n\n  packed(e) {\n    e.preventDefault();\n    fire.database().ref('messages/').push({\n      message: this.state.userState.displayName + ' is PACK'\n    });\n  }\n\n  showCards(e) {\n    e.preventDefault();\n    fire.database().ref('messages/').push({\n      message: this.state.userState.displayName + ' is SHOW and their cards are: ' + this.state.firstCard.card + ' ' + this.state.firstCard.suit + ' ' + this.state.secondCard.card + ' ' + this.state.secondCard.suit + ' ' + this.state.thirdCard.card + ' ' + this.state.thirdCard.suit\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setup_game\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, !this.state.gameSet && /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"numPlayers\",\n      label: \"Number of players\",\n      value: this.state.numPlayers,\n      onChange: this.handleNumPlayersFieldChange,\n      helperText: \"Please enter the number of players\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"numCards\",\n      label: \"Number of cards (default 3)\",\n      value: this.state.numCards,\n      onChange: this.handleFirstNameFieldChange,\n      helperText: \"Please enter your first name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      pt: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.generate.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }, \"SETUP GAME\")), \" \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      variant: \"outlined\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, \"Hello, \", this.props.userState.displayName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logout_reset\",\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.logout.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }, \"Logout\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.resetGame.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, \"Reset Game\"))), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.getCards.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, \"See Cards\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.packed.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }, \"Pack\")), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.showCards.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, \"Show Cards\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, \"Your cards are:\"), this.renderCards(), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, \" Messages:\"), this.getMessages());\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/akhilgupta/Desktop/Teen Patti/src/components/Cards.js"],"names":["React","Component","TextField","Button","Box","fire","divStyle","display","justifyContent","Cards","constructor","props","logout","bind","handleNumPlayersFieldChange","handleNumCardsFieldChange","generate","getCards","getRealCards","resetGame","getMessages","packed","showCards","state","cardIndicies","firstCard","secondCard","thirdCard","cards","messages","numPlayers","numCards","userState","gameSet","componentDidMount","auth","onAuthStateChanged","user","setState","database","ref","on","snap","val","forEach","msg","concat","message","map","key","currentUser","uid","update","isLoggedIn","signOut","then","result","e","preventDefault","updates","randomNumbers","Set","cardsTrips","i","rand","Math","floor","random","add","cardsSet","values","j","next","value","child","once","console","log","push","displayName","renderCards","card","suit","target","render","handleFirstNameFieldChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\n\nconst divStyle = {\n    display: 'flex',\n    justifyContent: 'center'\n};\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.logout = this.logout.bind(this);\n        this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n        this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n        this.generate = this.generate.bind(this);\n        this.getCards = this.getCards.bind(this);\n        this.getRealCards = this.getRealCards.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n        this.getMessages = this.getMessages.bind(this);\n        this.packed = this.packed.bind(this);\n        this.showCards = this.showCards.bind(this);\n\n        this.state = {\n            cardIndicies: [],\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            cards: [],\n            messages: [],\n            numPlayers: '',\n            numCards: 3,\n            userState: this.props.userState,\n            gameSet: true\n        }\n    }\n\n    componentDidMount() {\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    userState: user\n                })\n            }\n        })\n\n        fire.database().ref('users/isGameSet').on('value', snap => {\n            this.setState({ gameSet: snap.val() })\n        })\n\n        fire.database().ref('messages').on('value', snap => {\n            this.setState({ messages: [] })\n            snap.forEach((msg) => {\n                this.setState({\n                    messages: this.state.messages.concat(msg.val().message)\n                });\n            })\n        })\n    }\n\n    getMessages() {\n        return (\n            <div>\n                {this.state.messages.map((message, key) => {\n                    return (\n                        <h3 key={key}>{message}</h3>\n                    )\n                })}\n            </div>\n        )\n    }\n\n    logout() {\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n            isLoggedIn: false\n        })\n\n        fire.auth().signOut().then((result) => {\n            this.setState({\n                userState: null\n            })\n        })\n    }\n\n    resetGame(e) {\n        e.preventDefault()\n\n        // update isGameSet to database after reset game\n        var updates = {};\n        updates['users/' + 'isGameSet'] = false;\n        fire.database().ref().update(updates);\n\n        this.setState((state) => {\n            return { gameSet: !state.gameSet }\n        })\n\n        this.setState({\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n        })\n\n        var updates = {};\n        updates['messages/'] = null;\n        fire.database().ref().update(updates);\n    }\n\n    generate(e) {\n        e.preventDefault()\n\n        let randomNumbers = new Set();\n        let cardsTrips = [];\n        for (let i = 0; i < 52; i++) {\n            var rand = Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n\n        var cardsSet = randomNumbers.values()\n\n        for (let j = 0; j < this.state.numPlayers; j++) {\n            cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value]\n        }\n\n        this.setState({ gameSet: true })\n\n        // update isGameSet to database\n        var updates = {};\n        updates['users/' + 'isGameSet'] = true;\n        fire.database().ref().update(updates);\n\n        // update cards to database\n        var i = 0;\n        fire.database().ref('users').child('list').once('value', snap => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn) {\n                    fire.database().ref('users/list/' + user.key).update({ cards: cardsTrips[i] })\n                    i++;\n                }\n            })\n        });\n    }\n\n    getCards(e) {\n        e.preventDefault()\n        if (this.state.gameSet) {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then((snap => {\n                this.setState({ cardIndicies: snap.val() })\n                this.getRealCards()\n            }));\n        } else {\n            console.log(\"Trying to get cards when you're not in a game\")\n        }\n    }\n\n    getRealCards() {\n        fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n            this.setState({ firstCard: snap.val() })\n        }));\n\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n            this.setState({ secondCard: snap.val() })\n        }));\n\n        fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n            this.setState({ thirdCard: snap.val() })\n        }));\n\n        fire.database().ref('messages/').push({ message: this.state.userState.displayName + ' is SEEN' })\n    }\n\n    renderCards() {\n        return (\n            <div>\n                <h3>The first card is: {this.state.firstCard.card} {this.state.firstCard.suit}</h3>\n                <h3>The second card is: {this.state.secondCard.card} {this.state.secondCard.suit}</h3>\n                <h3>The third card is: {this.state.thirdCard.card} {this.state.thirdCard.suit}</h3>\n            </div>\n        )\n    }\n\n    handleNumPlayersFieldChange(e) {\n        e.preventDefault()\n        this.setState({\n            numPlayers: e.target.value\n        })\n    }\n\n    handleNumCardsFieldChange(e) {\n        e.preventDefault()\n        this.setState({\n            numCards: e.target.value\n        })\n    }\n\n    packed(e) {\n        e.preventDefault()\n        fire.database().ref('messages/').push({ message: this.state.userState.displayName + ' is PACK' })\n    }\n\n    showCards(e) {\n        e.preventDefault()\n        fire.database().ref('messages/').push({\n            message: this.state.userState.displayName + ' is SHOW and their cards are: ' +\n                this.state.firstCard.card + ' ' + this.state.firstCard.suit + ' ' +\n                this.state.secondCard.card + ' ' + this.state.secondCard.suit + ' ' +\n                this.state.thirdCard.card + ' ' + this.state.thirdCard.suit\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\" >\n                <div className=\"setup_game\" style={divStyle}>\n                    {!this.state.gameSet && <div style={divStyle}>\n                        <Box m={2}>\n                            <TextField id=\"numPlayers\" label=\"Number of players\" value={this.state.numPlayers} onChange={this.handleNumPlayersFieldChange} helperText=\"Please enter the number of players\" />\n                        </Box>\n                        <Box m={2}>\n\t\t\t\t\t\t\t<TextField id=\"numCards\" label=\"Number of cards (default 3)\" value={this.state.numCards} onChange={this.handleFirstNameFieldChange} helperText=\"Please enter your first name\" />\n\t\t\t\t\t\t</Box>\n                        <Box m={2} pt={3}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.generate.bind(this)}>SETUP GAME</Button>\n                        </Box> </div>}\n                </div><br /><br />\n                <Box>\n                    <Button size=\"large\" variant=\"outlined\" color=\"primary\" >Hello, {this.props.userState.displayName}</Button>\n                </Box>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.resetGame.bind(this)} >Reset Game</Button>\n                    </Box>\n                </div>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.getCards.bind(this)} >See Cards</Button>\n                </Box>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.packed.bind(this)} >Pack</Button>\n                </Box>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.showCards.bind(this)} >Show Cards</Button>\n                </Box>\n                <h2>Your cards are:</h2>\n                {this.renderCards()\n                }\n                < h2 > Messages:</h2 >\n                {this.getMessages()}\n            </div >\n        );\n    }\n}\n\nexport default Cards"]},"metadata":{},"sourceType":"module"}