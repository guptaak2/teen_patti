{"version":3,"sources":["images/logo.png","config/Fire.js","components/Login.js","components/Cards.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","login","bind","signup","handleEmailFieldChange","handlePasswordFieldChange","handleFirstNameFieldChange","writeNewUser","state","firstName","email","password","emailHelperText","passwordHelperText","emailError","passwordError","e","preventDefault","auth","signInWithEmailAndPassword","this","then","u","database","ref","currentUser","uid","set","name","isLoggedIn","status","showCardsMessage","setState","catch","error","console","log","code","createUserWithEmailAndPassword","user","updateProfile","displayName","userId","updates","update","target","value","align","className","Box","TextField","id","label","onChange","helperText","type","m","pt","Button","variant","color","onClick","Component","divStyle","display","justifyContent","table","horizontal","Cards","setupBeforeUnloadListener","window","addEventListener","ev","logout","handleNumPlayersFieldChange","handleNumCardsFieldChange","generate","getCards","getRealCards","resetGame","packed","showCards","updateTable","scrollToBottom","getCellColor","cardIndicies","getCardIndicies","firstCard","secondCard","thirdCard","fourthCard","playerStats","numPlayers","numPackedPlayers","numCards","userState","gameSet","enableSee","getEnableSee","enablePack","getEnablePack","enableShow","getEnableShow","firstImgUrl","getFirstCardURL","secondImgUrl","getSecondCardURL","thirdImgUrl","getThirdCardURL","fourthImgUrl","getFourthCardURL","refs","cardsStats","scrollIntoView","behavior","block","inline","onAuthStateChanged","on","snap","snapVal","val","isGameSet","parseInt","numCardsPerPlayer","storeEnableShow","localStorage","clear","child","once","forEach","cards","urls","concat","signOut","result","storeEnableSee","storeEnablePack","key","randomNumbers","Set","cardsTrips","i","rand","Math","floor","random","add","cardsSet","values","cardsNum","j","next","storeCardIndicies","confirm","getFirstRealCard","getSecondRealCard","getThirdRealCard","getFourthRealCard","storePacked","stats","trimmedStats","slice","max","length","style","border","width","map","row","index","getRealCardsMessage","renderRealCards","height","alt","src","size","disabled","backgroundColor","renderCardsPictures","renderStats","num","storeFirstCard","storage","getFirstCard","fullName","getDownloadURL","url","storeFirstCardURL","0","storeSecondCard","getSecondCard","storeSecondCardURL","1","storeThirdCard","getThirdCard","storeThirdCardURL","2","storeFourthCard","getFourthCard","storeFourthCardURL","3","indicies","setItem","JSON","stringify","card","parse","getItem","App","authListener","teenPattiLogo","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ed5d67e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f67306a7.png\";","import firebase from 'firebase'\n\nconst config = {\n    apiKey: \"AIzaSyB8PcAZcXkzuqhwiE1itEi3XZ6z6lFjsSM\",\n    authDomain: \"teen-patti-5a5fc.firebaseapp.com\",\n    databaseURL: \"https://teen-patti-5a5fc.firebaseio.com\",\n    projectId: \"teen-patti-5a5fc\",\n    storageBucket: \"teen-patti-5a5fc.appspot.com\",\n    messagingSenderId: \"478653158074\",\n    appId: \"1:478653158074:web:315fbf33f859b2a4632883\",\n    measurementId: \"G-8WZ36J1853\"\n  };\n\n  const fire = firebase.initializeApp(config)\n  export default fire;","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from '../config/Fire';\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.login = this.login.bind(this);\n\t\tthis.signup = this.signup.bind(this);\n\t\tthis.handleEmailFieldChange = this.handleEmailFieldChange.bind(this)\n\t\tthis.handlePasswordFieldChange = this.handlePasswordFieldChange.bind(this)\n\t\tthis.handleFirstNameFieldChange = this.handleFirstNameFieldChange.bind(this)\n\t\tthis.writeNewUser = this.writeNewUser.bind(this)\n\t\tthis.state = {\n\t\t\tfirstName: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\temailHelperText: 'Please enter your email',\n\t\t\tpasswordHelperText: 'Please enter your password',\n\t\t\temailError: false,\n\t\t\tpasswordError: false\n\t\t};\n\t}\n\n\tlogin(e) {\n\t\te.preventDefault();\n\t\tfire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n\t\t\tfire.database().ref('users/list/' + fire.auth().currentUser.uid).set({\n\t\t\t\temail: this.state.email,\n\t\t\t\tname: this.state.firstName,\n\t\t\t\tisLoggedIn: true,\n\t\t\t\tstatus: 'BLIND',\n\t\t\t\tshowCardsMessage: ''\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\temailError: false,\n\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\tpasswordError: false,\n\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t})\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\tif (error.code == 'auth/wrong-password') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordHelperText: \"Incorrect password. Please try again\",\n\t\t\t\t\tpasswordError: true\n\t\t\t\t})\n\t\t\t} else if (error.code == 'auth/invalid-email') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailHelperText: \"Invalid email. Please try again\",\n\t\t\t\t\temailError: true,\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t} else if (error.code == 'auth/user-not-found') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailHelperText: \"This user does not exist. Please signup.\",\n\t\t\t\t\temailError: true,\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\tsignup(e) {\n\t\te.preventDefault();\n\t\tfire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n\t\t\tif (u.user) {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t\tu.user.updateProfile({\n\t\t\t\t\tdisplayName: this.state.firstName\n\t\t\t\t})\n\t\t\t\tthis.writeNewUser()\n\t\t\t}\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\tif (error.code == 'auth/weak-password') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordError: true,\n\t\t\t\t\tpasswordHelperText: 'Password should be at least 6 characters'\n\t\t\t\t})\n\t\t\t} else if (error.code == 'auth/email-already-in-use') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: true,\n\t\t\t\t\temailHelperText: 'This email address is already in use',\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\twriteNewUser() {\n\t\tvar userId = fire.auth().currentUser.uid;\n\t\tvar updates = {};\n\t\tupdates['users/list/' + userId] = userId;\n\t\tfire.database().ref().update(updates);\n\t\tfire.database().ref('users/list/' + userId).set({\n\t\t\temail: this.state.email,\n\t\t\tname: this.state.firstName,\n\t\t\tisLoggedIn: true,\n\t\t\tstatus: 'BLIND',\n\t\t\tshowCardsMessage: ''\n\t\t}, function (error) {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(\"User save error\")\n\t\t\t} else {\n\t\t\t\tconsole.log(\"User saved successfully\")\n\t\t\t}\n\t\t});\n\t}\n\n\thandleEmailFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\temail: e.target.value\n\t\t})\n\t}\n\n\thandlePasswordFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tpassword: e.target.value\n\t\t})\n\t}\n\n\thandleFirstNameFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tfirstName: e.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div align=\"center\">\n\t\t\t\t<div className=\"Login\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"firstName\" label=\"First name (lowercase)\" value={this.state.firstName} onChange={this.handleFirstNameFieldChange} helperText=\"Please enter your first name\" />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"email\" label=\"Email\" value={this.state.email} onChange={this.handleEmailFieldChange} helperText={this.state.emailHelperText} error={this.state.emailError ? true : false} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"password\" type=\"password\" label=\"Password\" value={this.state.password} onChange={this.handlePasswordFieldChange} helperText={this.state.passwordHelperText} error={this.state.passwordError ? true : false} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box m={2} pt={3}>\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.login.bind(this)} >LOGIN</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{/* <Box>\n\t\t\t\t\t\t\t<Button className=\"btn btn-success\" variant=\"contained\" color=\"primary\" onClick={this.signup.bind(this)} >SIGN UP</Button>\n\t\t\t\t\t\t</Box> */}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\nimport '../App.css';\n\nconst divStyle = {\n    display: 'flex',\n    justifyContent: 'center'\n};\n\nconst table = {\n    display: 'grid'\n}\n\nconst horizontal = {\n    display: 'flex',\n    justifyContent: 'center'\n}\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.logout = this.logout.bind(this);\n        this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n        this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n        this.generate = this.generate.bind(this);\n        this.getCards = this.getCards.bind(this);\n        this.getRealCards = this.getRealCards.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n        this.packed = this.packed.bind(this);\n        this.showCards = this.showCards.bind(this);\n        this.updateTable = this.updateTable.bind(this);\n        this.scrollToBottom = this.scrollToBottom.bind(this);\n        this.getCellColor = this.getCellColor.bind(this);\n\n        this.state = {\n            cardIndicies: this.getCardIndicies(),\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            playerStats: [],\n            numPlayers: 0,\n            numPackedPlayers: 0,\n            numCards: 3,\n            userState: this.props.userState,\n            displayName: '',\n            gameSet: true,\n            enableSee: this.getEnableSee(),\n            enablePack: this.getEnablePack(),\n            enableShow: this.getEnableShow(),\n            firstImgUrl: this.getFirstCardURL(),\n            secondImgUrl: this.getSecondCardURL(),\n            thirdImgUrl: this.getThirdCardURL(),\n            fourthImgUrl: this.getFourthCardURL()\n        }\n    }\n\n    scrollToBottom() {\n        const { cardsStats } = this.refs;\n        cardsStats.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n\n    setupBeforeUnloadListener = () => {\n        window.addEventListener(\"beforeunload\", (ev) => {\n            ev.preventDefault();\n            return this.logout();\n        });\n    };\n\n    componentDidMount() {\n        this.setupBeforeUnloadListener();\n\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    displayName: user.displayName,\n                    userState: user\n                })\n            }\n        })\n\n        fire.database().ref('users').on('value', snap => {\n            var snapVal = snap.val()\n            this.setState({\n                gameSet: snapVal.isGameSet,\n                numCards: parseInt(snapVal.numCardsPerPlayer),\n                numPlayers: parseInt(snapVal.numPlayers),\n                numPackedPlayers: parseInt(snapVal.numPackedPlayers)\n            }, () => {\n                this.updateTable()\n            })\n        })\n\n        fire.database().ref('users/list').on('child_changed', snap => {\n            this.updateTable()\n        })\n\n        this.updateTable()\n    }\n\n    updateTable() {\n        this.setState({ playerStats: [] })\n        if (this.state.gameSet && (parseInt(this.state.numPlayers) - parseInt(this.state.numPackedPlayers) == 2)) {\n            if (this.getEnablePack()) {\n                this.storeEnableShow(true)\n            }\n        } else if (!this.state.gameSet) {\n            localStorage.clear()\n        }\n\n        fire.database().ref('users').child('list').once('value').then((snap) => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn) {\n                    var name = user.val().name\n                    var status = user.val().status\n                    if (user.val().cards != null) {\n                        var urls = user.val().cards.urls\n                    }\n                    if (status == 'SHOW' && urls != null) {\n                        this.setState({\n                            playerStats: this.state.playerStats.concat({ name, status, urls })\n                        })\n                    } else {\n                        this.setState({\n                            playerStats: this.state.playerStats.concat({ name, status })\n                        })\n                    }\n                }\n            })\n        })\n    }\n\n    logout() {\n        localStorage.clear()\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n            cards: null,\n            isLoggedIn: false,\n            status: 'BLIND'\n        }).then((u) => {\n            fire.auth().signOut().then((result) => {\n                this.setState({\n                    userState: null\n                })\n            })\n        })\n    }\n\n    resetGame(e) {\n        e.preventDefault()\n        localStorage.clear()\n        // update isGameSet to database after reset game\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['isGameSet'] = false;\n        updates['numPackedPlayers'] = 0;\n\n        this.setState({\n            gameSet: false,\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            playerStats: [],\n            cardIndicies: [],\n            numPackedPlayers: 0,\n            firstImgUrl: '',\n            secondImgUrl: '',\n            thirdImgUrl: '',\n            fourthImgUrl: ''\n        })\n\n        this.storeEnableSee(true)\n        this.storeEnablePack(false)\n        this.storeEnableShow(false)\n\n        ref.update(updates).then((u) => {\n            fire.database().ref('users').child('list').once('value').then((snap) => {\n                snap.forEach((user) => {\n                    if (user.val().isLoggedIn) {\n                        fire.database().ref('users/list/' + user.key).update({\n                            cards: null,\n                            status: 'BLIND'\n                        })\n                    }\n                })\n            })\n        })\n    }\n\n    generate(e) {\n        e.preventDefault()\n        // update isGameSet, numCards and numPlayers to database\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['isGameSet'] = true;\n        updates['numCardsPerPlayer'] = this.state.numCards\n        updates['numPlayers'] = this.state.numPlayers\n        ref.update(updates).then((u) => {\n            this.setState({\n                gameSet: true\n            })\n        })\n\n        let randomNumbers = new Set();\n        let cardsTrips = [];\n        for (let i = 0; i < 52; i++) {\n            var rand = Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n\n        var cardsSet = randomNumbers.values()\n        const cardsNum = this.state.numCards\n\n        for (let j = 0; j < this.state.numPlayers; j++) {\n            if (cardsNum == 1) {\n                cardsTrips[j] = [cardsSet.next().value];\n            } else if (cardsNum == 2) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 3) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 4) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            }\n        }\n\n        // update cards to database\n        var i = 0;\n        fire.database().ref('users').child('list').once('value').then((snap) => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn && i < this.state.numPlayers) {\n                    fire.database().ref('users/list/' + user.key).update({ cards: cardsTrips[i] })\n                    i++;\n                }\n            })\n        })\n    }\n\n    getCards(e) {\n        e.preventDefault()\n        if (this.state.gameSet == true) {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then((snap => {\n                this.storeCardIndicies(snap.val())\n                this.getRealCards()\n            })).then((u) => {\n                this.storeEnableSee(false)\n                this.storeEnablePack(true)\n                this.storeEnableShow(false)\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'SEEN' })\n            })\n        } else {\n            window.confirm(\"You need to setup a game before seeing your cards\")\n        }\n    }\n\n    getRealCards() {\n        const cardsNum = this.state.numCards\n        if (cardsNum == 1) {\n            this.getFirstRealCard()\n        } else if (cardsNum == 2) {\n            this.getSecondRealCard()\n        } else if (cardsNum == 3) {\n            this.getThirdRealCard()\n        } else if (cardsNum == 4) {\n            this.getFourthRealCard()\n        } else {\n            this.getThirdRealCard()\n        }\n    }\n\n    packed(e) {\n        e.preventDefault()\n        this.storePacked()\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['numPackedPlayers'] = parseInt(this.state.numPackedPlayers) + 1;\n        ref.update(updates).then((u) => {\n            this.setState({\n                numPackedPlayers: parseInt(this.state.numPackedPlayers) + 1\n            })\n        }).then((u) => {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'PACK' })\n        })\n    }\n\n    showCards(e) {\n        e.preventDefault()\n\n        this.storeEnableSee(false)\n        this.storeEnablePack(false)\n        this.storeEnableShow(false)\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'SHOW' })\n    }\n\n    renderStats() {\n        const stats = this.state.playerStats\n        const trimmedStats = stats.slice(Math.max(stats.length - parseInt(this.state.numPlayers), 0))\n        return (\n            <div style={table}>\n                <table align=\"center\" border=\"1\" width=\"500px\">\n                    <thead>\n                        <tr>\n                            <th><h2>Name</h2></th>\n                            <th><h2>Status</h2></th>\n                            <th><h2>Cards</h2></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {trimmedStats.map((row, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td><h3>{row.name}</h3></td>\n                                    <td style={{ 'background-color': this.getCellColor(row) }}><h3><font color=\"#FFF\">{row.status}</font></h3></td>\n                                    <td><h3>{this.getRealCardsMessage(row.urls)}</h3></td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>)\n    }\n\n    renderCardsPictures() {\n        return (\n            <div style={horizontal}>\n                {this.renderRealCards()}\n            </div>\n        )\n    }\n\n    renderRealCards() {\n        const cardsNum = this.state.numCards\n        if (this.state.gameSet && this.getCardIndicies().length > 0) {\n            if (cardsNum == 1) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={this.state.firstImgUrl || ''}></img>\n                    </div>\n                )\n            } else if (cardsNum == 2) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={this.state.firstImgUrl || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={this.state.secondImgUrl || ''}></img>\n                    </div>\n                )\n            } else if (cardsNum == 3) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={this.state.firstImgUrl || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={this.state.secondImgUrl || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"third-card\" src={this.state.thirdImgUrl || ''}></img>\n                    </div>\n                )\n            } else if (cardsNum == 4) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={this.state.firstImgUrl || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={this.state.secondImgUrl || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"third-card\" src={this.state.thirdImgUrl || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"fourth-card\" src={this.state.fourthImgUrl || ''}></img>\n                    </div>\n                )\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\" >\n                <div className=\"setup_game\" style={divStyle}>\n                    {!this.state.gameSet && <div style={divStyle}>\n                        <Box m={2}>\n                            <TextField id=\"numPlayers\" label=\"Number of players\" value={this.state.numPlayers} onChange={this.handleNumPlayersFieldChange} helperText=\"Please enter the number of players\" />\n                        </Box>\n                        <Box m={2}>\n                            <TextField id=\"numCards\" label=\"Number of cards\" value={this.state.numCards} onChange={this.handleNumCardsFieldChange} helperText=\"Please enter the number of cards\" />\n                        </Box>\n                        <Box m={2} pt={3}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.generate.bind(this)}>SETUP GAME</Button>\n                        </Box> </div>}\n                </div><br /><br />\n                <Box>\n                    <Button size=\"large\" variant=\"outlined\" color=\"primary\" >Hello, {this.state.displayName}</Button>\n                </Box>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.resetGame.bind(this)} >Reset Game</Button>\n                    </Box>\n                </div>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.getCards.bind(this)} disabled={!this.getEnableSee()} >See Cards</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button style={{ backgroundColor: 'crimson' }} variant=\"contained\" color=\"primary\" onClick={this.packed.bind(this)} disabled={!this.getEnablePack()} >Pack</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button style={{ backgroundColor: 'green' }} variant=\"contained\" color=\"primary\" onClick={this.showCards.bind(this)} disabled={!this.getEnableShow()} >Show Cards</Button>\n                    </Box>\n                </div>\n                <div style={horizontal}>\n                    <h2>Your cards are:</h2>\n                    {this.renderCardsPictures()}\n                </div>\n                <div ref=\"cardsStats\">\n                    {this.renderStats()}\n                </div>\n            </div >\n        );\n    }\n\n    handleNumPlayersFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        this.setState({\n            numPlayers: num\n        })\n    }\n\n    handleNumCardsFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        this.setState({\n            numCards: num\n        })\n    }\n\n    // Util methods\n    getCellColor(row) {\n        if (row.status == 'BLIND') {\n            return 'black'\n        } else if (row.status == 'PACK') {\n            return 'crimson'\n        } else if (row.status == 'SEEN') {\n            return 'royalblue'\n        } else {\n            return 'green'\n        }\n    }\n\n    getRealCardsMessage(urls) {\n        const cardsNum = this.state.numCards\n        if (this.state.gameSet && urls != null && urls.length > 0) {\n            if (cardsNum == 1) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={urls[0] || ''}></img>\n                    </div>\n                )\n            } else if (cardsNum == 2) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={urls[0] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={urls[1] || ''}></img>\n                    </div>\n                )\n            } else if (cardsNum == 3) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={urls[0] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={urls[1] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"third-card\" src={urls[2] || ''}></img>\n                    </div>\n                )\n            } else if (cardsNum == 4) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={urls[0] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={urls[1] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"third-card\" src={urls[2] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"fourth-card\" src={urls[3] || ''}></img>\n                    </div>\n                )\n            }\n        }\n    }\n\n    getFirstRealCard() {\n        fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n            this.storeFirstCard(snap.val())\n        })).then((u) => {\n            fire.storage().ref('/').child(`${this.getFirstCard().fullName}.png`).getDownloadURL().then(url => {\n                this.storeFirstCardURL(url)\n            }).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({ 0: this.getFirstCardURL() })\n            })\n        })\n    }\n\n    getSecondRealCard() {\n        this.getFirstRealCard()\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n            this.storeSecondCard(snap.val())\n        })).then((u) => {\n            fire.storage().ref('/').child(`${this.getSecondCard().fullName}.png`).getDownloadURL().then(url => {\n                this.storeSecondCardURL(url)\n            }).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({ 1: this.getSecondCardURL() })\n            })\n        });\n    }\n\n    getThirdRealCard() {\n        this.getFirstRealCard()\n        this.getSecondRealCard()\n        fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n            this.storeThirdCard(snap.val())\n        })).then((u) => {\n            fire.storage().ref('/').child(`${this.getThirdCard().fullName}.png`).getDownloadURL().then(url => {\n                this.storeThirdCardURL(url)\n            }).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({ 2: this.getThirdCardURL() })\n            })\n        });\n    }\n\n    getFourthRealCard() {\n        this.getFirstRealCard()\n        this.getSecondRealCard()\n        this.getThirdRealCard()\n        fire.database().ref('cards/' + this.state.cardIndicies[3]).once('value').then((snap => {\n            this.storeFourthCard(snap.val())\n        })).then((u) => {\n            fire.storage().ref('/').child(`${this.getFourthCard().fullName}.png`).getDownloadURL().then(url => {\n                this.storeFourthCardURL(url)\n            }).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({ 3: this.getFourthCardURL() })\n            })\n        });\n    }\n\n    // Store and get from local storage\n    storeCardIndicies(indicies) {\n        localStorage.setItem('cardIndicies', JSON.stringify(indicies))\n        this.setState({ cardIndicies: indicies })\n    }\n\n    storeFirstCard(card) {\n        localStorage.setItem('firstCard', JSON.stringify(card))\n        this.setState({ firstCard: card })\n    }\n\n    storeSecondCard(card) {\n        localStorage.setItem('secondCard', JSON.stringify(card))\n        this.setState({ secondCard: card })\n    }\n\n    storeThirdCard(card) {\n        localStorage.setItem('thirdCard', JSON.stringify(card))\n        this.setState({ thirdCard: card })\n    }\n\n    storeFourthCard(card) {\n        localStorage.setItem('fourthCard', JSON.stringify(card))\n        this.setState({ fourthCard: card })\n    }\n\n    storeFirstCardURL(url) {\n        localStorage.setItem('firstCardURL', JSON.stringify(url))\n        this.setState({ firstImgUrl: url })\n    }\n\n    storeSecondCardURL(url) {\n        localStorage.setItem('secondCardURL', JSON.stringify(url))\n        this.setState({ secondImgUrl: url })\n    }\n\n    storeThirdCardURL(url) {\n        localStorage.setItem('thirdCardURL', JSON.stringify(url))\n        this.setState({ thirdImgUrl: url })\n    }\n\n    storeFourthCardURL(url) {\n        localStorage.setItem('fourthCardURL', JSON.stringify(url))\n        this.setState({ fourthImgUrl: url })\n    }\n\n    storeEnableSee(val) {\n        localStorage.setItem('enableSee', JSON.stringify(val))\n        this.setState({ enableSee: val })\n    }\n\n    storeEnablePack(val) {\n        localStorage.setItem('enablePack', JSON.stringify(val))\n        this.setState({ enablePack: val })\n    }\n\n    storeEnableShow(val) {\n        localStorage.setItem('enableShow', JSON.stringify(val))\n        this.setState({ enableShow: val })\n    }\n\n    storePacked() {\n        localStorage.setItem('enableSee', JSON.stringify(false))\n        localStorage.setItem('enablePack', JSON.stringify(false))\n        localStorage.setItem('enableShow', JSON.stringify(false))\n        this.setState({\n            enableSee: false,\n            enablePack: false,\n            enableShow: false\n        })\n    }\n\n    getCardIndicies() {\n        return JSON.parse(localStorage.getItem('cardIndicies')) || []\n    }\n\n    getFirstCard() {\n        return JSON.parse(localStorage.getItem('firstCard')) || ''\n    }\n\n    getSecondCard() {\n        return JSON.parse(localStorage.getItem('secondCard')) || ''\n    }\n\n    getThirdCard() {\n        return JSON.parse(localStorage.getItem('thirdCard')) || ''\n    }\n\n    getFourthCard() {\n        return JSON.parse(localStorage.getItem('fourthCard')) || ''\n    }\n\n    getFirstCardURL() {\n        return JSON.parse(localStorage.getItem('firstCardURL')) || ''\n    }\n\n    getSecondCardURL() {\n        return JSON.parse(localStorage.getItem('secondCardURL')) || ''\n    }\n\n    getThirdCardURL() {\n        return JSON.parse(localStorage.getItem('thirdCardURL')) || ''\n    }\n\n    getFourthCardURL() {\n        return JSON.parse(localStorage.getItem('fourthCardURL')) || ''\n    }\n\n    getEnableSee() {\n        if (JSON.parse(localStorage.getItem('enableSee') == null)) {\n            return true\n        } else {\n            return JSON.parse(localStorage.getItem('enableSee'))\n        }\n    }\n\n    getEnablePack() {\n        if (JSON.parse(localStorage.getItem('enablePack') == null)) {\n            return false\n        } else {\n            return JSON.parse(localStorage.getItem('enablePack'))\n        }\n    }\n\n    getEnableShow() {\n        if (JSON.parse(localStorage.getItem('enableShow') == null)) {\n            return false\n        } else {\n            return JSON.parse(localStorage.getItem('enableShow'))\n        }\n    }\n}\n\nexport default Cards","import React, { Component } from 'react';\nimport './App.css';\nimport fire from './config/Fire'\nimport Login from './components/Login';\nimport Cards from './components/Cards';\nimport teenPattiLogo from './images/logo.png'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      user: {},\n    }\n  } \n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img src={teenPattiLogo} width=\"200\" alt=\"logo\"/>\n        <br />\n        <div>\n          {this.state.user ? (<Cards userState={this.state.user}/>) : (<Login/>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}