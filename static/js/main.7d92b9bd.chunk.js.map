{"version":3,"sources":["images/logo.png","config/Fire.js","components/Login.js","components/Cards.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","login","bind","signup","handleEmailFieldChange","handlePasswordFieldChange","handleFirstNameFieldChange","getUserData","writeNewUser","state","firstName","email","password","emailHelperText","passwordHelperText","emailError","passwordError","console","log","userId","auth","currentUser","uid","database","ref","once","then","snapshot","username","val","e","preventDefault","signInWithEmailAndPassword","this","u","setState","catch","error","code","createUserWithEmailAndPassword","user","updateProfile","displayName","updates","update","set","name","target","value","align","className","Box","TextField","id","label","onChange","helperText","type","m","pt","Button","variant","color","onClick","Component","divStyle","display","justifyContent","Cards","logout","handleNumPlayersFieldChange","generate","getCards","getRealCards","resetGame","getMessages","packed","showCards","cardIndicies","firstCard","secondCard","thirdCard","cards","messages","numPlayers","userState","gameSet","onAuthStateChanged","on","snap","forEach","msg","concat","message","map","key","signOut","result","randomNumbers","Set","cardsTrips","i","rand","Math","floor","random","add","cardsSet","values","j","next","child","push","card","suit","style","size","renderCards","App","authListener","src","teenPattiLogo","width","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d92b9bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f67306a7.png\";","import firebase from 'firebase'\n\nconst config = {\n    apiKey: \"AIzaSyB8PcAZcXkzuqhwiE1itEi3XZ6z6lFjsSM\",\n    authDomain: \"teen-patti-5a5fc.firebaseapp.com\",\n    databaseURL: \"https://teen-patti-5a5fc.firebaseio.com\",\n    projectId: \"teen-patti-5a5fc\",\n    storageBucket: \"teen-patti-5a5fc.appspot.com\",\n    messagingSenderId: \"478653158074\",\n    appId: \"1:478653158074:web:315fbf33f859b2a4632883\",\n    measurementId: \"G-8WZ36J1853\"\n  };\n\n  const fire = firebase.initializeApp(config)\n  export default fire;","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from '../config/Fire';\n\nvar cards = [];\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.login = this.login.bind(this);\n\t\tthis.signup = this.signup.bind(this);\n\t\tthis.handleEmailFieldChange = this.handleEmailFieldChange.bind(this)\n\t\tthis.handlePasswordFieldChange = this.handlePasswordFieldChange.bind(this)\n\t\tthis.handleFirstNameFieldChange = this.handleFirstNameFieldChange.bind(this)\n\t\tthis.getUserData = this.getUserData.bind(this)\n\t\tthis.writeNewUser = this.writeNewUser.bind(this)\n\t\tthis.state = {\n\t\t\tfirstName: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\temailHelperText: 'Please enter your email',\n\t\t\tpasswordHelperText: 'Please enter your password',\n\t\t\temailError: false,\n\t\t\tpasswordError: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log(\"componentDidMount()\")\n\t}\n\n\tcomponentDidUpdate() {\n\t\tconsole.log()\n\t}\n\n\tgetUserData() {\n\t\tvar userId = fire.auth().currentUser.uid;\n\t\tconsole.log(userId)\n\t\treturn fire.database().ref('users/list/' + userId).once('value').then(function (snapshot) {\n\t\t\tvar username = (snapshot.val() && snapshot.val().username) || 'Anonymous';\n\t\t\tconsole.log(username)\n\t\t});\n\t}\n\n\tlogin(e) {\n\t\te.preventDefault();\n\t\tfire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n\t\t\tthis.setState({\n\t\t\t\temailError: false,\n\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\tpasswordError: false,\n\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t})\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\tif (error.code == 'auth/wrong-password') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordHelperText: \"Incorrect password. Please try again\",\n\t\t\t\t\tpasswordError: true\n\t\t\t\t})\n\t\t\t} else if (error.code == 'auth/invalid-email') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailHelperText: \"Invalid email. Please try again\",\n\t\t\t\t\temailError: true,\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\tsignup(e) {\n\t\te.preventDefault();\n\t\tfire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n\t\t\tif (u.user) {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t\tu.user.updateProfile({\n\t\t\t\t\tdisplayName: this.state.firstName\n\t\t\t\t})\n\t\t\t\tthis.writeNewUser()\n\t\t\t}\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\tif (error.code == 'auth/weak-password') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordError: true,\n\t\t\t\t\tpasswordHelperText: 'Password should be at least 6 characters'\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\twriteNewUser() {\n\t\tvar userId = fire.auth().currentUser.uid;\n\t\tvar updates = {};\n\t\tupdates['users/list/' + userId] = userId;\n\t\tfire.database().ref().update(updates);\n\t\tfire.database().ref('users/list/' + userId).set({\n\t\t\temail: this.state.email,\n\t\t\tname: this.state.firstName\n\t\t}, function (error) {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(\"User save error\")\n\t\t\t} else {\n\t\t\t\tconsole.log(\"User saved successfully\")\n\t\t\t}\n\t\t});\n\t}\n\n\thandleEmailFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\temail: e.target.value\n\t\t})\n\t}\n\n\thandlePasswordFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tpassword: e.target.value\n\t\t})\n\t}\n\n\thandleFirstNameFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tfirstName: e.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div align=\"center\">\n\t\t\t\t<div className=\"Login\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"firstName\" label=\"First name (lowercase)\" value={this.state.firstName} onChange={this.handleFirstNameFieldChange} helperText=\"Please enter your first name\" />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"email\" label=\"Email\" value={this.state.email} onChange={this.handleEmailFieldChange} helperText={this.state.emailHelperText} error={this.state.emailError ? true : false} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"password\" type=\"password\" label=\"Password\" value={this.state.password} onChange={this.handlePasswordFieldChange} helperText={this.state.passwordHelperText} error={this.state.passwordError ? true : false} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box m={2} pt={3}>\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.login.bind(this)} >LOGIN</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<Button className=\"btn btn-success\" variant=\"contained\" color=\"primary\" onClick={this.signup.bind(this)} >SIGN UP</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\n\nconst divStyle = {\n    display: 'flex',\n    justifyContent: 'center'\n};\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.logout = this.logout.bind(this);\n        this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n        this.generate = this.generate.bind(this);\n        this.getCards = this.getCards.bind(this);\n        this.getRealCards = this.getRealCards.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n        this.getMessages = this.getMessages.bind(this);\n        this.packed = this.packed.bind(this);\n        this.showCards = this.showCards.bind(this);\n\n        this.state = {\n            cardIndicies: [],\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            cards: [],\n            messages: [],\n            numPlayers: '',\n            userState: this.props.userState,\n            gameSet: true\n        }\n    }\n\n    componentDidMount() {\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    userState: user\n                })\n            }\n        })\n\n        fire.database().ref('users/isGameSet').on('value', snap => {\n            this.setState({ gameSet: snap.val() })\n        })\n\n        fire.database().ref('messages').on('value', snap => {\n            this.setState({ messages: [] })\n            snap.forEach((msg) => {\n                this.setState({\n                    messages: this.state.messages.concat(msg.val().message)\n                });\n            })\n        })\n    }\n\n    getMessages() {\n        return (\n            <div>\n                {this.state.messages.map((message, key) => {\n                    return (\n                        <h3 key={key}>{message}</h3>\n                    )\n                })}\n            </div>\n        )\n    }\n\n    logout() {\n        fire.auth().signOut().then((result) => {\n            this.setState({\n                userState: null\n            })\n        })\n    }\n\n    resetGame(e) {\n        e.preventDefault()\n\n        // update isGameSet to database after reset game\n        var updates = {};\n        updates['users/' + 'isGameSet'] = false;\n        fire.database().ref().update(updates);\n\n        this.setState((state) => {\n            return { gameSet: !state.gameSet }\n        })\n\n        var updates = {};\n        updates['messages/'] = null;\n        fire.database().ref().update(updates);\n    }\n\n    generate(e) {\n        e.preventDefault()\n\n        let randomNumbers = new Set();\n        let cardsTrips = [];\n        for (let i = 0; i < 52; i++) {\n            var rand = Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n\n        var cardsSet = randomNumbers.values()\n\n        for (let j = 0; j < this.state.numPlayers; j++) {\n            cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value]\n        }\n\n        console.log(cardsTrips);\n        this.setState({ gameSet: true })\n\n        // update isGameSet to database\n        var updates = {};\n        updates['users/' + 'isGameSet'] = true;\n        fire.database().ref().update(updates);\n\n        // update cards to database\n        var i = 0;\n        fire.database().ref('users').child('list').once('value', snap => {\n            snap.forEach((user) => {\n                fire.database().ref('users/list/' + user.key).update({ cards: cardsTrips[i] })\n                i++;\n            })\n        });\n    }\n\n    getCards(e) {\n        e.preventDefault()\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then((snap => {\n            this.setState({ cardIndicies: snap.val() })\n            this.getRealCards()\n        }));\n    }\n\n    getRealCards() {\n        fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n            this.setState({ firstCard: snap.val() })\n        }));\n\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n            this.setState({ secondCard: snap.val() })\n        }));\n\n        fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n            this.setState({ thirdCard: snap.val() })\n        }));\n\n        fire.database().ref('messages/').push({ message: this.state.userState.displayName + ' is SEEN' })\n    }\n\n    renderCards() {\n        return (\n            <div>\n                <h3>The first card is: {this.state.firstCard.card} {this.state.firstCard.suit}</h3>\n                <h3>The second card is: {this.state.secondCard.card} {this.state.secondCard.suit}</h3>\n                <h3>The third card is: {this.state.thirdCard.card} {this.state.thirdCard.suit}</h3>\n            </div>\n        )\n    }\n\n    handleNumPlayersFieldChange(e) {\n        e.preventDefault()\n        this.setState({\n            numPlayers: e.target.value\n        })\n    }\n\n    packed(e) {\n        e.preventDefault()\n        fire.database().ref('messages/').push({ message: this.state.userState.displayName + ' is PACK' })\n    }\n\n    showCards(e) {\n        e.preventDefault()\n        fire.database().ref('messages/').push({\n            message: this.state.userState.displayName + ' is SHOW and their cards are: ' +\n                this.state.firstCard.card + ' ' + this.state.firstCard.suit + ' ' +\n                this.state.secondCard.card + ' ' + this.state.secondCard.suit + ' ' +\n                this.state.thirdCard.card + ' ' + this.state.thirdCard.suit\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\" >\n                <div className=\"setup_game\" style={divStyle}>\n                    {!this.state.gameSet && <div style={divStyle}>\n                        <Box m={2}>\n                            <TextField id=\"numPlayers\" label=\"Number of players\" value={this.state.numPlayers} onChange={this.handleNumPlayersFieldChange} helperText=\"Please enter the number of players\" />\n                        </Box>\n                        <Box m={2} pt={3}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.generate.bind(this)}>SETUP GAME</Button>\n                        </Box> </div>}\n                </div><br /><br />\n                <Box>\n                    <Button size=\"large\" variant=\"outlined\" color=\"primary\" >Hello, {this.props.userState.displayName}</Button>\n                </Box>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.resetGame.bind(this)} >Reset Game</Button>\n                    </Box>\n                </div>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.getCards.bind(this)} >See Cards</Button>\n                </Box>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.packed.bind(this)} >Pack</Button>\n                </Box>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showCards.bind(this)} >Show Cards</Button>\n                </Box>\n                <h2>Your cards are:</h2>\n                {this.renderCards()\n                }\n                < h2 > Messages:</h2 >\n                {this.getMessages()}\n            </div >\n        );\n    }\n}\n\nexport default Cards","import React, { Component } from 'react';\nimport './App.css';\nimport fire from './config/Fire'\nimport Login from './components/Login';\nimport Cards from './components/Cards';\nimport teenPattiLogo from './images/logo.png'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      user: {},\n    }\n  } \n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      console.log(user);\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img src={teenPattiLogo} width=\"200\" alt=\"logo-image\"/>\n        <br />\n        <div>\n          {this.state.user ? (<Cards userState={this.state.user} />) : (<Login/>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}