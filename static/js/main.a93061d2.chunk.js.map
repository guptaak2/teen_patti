{"version":3,"sources":["images/backCardImg.png","images/logo.png","config/Fire.js","components/Login.js","components/Cards.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","login","bind","signup","handleEmailFieldChange","handlePasswordFieldChange","handleFirstNameFieldChange","writeNewUser","state","firstName","email","password","emailHelperText","passwordHelperText","emailError","passwordError","showSignUpButton","database","ref","child","once","then","snap","setState","val","e","preventDefault","auth","signInWithEmailAndPassword","this","u","currentUser","uid","set","name","isLoggedIn","status","catch","error","console","log","code","createUserWithEmailAndPassword","user","updateProfile","displayName","userId","updates","update","target","value","align","className","Box","TextField","id","label","onChange","helperText","type","m","pt","Button","variant","color","onClick","Component","divStyle","display","justifyContent","table","horizontal","Cards","logout","handleNumPlayersFieldChange","handleNumCardsFieldChange","generate","getCards","getRealCards","resetGame","packed","showCards","updateTable","scrollToBottom","getCellColor","cardIndicies","getCardIndicies","firstCard","secondCard","thirdCard","fourthCard","playerStats","numPlayers","numPackedPlayers","numCards","userState","gameSet","enableSee","getEnableSee","enablePack","getEnablePack","enableShow","getEnableShow","firstImgUrl","getFirstCardURL","secondImgUrl","getSecondCardURL","thirdImgUrl","getThirdCardURL","fourthImgUrl","getFourthCardURL","refs","cardsStats","scrollIntoView","behavior","block","inline","onAuthStateChanged","on","snapVal","isGameSet","parseInt","numCardsPerPlayer","storeEnableShow","localStorage","clear","forEach","cards","urls","concat","signOut","result","storeEnableSee","storeEnablePack","key","randomNumbers","Set","cardsTrips","i","rand","Math","floor","random","add","cardsSet","values","cardsNum","j","next","storeCardIndicies","window","confirm","getFirstRealCard","getSecondRealCard","getThirdRealCard","getFourthRealCard","storePacked","stats","trimmedStats","slice","max","length","style","border","width","map","row","index","getRealCardsMessage","renderRealCards","height","alt","src","size","disabled","backgroundColor","renderCardsPictures","renderStats","num","storeFirstCard","storage","getFirstCard","fullName","getDownloadURL","url","storeFirstCardURL","0","storeSecondCard","getSecondCard","storeSecondCardURL","1","storeThirdCard","getThirdCard","storeThirdCardURL","2","storeFourthCard","getFourthCard","storeFourthCardURL","3","indicies","setItem","JSON","stringify","card","parse","getItem","backCardImg","App","authListener","teenPattiLogo","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a93061d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backCardImg.d1369ee6.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.f67306a7.png\";","import firebase from 'firebase'\n\nconst config = {\n    apiKey: \"AIzaSyB8PcAZcXkzuqhwiE1itEi3XZ6z6lFjsSM\",\n    authDomain: \"teen-patti-5a5fc.firebaseapp.com\",\n    databaseURL: \"https://teen-patti-5a5fc.firebaseio.com\",\n    projectId: \"teen-patti-5a5fc\",\n    storageBucket: \"teen-patti-5a5fc.appspot.com\",\n    messagingSenderId: \"478653158074\",\n    appId: \"1:478653158074:web:315fbf33f859b2a4632883\",\n    measurementId: \"G-8WZ36J1853\"\n  };\n\n  const fire = firebase.initializeApp(config)\n  export default fire;","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from '../config/Fire';\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.login = this.login.bind(this);\n\t\tthis.signup = this.signup.bind(this);\n\t\tthis.handleEmailFieldChange = this.handleEmailFieldChange.bind(this)\n\t\tthis.handlePasswordFieldChange = this.handlePasswordFieldChange.bind(this)\n\t\tthis.handleFirstNameFieldChange = this.handleFirstNameFieldChange.bind(this)\n\t\tthis.writeNewUser = this.writeNewUser.bind(this)\n\t\tthis.state = {\n\t\t\tfirstName: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\temailHelperText: 'Please enter your email',\n\t\t\tpasswordHelperText: 'Please enter your password',\n\t\t\temailError: false,\n\t\t\tpasswordError: false,\n\t\t\tshowSignUpButton: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfire.database().ref('users').child('showSignUpBtn').once('value').then((snap) => {\n            this.setState({ showSignUpButton: snap.val()})\n        })\n\t}\n\n\tlogin(e) {\n\t\te.preventDefault();\n\t\tfire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n\t\t\tfire.database().ref('users/list/' + fire.auth().currentUser.uid).set({\n\t\t\t\temail: this.state.email,\n\t\t\t\tname: this.state.firstName,\n\t\t\t\tisLoggedIn: true,\n\t\t\t\tstatus: 'BLIND'\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\temailError: false,\n\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\tpasswordError: false,\n\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t})\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\tif (error.code == 'auth/wrong-password') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordHelperText: \"Incorrect password. Please try again\",\n\t\t\t\t\tpasswordError: true\n\t\t\t\t})\n\t\t\t} else if (error.code == 'auth/invalid-email') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailHelperText: \"Invalid email. Please try again\",\n\t\t\t\t\temailError: true,\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t} else if (error.code == 'auth/user-not-found') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailHelperText: \"This user does not exist. Please signup.\",\n\t\t\t\t\temailError: true,\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\tsignup(e) {\n\t\te.preventDefault();\n\t\tfire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n\t\t\tif (u.user) {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t\tu.user.updateProfile({\n\t\t\t\t\tdisplayName: this.state.firstName\n\t\t\t\t})\n\t\t\t\tthis.writeNewUser()\n\t\t\t}\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\tif (error.code == 'auth/weak-password') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordError: true,\n\t\t\t\t\tpasswordHelperText: 'Password should be at least 6 characters'\n\t\t\t\t})\n\t\t\t} else if (error.code == 'auth/email-already-in-use') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: true,\n\t\t\t\t\temailHelperText: 'This email address is already in use',\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\twriteNewUser() {\n\t\tvar userId = fire.auth().currentUser.uid;\n\t\tvar updates = {};\n\t\tupdates['users/list/' + userId] = userId;\n\t\tfire.database().ref().update(updates);\n\t\tfire.database().ref('users/list/' + userId).set({\n\t\t\temail: this.state.email,\n\t\t\tname: this.state.firstName,\n\t\t\tisLoggedIn: true,\n\t\t\tstatus: 'BLIND'\n\t\t}, function (error) {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(\"User save error\")\n\t\t\t} else {\n\t\t\t\tconsole.log(\"User saved successfully\")\n\t\t\t}\n\t\t});\n\t}\n\n\thandleEmailFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\temail: e.target.value\n\t\t})\n\t}\n\n\thandlePasswordFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tpassword: e.target.value\n\t\t})\n\t}\n\n\thandleFirstNameFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tfirstName: e.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div align=\"center\">\n\t\t\t\t<div className=\"Login\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"firstName\" label=\"First name (lowercase)\" value={this.state.firstName} onChange={this.handleFirstNameFieldChange} helperText=\"Please enter your first name\" />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"email\" label=\"Email\" value={this.state.email} onChange={this.handleEmailFieldChange} helperText={this.state.emailHelperText} error={this.state.emailError ? true : false} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"password\" type=\"password\" label=\"Password\" value={this.state.password} onChange={this.handlePasswordFieldChange} helperText={this.state.passwordHelperText} error={this.state.passwordError ? true : false} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box m={2} pt={3}>\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.login.bind(this)} >LOGIN</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{this.state.showSignUpButton && \n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Button className=\"btn btn-success\" variant=\"contained\" color=\"primary\" onClick={this.signup.bind(this)} >SIGN UP</Button>\n\t\t\t\t\t\t\t</Box>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\nimport '../App.css';\nimport backCardImg from '../images/backCardImg.png'\n\nconst divStyle = {\n    display: 'flex',\n    justifyContent: 'center'\n};\n\nconst table = {\n    display: 'grid'\n}\n\nconst horizontal = {\n    display: 'flex',\n    justifyContent: 'center'\n}\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.logout = this.logout.bind(this);\n        this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n        this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n        this.generate = this.generate.bind(this);\n        this.getCards = this.getCards.bind(this);\n        this.getRealCards = this.getRealCards.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n        this.packed = this.packed.bind(this);\n        this.showCards = this.showCards.bind(this);\n        this.updateTable = this.updateTable.bind(this);\n        this.scrollToBottom = this.scrollToBottom.bind(this);\n        this.getCellColor = this.getCellColor.bind(this);\n\n        this.state = {\n            cardIndicies: this.getCardIndicies(),\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            playerStats: [],\n            numPlayers: 0,\n            numPackedPlayers: 0,\n            numCards: 3,\n            userState: this.props.userState,\n            displayName: '',\n            gameSet: true,\n            enableSee: this.getEnableSee(),\n            enablePack: this.getEnablePack(),\n            enableShow: this.getEnableShow(),\n            firstImgUrl: this.getFirstCardURL(),\n            secondImgUrl: this.getSecondCardURL(),\n            thirdImgUrl: this.getThirdCardURL(),\n            fourthImgUrl: this.getFourthCardURL()\n        }\n    }\n\n    scrollToBottom() {\n        const { cardsStats } = this.refs;\n        cardsStats.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n\n    componentDidMount() {\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    displayName: user.displayName,\n                    userState: user\n                })\n            }\n        })\n\n        fire.database().ref('users').on('value', snap => {\n            var snapVal = snap.val()\n            this.setState({\n                gameSet: snapVal.isGameSet,\n                numCards: parseInt(snapVal.numCardsPerPlayer),\n                numPlayers: parseInt(snapVal.numPlayers),\n                numPackedPlayers: parseInt(snapVal.numPackedPlayers)\n            }, () => {\n                this.updateTable()\n            })\n        })\n\n        fire.database().ref('users/list').on('child_changed', snap => {\n            this.updateTable()\n        })\n\n        this.updateTable()\n    }\n\n    updateTable() {\n        this.setState({ playerStats: [] })\n        if (this.state.gameSet && (parseInt(this.state.numPlayers) - parseInt(this.state.numPackedPlayers) == 2)) {\n            if (this.getEnablePack()) {\n                this.storeEnableShow(true)\n            }\n        } else if (!this.state.gameSet) {\n            localStorage.clear()\n        }\n\n        fire.database().ref('users').child('list').once('value').then((snap) => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn) {\n                    var name = user.val().name\n                    var status = user.val().status\n                    if (user.val().cards != null) {\n                        var urls = user.val().cards.urls\n                    }\n                    if (status == 'SHOW' && urls != null) {\n                        this.setState({\n                            playerStats: this.state.playerStats.concat({ name, status, urls })\n                        })\n                    } else {\n                        this.setState({\n                            playerStats: this.state.playerStats.concat({ name, status })\n                        })\n                    }\n                }\n            })\n        })\n    }\n\n    logout() {\n        localStorage.clear()\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n            cards: null,\n            isLoggedIn: false,\n            status: 'BLIND'\n        }).then((u) => {\n            fire.auth().signOut().then((result) => {\n                this.setState({\n                    userState: null\n                })\n            })\n        })\n    }\n\n    resetGame(e) {\n        e.preventDefault()\n        localStorage.clear()\n        // update isGameSet to database after reset game\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['isGameSet'] = false;\n        updates['numPackedPlayers'] = 0;\n\n        this.setState({\n            gameSet: false,\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            playerStats: [],\n            cardIndicies: [],\n            numPackedPlayers: 0,\n            firstImgUrl: '',\n            secondImgUrl: '',\n            thirdImgUrl: '',\n            fourthImgUrl: ''\n        })\n\n        this.storeEnableSee(true)\n        this.storeEnablePack(false)\n        this.storeEnableShow(false)\n\n        ref.update(updates).then((u) => {\n            fire.database().ref('users').child('list').once('value').then((snap) => {\n                snap.forEach((user) => {\n                    if (user.val().isLoggedIn) {\n                        fire.database().ref('users/list/' + user.key).update({\n                            cards: null,\n                            status: 'BLIND'\n                        })\n                    }\n                })\n            })\n        })\n    }\n\n    generate(e) {\n        e.preventDefault()\n        // update isGameSet, numCards and numPlayers to database\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['isGameSet'] = true;\n        updates['numCardsPerPlayer'] = this.state.numCards\n        updates['numPlayers'] = this.state.numPlayers\n        ref.update(updates).then((u) => {\n            this.setState({\n                gameSet: true\n            })\n        })\n\n        let randomNumbers = new Set();\n        let cardsTrips = [];\n        for (let i = 0; i < 52; i++) {\n            var rand = Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n\n        var cardsSet = randomNumbers.values()\n        const cardsNum = this.state.numCards\n\n        for (let j = 0; j < this.state.numPlayers; j++) {\n            if (cardsNum == 1) {\n                cardsTrips[j] = [cardsSet.next().value];\n            } else if (cardsNum == 2) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 3) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 4) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            }\n        }\n\n        // update cards to database\n        var i = 0;\n        fire.database().ref('users').child('list').once('value').then((snap) => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn && i < this.state.numPlayers) {\n                    fire.database().ref('users/list/' + user.key).update({ cards: cardsTrips[i] })\n                    i++;\n                }\n            })\n        })\n    }\n\n    getCards(e) {\n        e.preventDefault()\n        if (this.state.gameSet == true) {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then((snap => {\n                this.storeCardIndicies(snap.val())\n                this.getRealCards()\n            })).then((u) => {\n                this.storeEnableSee(false)\n                this.storeEnablePack(true)\n                this.storeEnableShow(false)\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'SEEN' })\n            })\n        } else {\n            window.confirm(\"You need to setup a game before seeing your cards\")\n        }\n    }\n\n    getRealCards() {\n        const cardsNum = this.state.numCards\n        if (cardsNum == 1) {\n            this.getFirstRealCard()\n        } else if (cardsNum == 2) {\n            this.getSecondRealCard()\n        } else if (cardsNum == 3) {\n            this.getThirdRealCard()\n        } else if (cardsNum == 4) {\n            this.getFourthRealCard()\n        } else {\n            this.getThirdRealCard()\n        }\n    }\n\n    packed(e) {\n        e.preventDefault()\n        this.storePacked()\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['numPackedPlayers'] = parseInt(this.state.numPackedPlayers) + 1;\n        ref.update(updates).then((u) => {\n            this.setState({\n                numPackedPlayers: parseInt(this.state.numPackedPlayers) + 1\n            })\n        }).then((u) => {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'PACK' })\n        })\n    }\n\n    showCards(e) {\n        e.preventDefault()\n\n        this.storeEnableSee(false)\n        this.storeEnablePack(false)\n        this.storeEnableShow(false)\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'SHOW' })\n    }\n\n    renderStats() {\n        const stats = this.state.playerStats\n        const trimmedStats = stats.slice(Math.max(stats.length - parseInt(this.state.numPlayers), 0))\n        return (\n            <div style={table}>\n                <table align=\"center\" border=\"1\" width=\"500px\">\n                    <thead>\n                        <tr>\n                            <th><h2>Name</h2></th>\n                            <th><h2>Status</h2></th>\n                            <th><h2>Cards</h2></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {trimmedStats.map((row, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td><h3>{row.name}</h3></td>\n                                    <td style={{ 'background-color': this.getCellColor(row) }}><h3><font color=\"#FFF\">{row.status}</font></h3></td>\n                                    <td><h3>{this.getRealCardsMessage(row.urls)}</h3></td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>)\n    }\n\n    renderCardsPictures() {\n        return (\n            <div style={horizontal}>\n                {this.renderRealCards()}\n            </div>\n        )\n    }\n\n    renderRealCards() {\n        const cardsNum = this.state.numCards\n        if (this.state.gameSet) {\n            if (cardsNum == 1) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={this.getFirstCardURL()}></img>\n                    </div>\n                )\n            } else if (cardsNum == 2) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={this.getFirstCardURL()}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={this.getSecondCardURL()}></img>\n                    </div>\n                )\n            } else if (cardsNum == 3) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={this.getFirstCardURL()}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={this.getSecondCardURL()}></img>\n                        <img width=\"100\" height=\"125\" alt=\"third-card\" src={this.getThirdCardURL()}></img>\n                    </div>\n                )\n            } else if (cardsNum == 4) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={this.getFirstCardURL()}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={this.getSecondCardURL()}></img>\n                        <img width=\"100\" height=\"125\" alt=\"third-card\" src={this.getThirdCardURL()}></img>\n                        <img width=\"100\" height=\"125\" alt=\"fourth-card\" src={this.getFourthCardURL()}></img>\n                    </div>\n                )\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\" >\n                <div className=\"setup_game\" style={divStyle}>\n                    {!this.state.gameSet && <div style={divStyle}>\n                        <Box m={2}>\n                            <TextField id=\"numPlayers\" label=\"Number of players\" value={this.state.numPlayers} onChange={this.handleNumPlayersFieldChange} helperText=\"Please enter the number of players\" />\n                        </Box>\n                        <Box m={2}>\n                            <TextField id=\"numCards\" label=\"Number of cards\" value={this.state.numCards} onChange={this.handleNumCardsFieldChange} helperText=\"Please enter the number of cards\" />\n                        </Box>\n                        <Box m={2} pt={3}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.generate.bind(this)}>SETUP GAME</Button>\n                        </Box> </div>}\n                </div><br /><br />\n                <Box>\n                    <Button size=\"large\" variant=\"outlined\" color=\"primary\" >Hello, {this.state.displayName}</Button>\n                </Box>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.resetGame.bind(this)} >Reset Game</Button>\n                    </Box>\n                </div>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.getCards.bind(this)} disabled={!this.getEnableSee()} >See Cards</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button style={{ backgroundColor: 'crimson' }} variant=\"contained\" color=\"primary\" onClick={this.packed.bind(this)} disabled={!this.getEnablePack()} >Pack</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button style={{ backgroundColor: 'green' }} variant=\"contained\" color=\"primary\" onClick={this.showCards.bind(this)} disabled={!this.getEnableShow()} >Show Cards</Button>\n                    </Box>\n                </div>\n                <div style={horizontal}>\n                    <h2>Your cards are:</h2>\n                    {this.renderCardsPictures()}\n                </div>\n                <div ref=\"cardsStats\">\n                    {this.renderStats()}\n                </div>\n            </div >\n        );\n    }\n\n    handleNumPlayersFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        this.setState({\n            numPlayers: num\n        })\n    }\n\n    handleNumCardsFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        this.setState({\n            numCards: num\n        })\n    }\n\n    // Util methods\n    getCellColor(row) {\n        if (row.status == 'BLIND') {\n            return 'black'\n        } else if (row.status == 'PACK') {\n            return 'crimson'\n        } else if (row.status == 'SEEN') {\n            return 'royalblue'\n        } else {\n            return 'green'\n        }\n    }\n\n    getRealCardsMessage(urls) {\n        const cardsNum = this.state.numCards\n        if (this.state.gameSet && urls != null && urls.length > 0) {\n            if (cardsNum == 1) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={urls[0] || ''}></img>\n                    </div>\n                )\n            } else if (cardsNum == 2) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={urls[0] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={urls[1] || ''}></img>\n                    </div>\n                )\n            } else if (cardsNum == 3) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={urls[0] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={urls[1] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"third-card\" src={urls[2] || ''}></img>\n                    </div>\n                )\n            } else if (cardsNum == 4) {\n                return (\n                    <div style={horizontal}>\n                        <img width=\"100\" height=\"125\" alt=\"first-card\" src={urls[0] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"second-card\" src={urls[1] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"third-card\" src={urls[2] || ''}></img>\n                        <img width=\"100\" height=\"125\" alt=\"fourth-card\" src={urls[3] || ''}></img>\n                    </div>\n                )\n            }\n        }\n    }\n\n    getFirstRealCard() {\n        fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n            this.storeFirstCard(snap.val())\n        })).then((u) => {\n            fire.storage().ref('/').child(`${this.getFirstCard().fullName}.png`).getDownloadURL().then(url => {\n                this.storeFirstCardURL(url)\n            }).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({ 0: this.getFirstCardURL() })\n            })\n        })\n    }\n\n    getSecondRealCard() {\n        this.getFirstRealCard()\n        fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n            this.storeSecondCard(snap.val())\n        })).then((u) => {\n            fire.storage().ref('/').child(`${this.getSecondCard().fullName}.png`).getDownloadURL().then(url => {\n                this.storeSecondCardURL(url)\n            }).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({ 1: this.getSecondCardURL() })\n            })\n        });\n    }\n\n    getThirdRealCard() {\n        this.getFirstRealCard()\n        this.getSecondRealCard()\n        fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n            this.storeThirdCard(snap.val())\n        })).then((u) => {\n            fire.storage().ref('/').child(`${this.getThirdCard().fullName}.png`).getDownloadURL().then(url => {\n                this.storeThirdCardURL(url)\n            }).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({ 2: this.getThirdCardURL() })\n            })\n        });\n    }\n\n    getFourthRealCard() {\n        this.getFirstRealCard()\n        this.getSecondRealCard()\n        this.getThirdRealCard()\n        fire.database().ref('cards/' + this.state.cardIndicies[3]).once('value').then((snap => {\n            this.storeFourthCard(snap.val())\n        })).then((u) => {\n            fire.storage().ref('/').child(`${this.getFourthCard().fullName}.png`).getDownloadURL().then(url => {\n                this.storeFourthCardURL(url)\n            }).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards/urls').update({ 3: this.getFourthCardURL() })\n            })\n        });\n    }\n\n    // Store and get from local storage\n    storeCardIndicies(indicies) {\n        localStorage.setItem('cardIndicies', JSON.stringify(indicies))\n        this.setState({ cardIndicies: indicies })\n    }\n\n    storeFirstCard(card) {\n        localStorage.setItem('firstCard', JSON.stringify(card))\n        this.setState({ firstCard: card })\n    }\n\n    storeSecondCard(card) {\n        localStorage.setItem('secondCard', JSON.stringify(card))\n        this.setState({ secondCard: card })\n    }\n\n    storeThirdCard(card) {\n        localStorage.setItem('thirdCard', JSON.stringify(card))\n        this.setState({ thirdCard: card })\n    }\n\n    storeFourthCard(card) {\n        localStorage.setItem('fourthCard', JSON.stringify(card))\n        this.setState({ fourthCard: card })\n    }\n\n    storeFirstCardURL(url) {\n        localStorage.setItem('firstCardURL', JSON.stringify(url))\n        this.setState({ firstImgUrl: url })\n    }\n\n    storeSecondCardURL(url) {\n        localStorage.setItem('secondCardURL', JSON.stringify(url))\n        this.setState({ secondImgUrl: url })\n    }\n\n    storeThirdCardURL(url) {\n        localStorage.setItem('thirdCardURL', JSON.stringify(url))\n        this.setState({ thirdImgUrl: url })\n    }\n\n    storeFourthCardURL(url) {\n        localStorage.setItem('fourthCardURL', JSON.stringify(url))\n        this.setState({ fourthImgUrl: url })\n    }\n\n    storeEnableSee(val) {\n        localStorage.setItem('enableSee', JSON.stringify(val))\n        this.setState({ enableSee: val })\n    }\n\n    storeEnablePack(val) {\n        localStorage.setItem('enablePack', JSON.stringify(val))\n        this.setState({ enablePack: val })\n    }\n\n    storeEnableShow(val) {\n        localStorage.setItem('enableShow', JSON.stringify(val))\n        this.setState({ enableShow: val })\n    }\n\n    storePacked() {\n        localStorage.setItem('enableSee', JSON.stringify(false))\n        localStorage.setItem('enablePack', JSON.stringify(false))\n        localStorage.setItem('enableShow', JSON.stringify(false))\n        this.setState({\n            enableSee: false,\n            enablePack: false,\n            enableShow: false\n        })\n    }\n\n    getCardIndicies() {\n        return JSON.parse(localStorage.getItem('cardIndicies')) || []\n    }\n\n    getFirstCard() {\n        return JSON.parse(localStorage.getItem('firstCard')) || ''\n    }\n\n    getSecondCard() {\n        return JSON.parse(localStorage.getItem('secondCard')) || ''\n    }\n\n    getThirdCard() {\n        return JSON.parse(localStorage.getItem('thirdCard')) || ''\n    }\n\n    getFourthCard() {\n        return JSON.parse(localStorage.getItem('fourthCard')) || ''\n    }\n\n    getFirstCardURL() {\n        return JSON.parse(localStorage.getItem('firstCardURL')) || backCardImg\n    }\n\n    getSecondCardURL() {\n        return JSON.parse(localStorage.getItem('secondCardURL')) || backCardImg\n    }\n\n    getThirdCardURL() {\n        return JSON.parse(localStorage.getItem('thirdCardURL')) || backCardImg\n    }\n\n    getFourthCardURL() {\n        return JSON.parse(localStorage.getItem('fourthCardURL')) || backCardImg\n    }\n\n    getEnableSee() {\n        if (JSON.parse(localStorage.getItem('enableSee') == null)) {\n            return true\n        } else {\n            return JSON.parse(localStorage.getItem('enableSee'))\n        }\n    }\n\n    getEnablePack() {\n        if (JSON.parse(localStorage.getItem('enablePack') == null)) {\n            return false\n        } else {\n            return JSON.parse(localStorage.getItem('enablePack'))\n        }\n    }\n\n    getEnableShow() {\n        if (JSON.parse(localStorage.getItem('enableShow') == null)) {\n            return false\n        } else {\n            return JSON.parse(localStorage.getItem('enableShow'))\n        }\n    }\n}\n\nexport default Cards","import React, { Component } from 'react';\nimport './App.css';\nimport fire from './config/Fire'\nimport Login from './components/Login';\nimport Cards from './components/Cards';\nimport teenPattiLogo from './images/logo.png'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      user: {},\n    }\n  } \n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img src={teenPattiLogo} width=\"200\" alt=\"logo\"/>\n        <br />\n        <div>\n          {this.state.user ? (<Cards userState={this.state.user}/>) : (<Login/>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}