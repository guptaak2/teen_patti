{"version":3,"sources":["images/logo.png","config/Fire.js","components/Login.js","components/Cards.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","login","bind","signup","handleEmailFieldChange","handlePasswordFieldChange","handleFirstNameFieldChange","writeNewUser","state","firstName","email","password","emailHelperText","passwordHelperText","emailError","passwordError","e","preventDefault","auth","signInWithEmailAndPassword","this","then","u","database","ref","currentUser","uid","set","name","isLoggedIn","status","showCardsMessage","setState","catch","error","console","log","code","createUserWithEmailAndPassword","user","updateProfile","displayName","userId","updates","update","target","value","align","className","Box","TextField","id","label","onChange","helperText","type","m","pt","Button","variant","color","onClick","Component","divStyle","display","justifyContent","table","horizontal","Cards","logout","handleNumPlayersFieldChange","handleNumCardsFieldChange","generate","getCards","getRealCards","resetGame","packed","showCards","updateTable","scrollToBottom","getCellColor","getCardsMessage","cardIndicies","firstCard","secondCard","thirdCard","fourthCard","playerStats","message","numPlayers","numCards","userState","gameSet","refs","cardsStats","scrollIntoView","behavior","block","inline","onAuthStateChanged","on","snap","snapVal","val","isGameSet","parseInt","numCardsPerPlayer","child","once","forEach","concat","cards","signOut","result","key","randomNumbers","Set","cardsTrips","i","rand","Math","floor","random","add","cardsSet","values","cardsNum","j","next","num","msg","stats","trimmedStats","slice","max","length","style","border","width","map","row","index","size","backgroundColor","renderCards","renderStats","card","suit","App","authListener","src","teenPattiLogo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f08988f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f67306a7.png\";","import firebase from 'firebase'\n\nconst config = {\n    apiKey: \"AIzaSyB8PcAZcXkzuqhwiE1itEi3XZ6z6lFjsSM\",\n    authDomain: \"teen-patti-5a5fc.firebaseapp.com\",\n    databaseURL: \"https://teen-patti-5a5fc.firebaseio.com\",\n    projectId: \"teen-patti-5a5fc\",\n    storageBucket: \"teen-patti-5a5fc.appspot.com\",\n    messagingSenderId: \"478653158074\",\n    appId: \"1:478653158074:web:315fbf33f859b2a4632883\",\n    measurementId: \"G-8WZ36J1853\"\n  };\n\n  const fire = firebase.initializeApp(config)\n  export default fire;","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from '../config/Fire';\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.login = this.login.bind(this);\n\t\tthis.signup = this.signup.bind(this);\n\t\tthis.handleEmailFieldChange = this.handleEmailFieldChange.bind(this)\n\t\tthis.handlePasswordFieldChange = this.handlePasswordFieldChange.bind(this)\n\t\tthis.handleFirstNameFieldChange = this.handleFirstNameFieldChange.bind(this)\n\t\tthis.writeNewUser = this.writeNewUser.bind(this)\n\t\tthis.state = {\n\t\t\tfirstName: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\temailHelperText: 'Please enter your email',\n\t\t\tpasswordHelperText: 'Please enter your password',\n\t\t\temailError: false,\n\t\t\tpasswordError: false\n\t\t};\n\t}\n\n\tlogin(e) {\n\t\te.preventDefault();\n\t\tfire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n\t\t\tfire.database().ref('users/list/' + fire.auth().currentUser.uid).set({\n\t\t\t\temail: this.state.email,\n\t\t\t\tname: this.state.firstName,\n\t\t\t\tisLoggedIn: true,\n\t\t\t\tstatus: 'BLIND',\n\t\t\t\tshowCardsMessage: ''\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\temailError: false,\n\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\tpasswordError: false,\n\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t})\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\tif (error.code == 'auth/wrong-password') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordHelperText: \"Incorrect password. Please try again\",\n\t\t\t\t\tpasswordError: true\n\t\t\t\t})\n\t\t\t} else if (error.code == 'auth/invalid-email') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailHelperText: \"Invalid email. Please try again\",\n\t\t\t\t\temailError: true,\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t} else if (error.code == 'auth/user-not-found') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailHelperText: \"This user does not exist. Please signup.\",\n\t\t\t\t\temailError: true,\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\tsignup(e) {\n\t\te.preventDefault();\n\t\tfire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n\t\t\tif (u.user) {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t\tu.user.updateProfile({\n\t\t\t\t\tdisplayName: this.state.firstName\n\t\t\t\t})\n\t\t\t\tthis.writeNewUser()\n\t\t\t}\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\tif (error.code == 'auth/weak-password') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordError: true,\n\t\t\t\t\tpasswordHelperText: 'Password should be at least 6 characters'\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\twriteNewUser() {\n\t\tvar userId = fire.auth().currentUser.uid;\n\t\tvar updates = {};\n\t\tupdates['users/list/' + userId] = userId;\n\t\tfire.database().ref().update(updates);\n\t\tfire.database().ref('users/list/' + userId).set({\n\t\t\temail: this.state.email,\n\t\t\tname: this.state.firstName,\n\t\t\tisLoggedIn: true,\n\t\t\tstatus: 'BLIND',\n\t\t\tshowCardsMessage: ''\n\t\t}, function (error) {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(\"User save error\")\n\t\t\t} else {\n\t\t\t\tconsole.log(\"User saved successfully\")\n\t\t\t}\n\t\t});\n\t}\n\n\thandleEmailFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\temail: e.target.value\n\t\t})\n\t}\n\n\thandlePasswordFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tpassword: e.target.value\n\t\t})\n\t}\n\n\thandleFirstNameFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tfirstName: e.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div align=\"center\">\n\t\t\t\t<div className=\"Login\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"firstName\" label=\"First name (lowercase)\" value={this.state.firstName} onChange={this.handleFirstNameFieldChange} helperText=\"Please enter your first name\" />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"email\" label=\"Email\" value={this.state.email} onChange={this.handleEmailFieldChange} helperText={this.state.emailHelperText} error={this.state.emailError ? true : false} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"password\" type=\"password\" label=\"Password\" value={this.state.password} onChange={this.handlePasswordFieldChange} helperText={this.state.passwordHelperText} error={this.state.passwordError ? true : false} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box m={2} pt={3}>\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.login.bind(this)} >LOGIN</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<Button className=\"btn btn-success\" variant=\"contained\" color=\"primary\" onClick={this.signup.bind(this)} >SIGN UP</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\nimport '../App.css';\n\nconst divStyle = {\n    display: 'flex',\n    justifyContent: 'center'\n};\n\nconst table = {\n    display: 'grid'\n}\n\nconst horizontal = {\n    display: 'flex',\n    justifyContent: 'center'\n}\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.logout = this.logout.bind(this);\n        this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n        this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n        this.generate = this.generate.bind(this);\n        this.getCards = this.getCards.bind(this);\n        this.getRealCards = this.getRealCards.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n        this.packed = this.packed.bind(this);\n        this.showCards = this.showCards.bind(this);\n        this.updateTable = this.updateTable.bind(this);\n        this.scrollToBottom = this.scrollToBottom.bind(this);\n        this.getCellColor = this.getCellColor.bind(this);\n        this.getCardsMessage = this.getCardsMessage.bind(this);\n\n        this.state = {\n            cardIndicies: [],\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            playerStats: [],\n            message: '',\n            numPlayers: 0,\n            numCards: 3,\n            userState: this.props.userState,\n            displayName: '',\n            gameSet: true\n        }\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom()\n    }\n\n    scrollToBottom() {\n        const { cardsStats } = this.refs;\n        cardsStats.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" });\n    }\n\n    componentDidMount() {\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    displayName: user.displayName,\n                    userState: user\n                })\n            }\n        })\n\n        fire.database().ref('users').on('value', snap => {\n            var snapVal = snap.val()\n            this.setState({\n                gameSet: snapVal.isGameSet,\n                numCards: parseInt(snapVal.numCardsPerPlayer),\n                numPlayers: parseInt(snapVal.numPlayers)\n            })\n        })\n\n        fire.database().ref('users/list').on('child_changed', snap => {\n            this.updateTable()\n        })\n\n        this.updateTable()\n        this.scrollToBottom()\n    }\n\n    updateTable() {\n        this.setState({ playerStats: [] })\n        fire.database().ref('users').child('list').once('value').then((snap) => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn) {\n                    var name = user.val().name\n                    var status = user.val().status\n                    var message = user.val().showCardsMessage\n                    if (status == 'SHOW') {\n                        this.setState({\n                            playerStats: this.state.playerStats.concat({ name, status, message })\n                        })\n                    } else {\n                        this.setState({\n                            playerStats: this.state.playerStats.concat({ name, status })\n                        })\n                    }\n                }\n            })\n        })\n    }\n\n    logout() {\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n            cards: null,\n            isLoggedIn: false,\n            status: 'BLIND',\n            showCardsMessage: ''\n        }).then((u) => {\n            fire.auth().signOut().then((result) => {\n                this.setState({\n                    userState: null\n                })\n            })\n        })\n    }\n\n    resetGame(e) {\n        e.preventDefault()\n        // update isGameSet to database after reset game\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['isGameSet'] = false;\n\n        this.setState({\n            gameSet: false,\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            message: '',\n            playerStats: [],\n            cardIndicies: []\n        })\n\n        ref.update(updates).then((u) => {\n            fire.database().ref('users').child('list').once('value').then((snap) => {\n                snap.forEach((user) => {\n                    if (user.val().isLoggedIn) {\n                        fire.database().ref('users/list/' + user.key).update({\n                            cards: null,\n                            status: 'BLIND',\n                            showCardsMessage: ''\n                        })\n                    }\n                })\n            })\n        })\n    }\n\n    generate(e) {\n        e.preventDefault()\n        // update isGameSet, numCards and numPlayers to database\n        var updates = {};\n        var ref = fire.database().ref('users/')\n        updates['isGameSet'] = true;\n        updates['numCardsPerPlayer'] = this.state.numCards\n        updates['numPlayers'] = this.state.numPlayers\n        ref.update(updates).then((u) => {\n            this.setState({\n                gameSet: true\n            })\n        })\n\n        let randomNumbers = new Set();\n        let cardsTrips = [];\n        for (let i = 0; i < 52; i++) {\n            var rand = Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n\n        var cardsSet = randomNumbers.values()\n        const cardsNum = this.state.numCards\n\n        for (let j = 0; j < this.state.numPlayers; j++) {\n            if (cardsNum == 1) {\n                cardsTrips[j] = [cardsSet.next().value];\n            } else if (cardsNum == 2) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 3) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 4) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            }\n        }\n\n        // update cards to database\n        var i = 0;\n        fire.database().ref('users').child('list').once('value').then((snap) => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn && i < this.state.numPlayers) {\n                    fire.database().ref('users/list/' + user.key).update({ cards: cardsTrips[i] })\n                    i++;\n                }\n            })\n        })\n    }\n\n    getCards(e) {\n        e.preventDefault()\n        if (this.state.gameSet == true) {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then((snap => {\n                this.setState({ cardIndicies: snap.val() })\n                this.getRealCards()\n            })).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'SEEN' })\n            })\n        } else {\n            console.log(\"Trying to get cards when you're not in a game\")\n        }\n    }\n\n    getRealCards() {\n        const cardsNum = this.state.numCards\n        if (cardsNum == 1) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            }));\n        } else if (cardsNum == 2) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                }));\n            });\n        } else if (cardsNum == 3) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.setState({ thirdCard: snap.val() })\n                    }))\n                });\n            });\n        } else if (cardsNum == 4) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.setState({ thirdCard: snap.val() })\n                    })).then((u) => {\n                        fire.database().ref('cards/' + this.state.cardIndicies[3]).once('value').then((snap => {\n                            this.setState({ fourthCard: snap.val() })\n                        }));\n                    });\n                });\n            });\n        } else {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.setState({ thirdCard: snap.val() })\n                    }))\n                });\n            });\n        }\n    }\n\n    handleNumPlayersFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        this.setState({\n            numPlayers: num\n        })\n    }\n\n    handleNumCardsFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        this.setState({\n            numCards: num\n        })\n    }\n\n    packed(e) {\n        e.preventDefault()\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'PACK' })\n    }\n\n    showCards(e) {\n        e.preventDefault()\n        var msg = this.getCardsMessage()\n\n        this.setState({ message: msg })\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n            status: 'SHOW',\n            showCardsMessage: msg\n        })\n    }\n\n    renderStats() {\n        const stats = this.state.playerStats\n        const trimmedStats = stats.slice(Math.max(stats.length - parseInt(this.state.numPlayers), 0))\n        return (\n            <div style={table}>\n                <table align=\"center\" border=\"1\" width=\"500px\">\n                    <thead>\n                        <tr>\n                            <th><h2>Name</h2></th>\n                            <th><h2>Status</h2></th>\n                            <th><h2>Cards</h2></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {trimmedStats.map((row, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td><h3>{row.name}</h3></td>\n                                    <td style={{ 'background-color': this.getCellColor(row) }}><h3><font color=\"#FFF\">{row.status}</font></h3></td>\n                                    <td><h3>{row.message}</h3></td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>)\n    }\n\n    renderCards() {\n        return (\n            <div style={horizontal}>\n                <h2>{this.getCardsMessage()}</h2>\n            </div >\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"container\" >\n                <div className=\"setup_game\" style={divStyle}>\n                    {!this.state.gameSet && <div style={divStyle}>\n                        <Box m={2}>\n                            <TextField id=\"numPlayers\" label=\"Number of players\" value={this.state.numPlayers} onChange={this.handleNumPlayersFieldChange} helperText=\"Please enter the number of players\" />\n                        </Box>\n                        <Box m={2}>\n                            <TextField id=\"numCards\" label=\"Number of cards\" value={this.state.numCards} onChange={this.handleNumCardsFieldChange} helperText=\"Please enter the number of cards\" />\n                        </Box>\n                        <Box m={2} pt={3}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.generate.bind(this)}>SETUP GAME</Button>\n                        </Box> </div>}\n                </div><br /><br />\n                <Box>\n                    <Button size=\"large\" variant=\"outlined\" color=\"primary\" >Hello, {this.state.displayName}</Button>\n                </Box>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.resetGame.bind(this)} >Reset Game</Button>\n                    </Box>\n                </div>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.getCards.bind(this)} >See Cards</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={this.packed.bind(this)} >Pack</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button style={{ backgroundColor: 'green' }} variant=\"contained\" color=\"primary\" onClick={this.showCards.bind(this)} >Show Cards</Button>\n                    </Box>\n                </div>\n                <div style={horizontal}>\n                    <h2>Your cards are:</h2>\n                    {this.renderCards()}\n                </div>\n                <div ref=\"cardsStats\">\n                    {this.renderStats()}\n                </div>\n            </div >\n        );\n    }\n\n    // Util methods\n    getCellColor(row) {\n        if (row.status == 'BLIND') {\n            return 'black'\n        } else if (row.status == 'PACK') {\n            return 'crimson'\n        } else if (row.status == 'SEEN') {\n            return 'royalblue'\n        } else {\n            return 'green'\n        }\n    }\n\n    getCardsMessage() {\n        const cardsNum = this.state.numCards\n        var msg = '';\n        if (this.state.gameSet && this.state.cardIndicies.length > 0) {\n            if (cardsNum == 1) {\n                msg = msg + `${this.state.firstCard.card} ${this.state.firstCard.suit}`\n            } else if (cardsNum == 2) {\n                msg = msg + `${this.state.firstCard.card} ${this.state.firstCard.suit}, ${this.state.secondCard.card} ${this.state.secondCard.suit}`\n            } else if (cardsNum == 3) {\n                msg = msg + `${this.state.firstCard.card} ${this.state.firstCard.suit}, ${this.state.secondCard.card} ${this.state.secondCard.suit}, ${this.state.thirdCard.card} ${this.state.thirdCard.suit}`\n            } else if (cardsNum == 4) {\n                msg = msg + `${this.state.firstCard.card} ${this.state.firstCard.suit}, ${this.state.secondCard.card} ${this.state.secondCard.suit}, ${this.state.thirdCard.card} ${this.state.thirdCard.suit}, ${this.state.fourthCard.card} ${this.state.fourthCard.suit}`\n            }\n        }\n\n        return msg\n    }\n}\n\nexport default Cards","import React, { Component } from 'react';\nimport './App.css';\nimport fire from './config/Fire'\nimport Login from './components/Login';\nimport Cards from './components/Cards';\nimport teenPattiLogo from './images/logo.png'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      user: {},\n    }\n  } \n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img src={teenPattiLogo} width=\"200\" alt=\"logo-image\"/>\n        <br />\n        <div>\n          {this.state.user ? (<Cards userState={this.state.user}/>) : (<Login/>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}