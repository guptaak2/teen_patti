{"version":3,"sources":["images/logo.png","config/Fire.js","components/Login.js","components/Cards.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","login","bind","signup","handleEmailFieldChange","handlePasswordFieldChange","handleFirstNameFieldChange","writeNewUser","state","firstName","email","password","emailHelperText","passwordHelperText","emailError","passwordError","e","preventDefault","auth","signInWithEmailAndPassword","this","then","u","database","ref","currentUser","uid","set","name","isLoggedIn","status","setState","catch","error","console","log","code","createUserWithEmailAndPassword","user","updateProfile","displayName","userId","updates","update","target","value","align","className","Box","TextField","id","label","onChange","helperText","type","m","pt","Button","variant","color","onClick","Component","divStyle","display","justifyContent","table","horizontal","Cards","logout","handleNumPlayersFieldChange","handleNumCardsFieldChange","generate","getCards","getRealCards","resetGame","getMessages","packed","showCards","updateTable","cardIndicies","firstCard","secondCard","thirdCard","fourthCard","cards","messages","playerStats","numPlayers","numCards","userState","gameSet","onAuthStateChanged","on","snap","val","child","forEach","concat","map","message","key","signOut","result","once","randomNumbers","Set","cardsTrips","i","rand","Math","floor","random","add","cardsSet","values","cardsNum","j","next","style","card","suit","num","stats","border","width","row","size","renderCards","renderStats","App","authListener","src","teenPattiLogo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51229e1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f67306a7.png\";","import firebase from 'firebase'\n\nconst config = {\n    apiKey: \"AIzaSyB8PcAZcXkzuqhwiE1itEi3XZ6z6lFjsSM\",\n    authDomain: \"teen-patti-5a5fc.firebaseapp.com\",\n    databaseURL: \"https://teen-patti-5a5fc.firebaseio.com\",\n    projectId: \"teen-patti-5a5fc\",\n    storageBucket: \"teen-patti-5a5fc.appspot.com\",\n    messagingSenderId: \"478653158074\",\n    appId: \"1:478653158074:web:315fbf33f859b2a4632883\",\n    measurementId: \"G-8WZ36J1853\"\n  };\n\n  const fire = firebase.initializeApp(config)\n  export default fire;","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from '../config/Fire';\n\nvar cards = [];\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.login = this.login.bind(this);\n\t\tthis.signup = this.signup.bind(this);\n\t\tthis.handleEmailFieldChange = this.handleEmailFieldChange.bind(this)\n\t\tthis.handlePasswordFieldChange = this.handlePasswordFieldChange.bind(this)\n\t\tthis.handleFirstNameFieldChange = this.handleFirstNameFieldChange.bind(this)\n\t\tthis.writeNewUser = this.writeNewUser.bind(this)\n\t\tthis.state = {\n\t\t\tfirstName: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\temailHelperText: 'Please enter your email',\n\t\t\tpasswordHelperText: 'Please enter your password',\n\t\t\temailError: false,\n\t\t\tpasswordError: false\n\t\t};\n\t}\n\n\tlogin(e) {\n\t\te.preventDefault();\n\t\tfire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n\t\t\tfire.database().ref('users/list/' + fire.auth().currentUser.uid).set({\n\t\t\t\temail: this.state.email,\n\t\t\t\tname: this.state.firstName,\n\t\t\t\tisLoggedIn: true,\n\t\t\t\tstatus: 'BLIND'\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\temailError: false,\n\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\tpasswordError: false,\n\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t})\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\tif (error.code == 'auth/wrong-password') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordHelperText: \"Incorrect password. Please try again\",\n\t\t\t\t\tpasswordError: true\n\t\t\t\t})\n\t\t\t} else if (error.code == 'auth/invalid-email') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailHelperText: \"Invalid email. Please try again\",\n\t\t\t\t\temailError: true,\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t} else if (error.code == 'auth/user-not-found') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailHelperText: \"This user does not exist. Please signup.\",\n\t\t\t\t\temailError: true,\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\tsignup(e) {\n\t\te.preventDefault();\n\t\tfire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n\t\t\tif (u.user) {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordError: false,\n\t\t\t\t\tpasswordHelperText: 'Please enter your password'\n\t\t\t\t})\n\t\t\t\tu.user.updateProfile({\n\t\t\t\t\tdisplayName: this.state.firstName\n\t\t\t\t})\n\t\t\t\tthis.writeNewUser()\n\t\t\t}\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\tif (error.code == 'auth/weak-password') {\n\t\t\t\tthis.setState({\n\t\t\t\t\temailError: false,\n\t\t\t\t\temailHelperText: 'Please enter your email',\n\t\t\t\t\tpasswordError: true,\n\t\t\t\t\tpasswordHelperText: 'Password should be at least 6 characters'\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\twriteNewUser() {\n\t\tvar userId = fire.auth().currentUser.uid;\n\t\tvar updates = {};\n\t\tupdates['users/list/' + userId] = userId;\n\t\tfire.database().ref().update(updates);\n\t\tfire.database().ref('users/list/' + userId).set({\n\t\t\temail: this.state.email,\n\t\t\tname: this.state.firstName,\n\t\t\tisLoggedIn: true,\n\t\t\tstatus: 'BLIND'\n\t\t}, function (error) {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(\"User save error\")\n\t\t\t} else {\n\t\t\t\tconsole.log(\"User saved successfully\")\n\t\t\t}\n\t\t});\n\t}\n\n\thandleEmailFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\temail: e.target.value\n\t\t})\n\t}\n\n\thandlePasswordFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tpassword: e.target.value\n\t\t})\n\t}\n\n\thandleFirstNameFieldChange(e) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tfirstName: e.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div align=\"center\">\n\t\t\t\t<div className=\"Login\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"firstName\" label=\"First name (lowercase)\" value={this.state.firstName} onChange={this.handleFirstNameFieldChange} helperText=\"Please enter your first name\" />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"email\" label=\"Email\" value={this.state.email} onChange={this.handleEmailFieldChange} helperText={this.state.emailHelperText} error={this.state.emailError ? true : false} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<TextField id=\"password\" type=\"password\" label=\"Password\" value={this.state.password} onChange={this.handlePasswordFieldChange} helperText={this.state.passwordHelperText} error={this.state.passwordError ? true : false} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box m={2} pt={3}>\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.login.bind(this)} >LOGIN</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<Button className=\"btn btn-success\" variant=\"contained\" color=\"primary\" onClick={this.signup.bind(this)} >SIGN UP</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport fire from 'firebase'\nimport '../App.css';\n\nconst divStyle = {\n    display: 'flex',\n    justifyContent: 'center'\n};\n\nconst table = {\n    display: 'grid'\n}\n\nconst horizontal = {\n    display: 'flex',\n    justifyContent: 'center'\n}\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n\n        this.logout = this.logout.bind(this);\n        this.handleNumPlayersFieldChange = this.handleNumPlayersFieldChange.bind(this);\n        this.handleNumCardsFieldChange = this.handleNumCardsFieldChange.bind(this);\n        this.generate = this.generate.bind(this);\n        this.getCards = this.getCards.bind(this);\n        this.getRealCards = this.getRealCards.bind(this);\n        this.resetGame = this.resetGame.bind(this);\n        this.getMessages = this.getMessages.bind(this);\n        this.packed = this.packed.bind(this);\n        this.showCards = this.showCards.bind(this);\n        this.updateTable = this.updateTable.bind(this);\n\n        this.state = {\n            cardIndicies: [],\n            firstCard: [],\n            secondCard: [],\n            thirdCard: [],\n            fourthCard: [],\n            cards: [],\n            messages: [],\n            playerStats: [],\n            numPlayers: '',\n            numCards: 3,\n            userState: this.props.userState,\n            gameSet: true\n        }\n    }\n\n    componentDidMount() {\n        fire.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    userState: user\n                })\n            }\n        })\n\n        fire.database().ref('users/isGameSet').on('value', snap => {\n            this.setState({ gameSet: snap.val() })\n        })\n\n        fire.database().ref('users/numCardsPerPlayer').on('value', snap => {\n            this.setState({ numCards: snap.val() })\n        })\n\n        // fire.database().ref('messages').on('value', snap => {\n        //     this.setState({ messages: [] })\n        //     snap.forEach((msg) => {\n        //         this.setState({\n        //             messages: this.state.messages.concat(msg.val().message)\n        //         });\n        //     })\n        // })\n\n        this.updateTable()\n    }\n\n    updateTable() {\n        let id = 0;\n        fire.database().ref('users').child('list').on('value', snap => {\n            this.setState({ playerStats: [] })\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn) {\n                    var name = user.val().name\n                    var status = user.val().status\n                    this.setState({\n                        playerStats: this.state.playerStats.concat({ id, name, status })\n                    })\n                    id++;\n                }\n            })\n        })\n    }\n\n    getMessages() {\n        return (\n            <div>\n                {this.state.messages.map((message, key) => {\n                    return (\n                        <h3 key={key}>{message}</h3>\n                    )\n                })}\n            </div>\n        )\n    }\n\n    logout() {\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({\n            isLoggedIn: false\n        })\n\n        fire.auth().signOut().then((result) => {\n            this.setState({\n                userState: null\n            })\n        })\n    }\n\n    resetGame(e) {\n        e.preventDefault()\n\n        // update isGameSet to database after reset game\n        var updates = {};\n        updates['users/' + 'isGameSet'] = false;\n        fire.database().ref().update(updates).then((u) => {\n            var updates = {};\n            updates['messages/'] = null;\n            fire.database().ref().update(updates).then((u) => {\n                fire.database().ref('users').child('list').once('value', snap => {\n                    snap.forEach((user) => {\n                        if (user.val().isLoggedIn) {\n                            fire.database().ref('users/list/' + user.key).update({ cards: null })\n                        }\n                    })\n                }).then((u) => {\n                    this.setState({\n                        playerStats: [],\n                        gameSet: false,\n                        firstCard: [],\n                        secondCard: [],\n                        thirdCard: [],\n                        fourthCard: []\n                    })\n                })\n            })\n        })\n    }\n\n    generate(e) {\n        e.preventDefault()\n\n        let randomNumbers = new Set();\n        let cardsTrips = [];\n        for (let i = 0; i < 52; i++) {\n            var rand = Math.floor((Math.random() * (51)));\n            randomNumbers.add(rand);\n        }\n\n        var cardsSet = randomNumbers.values()\n        const cardsNum = this.state.numCards\n\n        for (let j = 0; j < this.state.numPlayers; j++) {\n            if (cardsNum == 1) {\n                cardsTrips[j] = [cardsSet.next().value];\n            } else if (cardsNum == 2) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 3) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else if (cardsNum == 4) {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            } else {\n                cardsTrips[j] = [cardsSet.next().value, cardsSet.next().value, cardsSet.next().value];\n            }\n        }\n\n        this.setState({ gameSet: true })\n\n        // update isGameSet to database\n        var updates = {};\n        updates['users/' + 'isGameSet'] = true;\n        fire.database().ref().update(updates);\n\n        // update cards to database\n        var i = 0;\n        fire.database().ref('users').child('list').once('value', snap => {\n            snap.forEach((user) => {\n                if (user.val().isLoggedIn) {\n                    fire.database().ref('users/list/' + user.key).update({ cards: cardsTrips[i] })\n                    i++;\n                }\n            })\n        });\n    }\n\n    getCards(e) {\n        e.preventDefault()\n        if (this.state.gameSet == true) {\n            fire.database().ref('users/list/' + fire.auth().currentUser.uid + '/cards').once('value').then((snap => {\n                this.setState({ cardIndicies: snap.val() })\n                this.getRealCards()\n            })).then((u) => {\n                fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'SEEN' })\n            });\n        } else {\n            console.log(\"Trying to get cards when you're not in a game\")\n        }\n    }\n\n    getRealCards() {\n        const cardsNum = this.state.numCards\n        if (cardsNum == 1) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            }));\n        } else if (cardsNum == 2) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                }));\n            });\n        } else if (cardsNum == 3) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.setState({ thirdCard: snap.val() })\n                    }))\n                });\n            });\n        } else if (cardsNum == 4) {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.setState({ thirdCard: snap.val() })\n                    })).then((u) => {\n                        fire.database().ref('cards/' + this.state.cardIndicies[3]).once('value').then((snap => {\n                            this.setState({ fourthCard: snap.val() })\n                        }));\n                    });\n                });\n            });\n        } else {\n            fire.database().ref('cards/' + this.state.cardIndicies[0]).once('value').then((snap => {\n                this.setState({ firstCard: snap.val() })\n            })).then((u) => {\n                fire.database().ref('cards/' + this.state.cardIndicies[1]).once('value').then((snap => {\n                    this.setState({ secondCard: snap.val() })\n                })).then((u) => {\n                    fire.database().ref('cards/' + this.state.cardIndicies[2]).once('value').then((snap => {\n                        this.setState({ thirdCard: snap.val() })\n                    }))\n                });\n            });\n        }\n\n        // fire.database().ref('messages/').push({ message: this.state.userState.displayName + ' is SEEN' })\n    }\n\n    renderCards() {\n        const cardsNum = this.state.numCards\n        return (\n            <div style={horizontal}>\n                {cardsNum == 1 &&\n                    <div style={horizontal}><h2>{this.state.firstCard.card} {this.state.firstCard.suit}</h2></div>\n                }\n\n                {cardsNum == 2 &&\n                    <div style={horizontal}>\n                        <h2>{this.state.firstCard.card} {this.state.firstCard.suit}</h2><h2>{this.state.secondCard.card} {this.state.secondCard.suit}</h2>\n                    </div>\n                }\n\n                {\n                    cardsNum == 3 &&\n                    <div style={horizontal}>\n                        <h2>{this.state.firstCard.card} {this.state.firstCard.suit}</h2> <h2>{this.state.secondCard.card} {this.state.secondCard.suit}</h2> <h2>{this.state.thirdCard.card} {this.state.thirdCard.suit}</h2>\n                    </div>\n                }\n\n                {\n                    cardsNum == 4 &&\n                    <div style={horizontal}>\n                        <h2>{this.state.firstCard.card} {this.state.firstCard.suit}</h2><h2>{this.state.secondCard.card} {this.state.secondCard.suit}</h2><h2>{this.state.thirdCard.card} {this.state.thirdCard.suit}</h2><h2>{this.state.fourthCard.card} {this.state.fourthCard.suit}</h2>\n                    </div>\n                }\n            </div >\n        )\n    }\n\n    handleNumPlayersFieldChange(e) {\n        e.preventDefault()\n        this.setState({\n            numPlayers: e.target.value\n        })\n    }\n\n    handleNumCardsFieldChange(e) {\n        e.preventDefault()\n        const num = e.target.value\n        // update numCards to database\n        var updates = {};\n        updates['users/' + 'numCardsPerPlayer'] = num;\n        fire.database().ref().update(updates).then((u) => {\n            this.setState({\n                numCards: num\n            })\n        })\n    }\n\n    packed(e) {\n        e.preventDefault()\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'PACK' }).then((u) => {\n            this.updateTable()\n        })\n        // fire.database().ref('messages/').push({ message: this.state.userState.displayName + ' is PACK' })\n    }\n\n    showCards(e) {\n        e.preventDefault()\n        const cardsNum = this.state.numCards\n        var message = `${this.state.userState.displayName} is SHOW and their cards are: `\n        if (cardsNum == 1) {\n            message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit}`\n        } else if (cardsNum == 2) {\n            message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit}`\n        } else if (cardsNum == 3) {\n            message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit} ${this.state.thirdCard.card} ${this.state.thirdCard.suit}`\n        } else if (cardsNum == 4) {\n            message = message + `${this.state.firstCard.card} ${this.state.firstCard.suit} ${this.state.secondCard.card} ${this.state.secondCard.suit} ${this.state.thirdCard.card} ${this.state.thirdCard.suit} ${this.state.fourthCard.card} ${this.state.fourthCard.suit}`\n        }\n\n        fire.database().ref('users/list/' + fire.auth().currentUser.uid).update({ status: 'SHOW' }).then((u) => {\n            this.updateTable()\n        })\n        // fire.database().ref('messages/').push({ message: message })\n    }\n\n    renderStats() {\n        const stats = this.state.playerStats\n        return (\n            <div style={table}>\n                <table align=\"center\" border=\"1\" width=\"250px\">\n                    <thead>\n                        <tr>\n                            <th><h2>Name</h2></th>\n                            <th><h2>Status</h2></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {stats.map((row) => {\n                            return (\n                                <tr key={row.id}>\n                                    <td><h3>{row.name}</h3></td>\n                                    <td><h3>{row.status}</h3></td>\n                                </tr>\n                            )\n                        }\n                        )}\n                    </tbody>\n                </table>\n            </div>)\n    }\n\n    render() {\n        return (\n            <div className=\"container\" >\n                <div className=\"setup_game\" style={divStyle}>\n                    {!this.state.gameSet && <div style={divStyle}>\n                        <Box m={2}>\n                            <TextField id=\"numPlayers\" label=\"Number of players\" value={this.state.numPlayers} onChange={this.handleNumPlayersFieldChange} helperText=\"Please enter the number of players\" />\n                        </Box>\n                        <Box m={2}>\n                            <TextField id=\"numCards\" label=\"Number of cards\" value={this.state.numCards} onChange={this.handleNumCardsFieldChange} helperText=\"Please enter the number of cards\" />\n                        </Box>\n                        <Box m={2} pt={3}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.generate.bind(this)}>SETUP GAME</Button>\n                        </Box> </div>}\n                </div><br /><br />\n                <Box>\n                    <Button size=\"large\" variant=\"outlined\" color=\"primary\" >Hello, {this.props.userState.displayName}</Button>\n                </Box>\n                <div className=\"logout_reset\" style={divStyle}>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.logout.bind(this)} >Logout</Button>\n                    </Box>\n                    <Box m={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.resetGame.bind(this)} >Reset Game</Button>\n                    </Box>\n                </div>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.getCards.bind(this)} >See Cards</Button>\n                </Box>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.packed.bind(this)} >Pack</Button>\n                </Box>\n                <Box m={2}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.showCards.bind(this)} >Show Cards</Button>\n                </Box>\n                <div style={horizontal}>\n                    <h2>Your cards are:</h2>\n                    {this.renderCards()}\n                </div>\n                {/* {this.getMessages()} */}\n                {this.renderStats()}\n            </div >\n        );\n    }\n}\n\nexport default Cards","import React, { Component } from 'react';\nimport './App.css';\nimport fire from './config/Fire'\nimport Login from './components/Login';\nimport Cards from './components/Cards';\nimport teenPattiLogo from './images/logo.png'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      user: {},\n    }\n  } \n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img src={teenPattiLogo} width=\"200\" alt=\"logo-image\"/>\n        <br />\n        <div>\n          {this.state.user ? (<Cards userState={this.state.user} />) : (<Login/>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}